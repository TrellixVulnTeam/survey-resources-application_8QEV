{"version":3,"file":"refresh-session.service.d.ts","sources":["refresh-session.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AACA","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { AuthStateService } from '../authState/auth-state.service';\r\nimport { AuthWellKnownService } from '../config/auth-well-known.service';\r\nimport { ConfigurationProvider } from '../config/config.provider';\r\nimport { FlowsDataService } from '../flows/flows-data.service';\r\nimport { RefreshSessionIframeService } from '../iframe/refresh-session-iframe.service';\r\nimport { SilentRenewService } from '../iframe/silent-renew.service';\r\nimport { LoggerService } from '../logging/logger.service';\r\nimport { FlowHelper } from '../utils/flowHelper/flow-helper.service';\r\nimport { RefreshSessionRefreshTokenService } from './refresh-session-refresh-token.service';\r\nexport declare const MAX_RETRY_ATTEMPTS = 3;\r\nexport declare class RefreshSessionService {\r\n    private flowHelper;\r\n    private configurationProvider;\r\n    private flowsDataService;\r\n    private loggerService;\r\n    private silentRenewService;\r\n    private authStateService;\r\n    private authWellKnownService;\r\n    private refreshSessionIframeService;\r\n    private refreshSessionRefreshTokenService;\r\n    constructor(flowHelper: FlowHelper, configurationProvider: ConfigurationProvider, flowsDataService: FlowsDataService, loggerService: LoggerService, silentRenewService: SilentRenewService, authStateService: AuthStateService, authWellKnownService: AuthWellKnownService, refreshSessionIframeService: RefreshSessionIframeService, refreshSessionRefreshTokenService: RefreshSessionRefreshTokenService);\r\n    forceRefreshSession(customParams?: {\r\n        [key: string]: string | number | boolean;\r\n    }): Observable<{\r\n        idToken: string;\r\n        accessToken: string;\r\n    }>;\r\n    private startRefreshSession;\r\n    private timeoutRetryStrategy;\r\n}\r\n"]}