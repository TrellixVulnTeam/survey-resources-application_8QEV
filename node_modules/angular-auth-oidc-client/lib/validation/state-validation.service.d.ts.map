{"version":3,"file":"state-validation.service.d.ts","sources":["state-validation.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["import { ConfigurationProvider } from '../config/config.provider';\r\nimport { CallbackContext } from '../flows/callback-context';\r\nimport { LoggerService } from '../logging/logger.service';\r\nimport { StoragePersistanceService } from '../storage/storage-persistance.service';\r\nimport { EqualityService } from '../utils/equality/equality.service';\r\nimport { FlowHelper } from '../utils/flowHelper/flow-helper.service';\r\nimport { TokenHelperService } from '../utils/tokenHelper/oidc-token-helper.service';\r\nimport { StateValidationResult } from './state-validation-result';\r\nimport { TokenValidationService } from './token-validation.service';\r\nexport declare class StateValidationService {\r\n    private storagePersistanceService;\r\n    private tokenValidationService;\r\n    private tokenHelperService;\r\n    private loggerService;\r\n    private configurationProvider;\r\n    private equalityService;\r\n    private flowHelper;\r\n    constructor(storagePersistanceService: StoragePersistanceService, tokenValidationService: TokenValidationService, tokenHelperService: TokenHelperService, loggerService: LoggerService, configurationProvider: ConfigurationProvider, equalityService: EqualityService, flowHelper: FlowHelper);\r\n    getValidatedStateResult(callbackContext: CallbackContext): StateValidationResult;\r\n    validateState(callbackContext: any): StateValidationResult;\r\n    private isIdTokenAfterRefreshTokenRequestValid;\r\n    private handleSuccessfulValidation;\r\n    private handleUnsuccessfulValidation;\r\n}\r\n"]}