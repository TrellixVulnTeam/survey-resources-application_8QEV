{"version":3,"file":"check-auth.service.d.ts","sources":["check-auth.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["import { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthStateService } from './authState/auth-state.service';\r\nimport { AutoLoginService } from './auto-login/auto-login-service';\r\nimport { CallbackService } from './callback/callback.service';\r\nimport { PeriodicallyTokenCheckService } from './callback/periodically-token-check.service';\r\nimport { RefreshSessionService } from './callback/refresh-session.service';\r\nimport { ConfigurationProvider } from './config/config.provider';\r\nimport { CheckSessionService } from './iframe/check-session.service';\r\nimport { SilentRenewService } from './iframe/silent-renew.service';\r\nimport { LoggerService } from './logging/logger.service';\r\nimport { PopUpService } from './login/popup/popup.service';\r\nimport { UserService } from './userData/user-service';\r\nexport declare class CheckAuthService {\r\n    private readonly doc;\r\n    private checkSessionService;\r\n    private silentRenewService;\r\n    private userService;\r\n    private loggerService;\r\n    private configurationProvider;\r\n    private authStateService;\r\n    private callbackService;\r\n    private refreshSessionService;\r\n    private periodicallyTokenCheckService;\r\n    private popupService;\r\n    private autoLoginService;\r\n    private router;\r\n    constructor(doc: any, checkSessionService: CheckSessionService, silentRenewService: SilentRenewService, userService: UserService, loggerService: LoggerService, configurationProvider: ConfigurationProvider, authStateService: AuthStateService, callbackService: CallbackService, refreshSessionService: RefreshSessionService, periodicallyTokenCheckService: PeriodicallyTokenCheckService, popupService: PopUpService, autoLoginService: AutoLoginService, router: Router);\r\n    checkAuth(url?: string): Observable<boolean>;\r\n    checkAuthIncludingServer(): Observable<boolean>;\r\n    private startCheckSessionAndValidation;\r\n}\r\n"]}