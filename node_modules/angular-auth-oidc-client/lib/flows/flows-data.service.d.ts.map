{"version":3,"file":"flows-data.service.d.ts","sources":["flows-data.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["import { ConfigurationProvider } from '../config/config.provider';\r\nimport { LoggerService } from '../logging/logger.service';\r\nimport { StoragePersistanceService } from '../storage/storage-persistance.service';\r\nimport { RandomService } from './random/random.service';\r\nexport declare class FlowsDataService {\r\n    private storagePersistanceService;\r\n    private randomService;\r\n    private configurationProvider;\r\n    private loggerService;\r\n    constructor(storagePersistanceService: StoragePersistanceService, randomService: RandomService, configurationProvider: ConfigurationProvider, loggerService: LoggerService);\r\n    createNonce(): string;\r\n    setNonce(nonce: string): void;\r\n    getAuthStateControl(): any;\r\n    setAuthStateControl(authStateControl: string): void;\r\n    getExistingOrCreateAuthStateControl(): any;\r\n    setSessionState(sessionState: any): void;\r\n    resetStorageFlowData(): void;\r\n    getCodeVerifier(): any;\r\n    createCodeVerifier(): string;\r\n    isSilentRenewRunning(): boolean;\r\n    setSilentRenewRunning(): void;\r\n    resetSilentRenewRunning(): void;\r\n}\r\n"]}