{"version":3,"file":"storage-persistance.service.d.ts","sources":["storage-persistance.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ConfigurationProvider } from '../config/config.provider';\r\nimport { AbstractSecurityStorage } from './abstract-security-storage';\r\nexport declare type StorageKeys = 'authnResult' | 'authzData' | 'access_token_expires_at' | 'authWellKnownEndPoints' | 'userData' | 'authNonce' | 'codeVerifier' | 'authStateControl' | 'session_state' | 'storageSilentRenewRunning' | 'storageCustomRequestParams';\r\nexport declare class StoragePersistanceService {\r\n    private readonly oidcSecurityStorage;\r\n    private readonly configurationProvider;\r\n    constructor(oidcSecurityStorage: AbstractSecurityStorage, configurationProvider: ConfigurationProvider);\r\n    read(key: StorageKeys): any;\r\n    write(key: StorageKeys, value: any): void;\r\n    remove(key: StorageKeys): void;\r\n    resetStorageFlowData(): void;\r\n    resetAuthStateInStorage(): void;\r\n    getAccessToken(): any;\r\n    getIdToken(): any;\r\n    getRefreshToken(): any;\r\n    private createKeyWithPrefix;\r\n}\r\n"]}