{"version":3,"file":"url.service.d.ts","sources":["url.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ConfigurationProvider } from '../../config/config.provider';\r\nimport { FlowsDataService } from '../../flows/flows-data.service';\r\nimport { LoggerService } from '../../logging/logger.service';\r\nimport { StoragePersistanceService } from '../../storage/storage-persistance.service';\r\nimport { TokenValidationService } from '../../validation/token-validation.service';\r\nimport { FlowHelper } from '../flowHelper/flow-helper.service';\r\nexport declare class UrlService {\r\n    private readonly configurationProvider;\r\n    private readonly loggerService;\r\n    private readonly flowsDataService;\r\n    private readonly flowHelper;\r\n    private tokenValidationService;\r\n    private storagePersistanceService;\r\n    constructor(configurationProvider: ConfigurationProvider, loggerService: LoggerService, flowsDataService: FlowsDataService, flowHelper: FlowHelper, tokenValidationService: TokenValidationService, storagePersistanceService: StoragePersistanceService);\r\n    getUrlParameter(urlToCheck: any, name: any): string;\r\n    isCallbackFromSts(currentUrl: string): boolean;\r\n    getRefreshSessionSilentRenewUrl(customParams?: {\r\n        [key: string]: string | number | boolean;\r\n    }): string;\r\n    getAuthorizeParUrl(requestUri: string): string;\r\n    getAuthorizeUrl(customParams?: {\r\n        [key: string]: string | number | boolean;\r\n    }): string;\r\n    createEndSessionUrl(idTokenHint: string): string;\r\n    createRevocationEndpointBodyAccessToken(token: any): string;\r\n    createRevocationEndpointBodyRefreshToken(token: any): string;\r\n    getRevocationEndpointUrl(): string;\r\n    createBodyForCodeFlowCodeRequest(code: string, customTokenParams?: {\r\n        [p: string]: string | number | boolean;\r\n    }): string;\r\n    createBodyForCodeFlowRefreshTokensRequest(refreshToken: string, customParams?: {\r\n        [key: string]: string | number | boolean;\r\n    }): string;\r\n    createBodyForParCodeFlowRequest(customParamsRequest?: {\r\n        [key: string]: string | number | boolean;\r\n    }): string;\r\n    private createAuthorizeUrl;\r\n    private createUrlImplicitFlowWithSilentRenew;\r\n    private createUrlCodeFlowWithSilentRenew;\r\n    private createUrlImplicitFlowAuthorize;\r\n    private createUrlCodeFlowAuthorize;\r\n    private getRedirectUrl;\r\n    private getSilentRenewUrl;\r\n    private getPostLogoutRedirectUrl;\r\n    private getClientId;\r\n    private composeCustomParams;\r\n}\r\n"]}