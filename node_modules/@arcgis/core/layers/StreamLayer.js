/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../core/global.js";import"../core/has.js";import{isSome as t}from"../core/maybe.js";import o from"../core/Logger.js";import{Integer as i}from"../core/accessorSupport/ensureType.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import{JSONMap as n}from"../core/jsonMap.js";import{reader as p}from"../core/accessorSupport/decorators/reader.js";import{createTypeReader as a}from"../core/accessorSupport/extensions/serializableProperty/reader.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{writer as d}from"../core/accessorSupport/decorators/writer.js";import m from"../core/Error.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import u from"../geometry/SpatialReference.js";import y from"../geometry/Extent.js";import"../geometry.js";import{fixRendererFields as c,fixTimeInfoFields as f}from"./support/fieldUtils.js";import h from"../PopupTemplate.js";import g from"../request.js";import{symbolTypesRenderer as j}from"../symbols.js";import S from"./Layer.js";import{MultiOriginJSONMixin as b}from"../core/MultiOriginJSONSupport.js";import v from"../symbols/support/ElevationInfo.js";import{labelsVisible as w,legendEnabled as I,maxScale as R,minScale as x,popupEnabled as F,screenSizePerspectiveEnabled as T,url as D}from"./support/commonProperties.js";import{OperationalLayer as P}from"./mixins/OperationalLayer.js";import"../renderers/Renderer.js";import"../renderers/ClassBreaksRenderer.js";import L from"../renderers/UniqueValueRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import E from"../renderers/SimpleRenderer.js";import{rendererTypes as O,webSceneRendererTypes as U}from"../renderers/support/types.js";import{read as k,write as G}from"../renderers/support/jsonUtils.js";import _ from"./support/Field.js";import N from"./support/FieldsIndex.js";import{ArcGISService as A}from"./mixins/ArcGISService.js";import{BlendLayer as J}from"./mixins/BlendLayer.js";import{PortalLayer as W}from"./mixins/PortalLayer.js";import{RefreshableLayer as q}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as z}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as M}from"./mixins/TemporalLayer.js";import V from"./support/LabelClass.js";import{read as C,writeTarget as B,webSceneFeatureReductionTypes as Q}from"./support/featureReductionUtils.js";import{reader as H}from"./support/labelingInfo.js";import{loadStyleRenderer as K}from"../renderers/support/styleUtils.js";import{createPopupTemplate as X}from"../support/popupUtils.js";import Y from"../tasks/support/Query.js";import Z from"./support/PurgeOptions.js";const $=o.getLogger("esri.layers.StreamLayer"),ee=new n({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon"});let re=class extends(J(M(z(q(A(P(W(b(S))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new Z,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=u.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.webSocketUrl=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){if(!("WebSocket"in r))return this.addResolvingPromise(Promise.reject(new m("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const o=t(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service"]},e).catch((e=>e)).then((()=>this._fetchService(o)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}readFeatureReduction(e,r){return C(e,r)}writeWebSceneFeatureReduction(e,r,t,o){B(e,r,"layerDefinition.featureReduction",o)}get fieldsIndex(){return new N(this.fields)}set renderer(e){c(e,this.fields),this._set("renderer",e)}readRenderer(e,r,t){const o=(r=r.layerDefinition||r).drawingInfo&&r.drawingInfo.renderer||void 0;if(o){const e=k(o,r,t)||void 0;return e||$.error("Failed to create renderer",{rendererDefinition:r.drawingInfo.renderer,layer:this,context:t}),e}if(r.defaultSymbol)return r.types&&r.types.length?new L({defaultSymbol:te(r.defaultSymbol,r,t),field:r.typeIdField,uniqueValueInfos:r.types.map((e=>({id:e.id,symbol:te(e.symbol,e,t)})))}):new E({symbol:te(r.defaultSymbol,r,t)})}writeRenderer(e,r,t,o){G(e,r,t,o)}writeWebSceneRenderer(e,r,t,o){G(e,r,"layerDefinition.drawingInfo.renderer",o)}createPopupTemplate(e){return X(this,e)}createQuery(){const e=new Y;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,r){if(!this.fields)return null;let t=null;return this.fields.some((r=>(r.name===e&&(t=r.domain),!!t))),t}getField(e){return this.fieldsIndex.get(e)}async _fetchService(e){var r;if(!!this.webSocketUrl){var t;if(null==(t=this.timeInfo)||!t.trackIdField)throw new m("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField)throw new m("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");if(!this.fields)throw new m("stream-layer:missing-metadata","The stream layer fields must be specified.");if(!this.geometryType)throw new m("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.url=this.webSocketUrl}else if(!this.sourceJSON){const{data:r}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=r}return this.sourceJSON={...null!=(r=this.sourceJSON)?r:{},objectIdField:"__esri_stream_id__"},this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),c(this.renderer,this.fields),f(this.timeInfo,this.fields),K(this,{origin:"service"})}};e([s({type:String})],re.prototype,"copyright",void 0),e([s({readOnly:!0})],re.prototype,"defaultPopupTemplate",null),e([s({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],re.prototype,"definitionExpression",void 0),e([s({type:String})],re.prototype,"displayField",void 0),e([s({type:v})],re.prototype,"elevationInfo",void 0),e([p("featureReduction",["layerDefinition.featureReduction"])],re.prototype,"readFeatureReduction",null),e([d("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:Q}})],re.prototype,"writeWebSceneFeatureReduction",null),e([s({type:[_]})],re.prototype,"fields",void 0),e([s({readOnly:!0})],re.prototype,"fieldsIndex",null),e([s({type:y})],re.prototype,"geometryDefinition",void 0),e([s({type:["point","polygon","polyline","multipoint"],json:{read:{reader:ee.read}}})],re.prototype,"geometryType",void 0),e([s(w)],re.prototype,"labelsVisible",void 0),e([s({type:[V],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:H},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],re.prototype,"labelingInfo",void 0),e([s(I)],re.prototype,"legendEnabled",void 0),e([s({type:["show","hide"]})],re.prototype,"listMode",void 0),e([s({type:i})],re.prototype,"maxReconnectionAttempts",void 0),e([s({type:i})],re.prototype,"maxReconnectionInterval",void 0),e([s(R)],re.prototype,"maxScale",void 0),e([s(x)],re.prototype,"minScale",void 0),e([s({type:String})],re.prototype,"objectIdField",void 0),e([s({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],re.prototype,"operationalLayerType",void 0),e([s(F)],re.prototype,"popupEnabled",void 0),e([s({type:h,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],re.prototype,"popupTemplate",void 0),e([s({type:Z})],re.prototype,"purgeOptions",void 0),e([s({types:O,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],re.prototype,"renderer",null),e([p("service","renderer",["drawingInfo.renderer","defaultSymbol"]),p("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],re.prototype,"readRenderer",null),e([d("renderer")],re.prototype,"writeRenderer",null),e([d("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:U}})],re.prototype,"writeWebSceneRenderer",null),e([s(T)],re.prototype,"screenSizePerspectiveEnabled",void 0),e([s({type:u,json:{origins:{service:{read:{source:"spatialReference"}}}}})],re.prototype,"spatialReference",void 0),e([s({json:{read:!1}})],re.prototype,"type",void 0),e([s(D)],re.prototype,"url",void 0),e([s({type:Number})],re.prototype,"updateInterval",void 0),e([s({type:String})],re.prototype,"webSocketUrl",void 0),re=e([l("esri.layers.StreamLayer")],re);const te=a({types:j});var oe=re;export default oe;
