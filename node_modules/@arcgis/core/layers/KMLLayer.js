/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import{isSome as r}from"../core/maybe.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import{reader as o}from"../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import{writer as i}from"../core/accessorSupport/decorators/writer.js";import{getFilename as l}from"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import a from"../geometry/SpatialReference.js";import p from"../geometry/Extent.js";import"../geometry.js";import n from"../core/Collection.js";import u from"../core/CollectionFlattener.js";import y from"./Layer.js";import{MultiOriginJSONMixin as m}from"../core/MultiOriginJSONSupport.js";import{url as c}from"./support/commonProperties.js";import{OperationalLayer as h}from"./mixins/OperationalLayer.js";import{BlendLayer as d}from"./mixins/BlendLayer.js";import{PortalLayer as f}from"./mixins/PortalLayer.js";import{RefreshableLayer as b}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as j}from"./mixins/ScaleRangeLayer.js";import{sublayersFromJSON as v,fetchService as g,parseKML as S}from"./support/kmlUtils.js";import x from"./support/KMLSublayer.js";const L=["kml","xml"];let E=class extends(d(b(j(h(f(m(y))))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new u({root:this,rootCollectionNames:["sublayers"],getChildrenFunction:e=>e.sublayers}),this.outSpatialReference=a.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.watch("sublayers",((e,r)=>{r&&r.forEach((e=>{e.parent=null,e.layer=null})),e&&e.forEach((e=>{e.parent=this,e.layer=this}))}),!0),this.on("sublayer-update",(()=>this.notifyChange("fullExtent")))}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}readSublayersFromItemOrWebMap(e,r){this._visibleFolders=r.visibleFolders}readSublayers(e,r,t){return v(x,r,t,this._visibleFolders)}writeSublayers(e,r){const t=[],o=e.toArray();for(;o.length;){const e=o[0];e.networkLink||(e.visible&&t.push(e.id),e.sublayers&&o.push(...e.sublayers.toArray())),o.shift()}r.visibleFolders=t}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?l(this.url,L)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,r=[],t=e=>{e.visible&&(r.push(e),e.sublayers&&e.sublayers.forEach(t))};return e&&e.forEach(t),r}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=r(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"]},e).then((()=>this._fetchService(t)))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const r=await Promise.resolve().then((()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:g(this.url,this.outSpatialReference,this.refreshInterval,e))),t=S(r.data);t&&this.read(t,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent&&(e=this.extent.clone());const r=t=>{if(t.sublayers)for(const o of t.sublayers.items)r(o),o.visible&&o.fullExtent&&(e?e.union(o.fullExtent):e=o.fullExtent.clone())};return r(this),e}};e([t({readOnly:!0})],E.prototype,"allSublayers",void 0),e([t({type:a})],E.prototype,"outSpatialReference",void 0),e([t({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],E.prototype,"path",void 0),e([t({readOnly:!0,json:{read:!1,write:!1}})],E.prototype,"legendEnabled",void 0),e([t({type:["show","hide","hide-children"]})],E.prototype,"listMode",void 0),e([t({type:["KML"]})],E.prototype,"operationalLayerType",void 0),e([t({})],E.prototype,"resourceInfo",void 0),e([t({type:n.ofType(x),json:{write:{ignoreOrigin:!0}}})],E.prototype,"sublayers",void 0),e([o(["web-map","portal-item"],"sublayers",["visibleFolders"])],E.prototype,"readSublayersFromItemOrWebMap",null),e([o("service","sublayers",["sublayers"])],E.prototype,"readSublayers",null),e([i("sublayers")],E.prototype,"writeSublayers",null),e([t({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),e([t({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],E.prototype,"title",null),e([t(c)],E.prototype,"url",void 0),e([t({readOnly:!0})],E.prototype,"visibleSublayers",null),e([t({type:p})],E.prototype,"extent",void 0),e([t()],E.prototype,"fullExtent",null),E=e([s("esri.layers.KMLLayer")],E);var w=E;export default w;
