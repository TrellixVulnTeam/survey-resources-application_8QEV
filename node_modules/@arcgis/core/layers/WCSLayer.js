/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import{isSome as r}from"../core/maybe.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import{aliasOf as t}from"../core/accessorSupport/decorators/aliasOf.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import i from"../core/Error.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import p from"./Layer.js";import{MultiOriginJSONMixin as a}from"../core/MultiOriginJSONSupport.js";import{popupEnabled as l}from"./support/commonProperties.js";import{OperationalLayer as n}from"./mixins/OperationalLayer.js";import m from"./support/Field.js";import{PortalLayer as c}from"./mixins/PortalLayer.js";import{RefreshableLayer as u}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as d}from"./mixins/ScaleRangeLayer.js";import{createPopupTemplate as f}from"../support/popupUtils.js";import{ImageryTileMixin as y}from"./mixins/ImageryTileMixin.js";import g from"./support/rasterDatasets/WCSRaster.js";let h=class extends(d(u(n(c(y(a(p))))))){constructor(...e){super(...e),this.coverageId=null,this.coverageInfo=null,this.customParameters=null,this.version=null,this.isReference=null,this.type="wcs",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const o=r(e)?e.signal:null;return this.addResolvingPromise(this._openRaster(o)),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){return[new m({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})]}createPopupTemplate(e){return f(this,e)}async _openRaster(e){const r=new g({url:this.url,version:this.version,coverageId:this.coverageId,ioConfig:{...this.ioConfig,sampling:"closest",customFetchParameters:this.customParameters}});if(await r.open({signal:e}),!r.rasterInfo)throw r.destroy(),new i("wcs-layer:load","cannot load resources on "+this.url);null==this.title&&this.setAtOrigin("title",r.datasetName,"service"),null==this.coverageId&&this.setAtOrigin("coverageId",r.coverageInfo.id,"service"),this.raster=r,this._configDefaultSettings()}};e([o({json:{write:!0}})],h.prototype,"coverageId",void 0),e([o({readOnly:!0}),t("raster.coverageInfo")],h.prototype,"coverageInfo",void 0),e([o({json:{type:Object,write:!0}})],h.prototype,"customParameters",void 0),e([o()],h.prototype,"version",void 0),e([o()],h.prototype,"isReference",void 0),e([o({readOnly:!0})],h.prototype,"type",void 0),e([o(l)],h.prototype,"popupEnabled",void 0),e([o()],h.prototype,"popupTemplate",void 0),e([o({readOnly:!0})],h.prototype,"defaultPopupTemplate",null),e([o({readOnly:!0})],h.prototype,"fields",null),h=e([s("esri.layers.WCSLayer")],h);var v=h;export default v;
