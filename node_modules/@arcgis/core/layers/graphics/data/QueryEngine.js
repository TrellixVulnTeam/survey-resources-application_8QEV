/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{clone as e}from"../../../core/lang.js";import{isNone as t,isUndefined as i}from"../../../core/maybe.js";import s from"../../../core/Error.js";import{equals as r,isValid as a}from"../../../geometry/support/spatialReferenceUtils.js";import{getBoundsXY as n}from"../../../geometry/support/boundsUtils.js";import{fromJSON as u,isExtent as o,isPolygon as c}from"../../../geometry/support/jsonUtils.js";import{getMetersPerUnitForSR as h}from"../../../core/unitUtils.js";import{fromValues as l,create as d}from"../../../geometry/support/aaBoundingRect.js";import m from"../../support/PromiseQueue.js";import{normalizeCentralMeridian as f}from"../../../geometry/support/normalizeUtils.js";import{MemCache as p,MemCacheStorage as y}from"../../../core/MemCache.js";import _ from"../../support/FieldsIndex.js";import{queryCapabilities as x}from"./QueryEngineCapabilities.js";import{set as g,NEGATIVE_INFINITY as w,expandWithAABB as Q,create as S}from"../../../geometry/support/aaBoundingBox.js";import{project as R,checkProjectionSupport as I}from"./projectionSupport.js";import{validateFields as F,validateWhere as b,validateHaving as j,hasInvalidFieldType as A}from"./attributeSupport.js";import{cleanFromGeometryEngine as E,normalizeQuery as C,QUERY_ENGINE_EMPTY_RESULT as k}from"./utils.js";import{getSpatialQueryOperator as B,canQueryWithRBush as T,checkSpatialQuerySupport as O}from"./spatialQuerySupport.js";import{getTimeExtent as z}from"./timeSupport.js";import G from"./QueryEngineResult.js";function M(e){return e.every((e=>"exceedslimit"!==e.statisticType))}const P="feature-store:unsupported-query";class q{constructor(e,t=null,i,s,r){this.attributes=e,this.geometry=i,this.centroid=s,this.filterFlags=r,this.groupId=-1,this.displayId=t}}const v=new Set,N=new y(2e6);let U=0;class Z{constructor(e){this.capabilities={query:x},this.geometryType=e.geometryType,this.hasM=e.hasM,this.hasZ=e.hasZ,this.objectIdField=e.objectIdField,this.spatialReference=e.spatialReference,this.definitionExpression=e.definitionExpression,this.featureStore=e.featureStore,this.aggregateAdapter=e.aggregateAdapter,this._changeHandle=this.featureStore.events.on("changed",(()=>this.clearCache())),this.timeInfo=e.timeInfo,e.cacheSpatialQueries&&(this._geometryQueryCache=new p(U+++"$$",N)),this.fieldsIndex=new _(e.fields),e.scheduler&&e.task&&(this._frameQueue=new m,this._frameTask=e.scheduler.registerTask(e.task,(e=>this._update(e)),(()=>this._frameQueue.length>0)))}destroy(){this._frameTask&&(this._frameTask.remove(),this._frameTask=null,this._frameQueue.cancelAll(),this._frameQueue=null),this.clearCache(),this._geometryQueryCache&&this._geometryQueryCache.destroy(),this._changeHandle&&(this._changeHandle.remove(),this._changeHandle=null),this.fieldsIndex.destroy()}get featureAdapter(){return this.featureStore.featureAdapter}get fullExtent(){const e=this.featureStore.fullBounds;return e?{xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3],spatialReference:E(this.spatialReference)}:null}get timeExtent(){return this.timeInfo?(this._timeExtent||(this._timeExtent=z(this.timeInfo,this.featureStore)),this._timeExtent):null}clearCache(){this._geometryQueryCache&&this._geometryQueryCache.clear(),this._allItems=null,this._timeExtent=null}async executeQuery(t={},i){let s,r=e(t);try{r=await this._schedule((()=>C(r,this.definitionExpression,this.spatialReference)),i),r=await this._reschedule((()=>this._checkQuerySupport(r)),i),s=await this._reschedule((()=>this._executeGeometryQuery(r,i)),i),s=await this._reschedule((()=>s.executeAggregateIdsQuery(r)),i),s=await this._reschedule((()=>s.executeObjectIdsQuery(r)),i),s=await this._reschedule((()=>s.executeTimeQuery(r)),i),s=await this._reschedule((()=>s.executeAttributesQuery(r)),i)}catch(a){if(a!==k)throw a;s=new G([],null,this)}return s.createQueryResponse(r)}async executeQueryForCount(t={},i){let s,r=e(t);r.returnGeometry=!1,r.returnCentroid=!1,r.outSR=null;try{r=await this._schedule((()=>C(r,this.definitionExpression,this.spatialReference)),i),r=await this._reschedule((()=>this._checkQuerySupport(r)),i),s=await this._reschedule((()=>this._executeGeometryQuery(r,i)),i),s=await this._reschedule((()=>s.executeAggregateIdsQuery(r)),i),s=await this._reschedule((()=>s.executeObjectIdsQuery(r)),i),s=await this._reschedule((()=>s.executeTimeQuery(r)),i),s=await this._reschedule((()=>s.executeAttributesQuery(r)),i)}catch(a){if(a!==k)throw a;return 0}return s.createQueryResponseForCount(r)}async executeQueryForExtent(t={},i){let s,r=e(t);const a=r.outSR;try{r=await this._schedule((()=>C(r,this.definitionExpression,this.spatialReference)),i),r=await this._reschedule((()=>this._checkQuerySupport(r)),i),r.returnGeometry=!0,r.returnCentroid=!1,r.outSR=null,s=await this._reschedule((()=>this._executeGeometryQuery(r,i)),i),s=await this._reschedule((()=>s.executeAggregateIdsQuery(r)),i),s=await this._reschedule((()=>s.executeObjectIdsQuery(r)),i),s=await this._reschedule((()=>s.executeTimeQuery(r)),i),s=await this._reschedule((()=>s.executeAttributesQuery(r)),i);const e=s.size;if(!e)return{count:e,extent:null};g(J,w),this.featureStore.forEachBounds(s.items,(e=>Q(J,e)),H);const t={xmin:J[0],ymin:J[1],xmax:J[3],ymax:J[4],spatialReference:E(this.spatialReference)};this.hasZ&&isFinite(J[2])&&isFinite(J[5])&&(t.zmin=J[2],t.zmax=J[5]);const n=R(t,s.spatialReference,a);if(n.spatialReference=E(a||this.spatialReference),n.xmax-n.xmin==0){const e=h(n.spatialReference);n.xmin-=e,n.xmax+=e}if(n.ymax-n.ymin==0){const e=h(n.spatialReference);n.ymin-=e,n.ymax+=e}if(this.hasZ&&null!=n.zmin&&null!=n.zmax&&n.zmax-n.zmin==0){const e=h(n.spatialReference);n.zmin-=e,n.zmax+=e}return{count:e,extent:n}}catch(n){if(n===k)return{count:0,extent:null};throw n}}async executeQueryForIds(e={},t){return this.executeQueryForIdSet(e,t).then((e=>Array.from(e)))}async executeQueryForIdSet(t={},i){let s,r=e(t);r.returnGeometry=!1,r.returnCentroid=!1,r.outSR=null;try{r=await this._schedule((()=>C(r,this.definitionExpression,this.spatialReference)),i),r=await this._reschedule((()=>this._checkQuerySupport(r)),i),s=await this._reschedule((()=>this._executeGeometryQuery(r,i)),i),s=await this._reschedule((()=>s.executeAggregateIdsQuery(r)),i),s=await this._reschedule((()=>s.executeObjectIdsQuery(r)),i),s=await this._reschedule((()=>s.executeTimeQuery(r)),i),s=await this._reschedule((()=>s.executeAttributesQuery(r)),i);const e=s.items,t=new Set;return await this._reschedule((()=>{for(const i of e)t.add(s.featureAdapter.getObjectId(i))}),i),t}catch(a){if(a===k)return new Set;throw a}}async executeQueryForSnapping(e,i){const{point:s,distance:a,types:n}=e;if(0===n)return{candidates:[]};const o=await this._reschedule((()=>this._checkQuerySupport(e.query)),i),c=!r(s.spatialReference,this.spatialReference);c&&await I(s.spatialReference,this.spatialReference);const h="number"==typeof a?a:a.x,l="number"==typeof a?a:a.y,d={xmin:s.x-h,xmax:s.x+h,ymin:s.y-l,ymax:s.y+l,spatialReference:s.spatialReference},m=c?R(d,this.spatialReference):d;if(!m)return{candidates:[]};const p=(await f(u(s),null,{signal:i}))[0],y=(await f(u(m),null,{signal:i}))[0];if(t(p)||t(y))return{candidates:[]};let _=new G(this._searchFeatures(this._getQueryBBoxes(y.toJSON())),null,this);_=await this._reschedule((()=>_.executeObjectIdsQuery(o)),i),_=await this._reschedule((()=>_.executeTimeQuery(o)),i),_=await this._reschedule((()=>_.executeAttributesQuery(o)),i);const x=p.toJSON(),g=c?R(x,this.spatialReference):x,w=c?Math.max(m.xmax-m.xmin,m.ymax-m.ymin)/2:a;return _.createSnappingResponse({...e,point:g,distance:w},s.spatialReference)}async executeQueryForLatestObservations(t={},i){if(!this.timeInfo||!this.timeInfo.trackIdField)throw new s(P,"Missing timeInfo or timeInfo.trackIdField",{query:t,timeInfo:this.timeInfo});let r,a=e(t);try{a=await this._schedule((()=>C(a,this.definitionExpression,this.spatialReference)),i),a=await this._reschedule((()=>this._checkQuerySupport(a)),i),r=await this._reschedule((()=>this._executeGeometryQuery(a,i)),i),r=await this._reschedule((()=>r.executeAggregateIdsQuery(a)),i),r=await this._reschedule((()=>r.executeObjectIdsQuery(a)),i),r=await this._reschedule((()=>r.executeTimeQuery(a)),i),r=await this._reschedule((()=>r.executeAttributesQuery(a)),i),r=await this._reschedule((()=>r.filterLatest()),i)}catch(n){if(n!==k)throw n;r=new G([],null,this)}return r.createQueryResponse(a)}async _schedule(e,t){return this._frameQueue?this._frameQueue.push(e,t):e()}async _reschedule(e,t){return this._frameQueue?this._frameQueue.unshift(e,t):e()}_update(e){for(this._budget=e;!e.done&&this._frameQueue&&this._frameQueue.process();)e.madeProgress();this._budget=null}_getAll(){if(!this._allItems){const e=[];this.featureStore.forEach((t=>e.push(t))),this._allItems=new G(e,null,this)}return this._allItems}async _executeGeometryQuery(e,t){const{geometry:s,outSR:n,spatialRel:u,returnGeometry:o,returnCentroid:c}=e,h=o||c,l=a(n)&&!r(this.spatialReference,n),d=this._geometryQueryCache?l&&h?JSON.stringify({geometry:s,spatialRelationship:u,outSpatialReference:n}):JSON.stringify({geometry:s,spatialRelationship:u}):null;if(d){const e=this._geometryQueryCache.get(d);if(!i(e))return e}const m=async e=>{if(l&&h){const t=await e.project(n);return d&&this._geometryQueryCache.put(d,t,t.size||1),t}return d&&this._geometryQueryCache.put(d,e,e.size||1),e};if(!s)return m(this._getAll());const f=this.featureAdapter;if("esriSpatialRelDisjoint"===u){const e=this._searchFeatures(this._getQueryBBoxes(s));if(!e.length)return m(this._getAll());let i,r;const a=new Set;for(const t of e)a.add(f.getObjectId(t));await this._reschedule((()=>{let e=0;i=new Array(a.size),this.featureStore.forEach((t=>i[e++]=t)),r=a}),t);return m(await this._reschedule((async()=>{const e=await B(u,s,this.geometryType,this.hasZ,this.hasM),a=t=>!r.has(f.getObjectId(t))||e(f.getGeometry(t));return new G(await this._runSpatialFilter(i,a,t),s,this)}),t))}const p=this._searchFeatures(this._getQueryBBoxes(s));if(!p.length){const e=new G([],s,this);return d&&this._geometryQueryCache.put(d,e,e.size||1),e}if(this._canExecuteSoloPass(s,e))return m(new G(p,s,this));const y=await B(u,s,this.geometryType,this.hasZ,this.hasM),_=await this._runSpatialFilter(p,(e=>y(f.getGeometry(e))),t);return m(new G(_,s,this))}async _runSpatialFilter(e,t,i){if(!t)return e;if(!this._budget)return e.filter((e=>t(e)));let s=0;const r=new Array,a=async()=>{for(;s<e.length;){const n=e[s];t(n)&&r.push(n),this._budget.done&&await this._reschedule((()=>a()),i),++s}};return this._reschedule((()=>a()),i).then((()=>r))}_canExecuteSoloPass(e,t){const{geometryType:i}=this,{spatialRel:s}=t;return T(e)&&("esriSpatialRelEnvelopeIntersects"===s||"esriGeometryPoint"===i&&("esriSpatialRelIntersects"===s||"esriSpatialRelContains"===s||"esriSpatialRelWithin"===s))}_getQueryBBoxes(e){if(T(e)){if(o(e))return[l(e.xmin,e.ymin,e.xmax,e.ymax)];if(c(e))return e.rings.map((e=>l(Math.min(e[0][0],e[2][0]),Math.min(e[0][1],e[2][1]),Math.max(e[0][0],e[2][0]),Math.max(e[0][1],e[2][1]))))}return[n(d(),e)]}_searchFeatures(e){for(const s of e)this.featureStore.forEachInBounds(s,(e=>{v.add(e)}));const t=new Array(v.size);let i=0;return v.forEach((e=>t[i++]=e)),v.clear(),t}async _checkQuerySupport(e){if(e.distance<0||null!=e.geometryPrecision||e.multipatchOption||e.pixelSize||e.relationParam||e.text)throw new s(P,"Unsupported query options",{query:e});return Promise.all([this._checkAttributesQuerySupport(e),this._checkStatisticsQuerySupport(e),O(e,this.geometryType,this.spatialReference),I(this.spatialReference,e.outSR)]).then((()=>e))}_checkAttributesQuerySupport(e){const{outFields:t,orderByFields:i,returnDistinctValues:r,outStatistics:a}=e,n=a?a.map((e=>e.outStatisticFieldName&&e.outStatisticFieldName.toLowerCase())):[];if(i&&i.length>0){const e=" asc",t=" desc",s=i.map((i=>{const s=i.toLowerCase();return s.indexOf(e)>-1?s.split(e)[0]:s.indexOf(t)>-1?s.split(t)[0]:i})).filter((e=>-1===n.indexOf(e)));F(this.fieldsIndex,s,"orderByFields contains missing fields")}if(t&&t.length>0)F(this.fieldsIndex,t,"outFields contains missing fields");else if(r)throw new s(P,"outFields should be specified for returnDistinctValues",{query:e});b(this.fieldsIndex,e.where)}async _checkStatisticsQuerySupport(e){const{outStatistics:t,groupByFieldsForStatistics:i,having:r}=e,a=i&&i.length,n=t&&t.length;if(r){if(!a||!n)throw new s(P,"outStatistics and groupByFieldsForStatistics should be specified with having",{query:e});j(this.fieldsIndex,r,t)}if(n){if(!M(t))return;const r=t.map((e=>e.onStatisticField));F(this.fieldsIndex,r,"onStatisticFields contains missing fields"),a&&F(this.fieldsIndex,i,"groupByFieldsForStatistics contains missing fields");for(const i of t){const{onStatisticField:t,statisticType:r}=i;if(("percentile_disc"===r||"percentile_cont"===r)&&"statisticParameters"in i){const{statisticParameters:t}=i;if(!t)throw new s(P,"statisticParamters should be set for percentile type",{definition:i,query:e})}else if("count"!==r&&t&&A(t,this.fieldsIndex))throw new s(P,"outStatistics contains non-numeric fields",{definition:i,query:e})}}}}const H=S(),J=S();export default Z;export{q as Feature};
