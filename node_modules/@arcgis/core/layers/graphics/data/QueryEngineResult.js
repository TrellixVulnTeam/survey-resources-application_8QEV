/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t}from"../../../core/maybe.js";import{isValid as s,equals as i}from"../../../geometry/support/spatialReferenceUtils.js";import{convertFromGeometry as r}from"../featureConversionUtils.js";import{toQuantizationTransform as n}from"../../../geometry/support/quantizationUtils.js";import{project as o,projectMany as a}from"./projectionSupport.js";import{getWhereClause as u}from"./attributeSupport.js";import l from"./AttributesBuilder.js";import{cleanFromGeometryEngine as c,getGeometry as h,transformCentroid as d}from"./utils.js";import{getTimeOperator as f}from"./timeSupport.js";function m(e){return e.substr(24,12)+e.substr(19,4)+e.substr(16,2)+e.substr(14,2)+e.substr(11,2)+e.substr(9,2)+e.substr(6,2)+e.substr(4,2)+e.substr(2,2)+e.substr(0,2)}function p(e,t,s){return(s?e>t:e<t)?-1:(s?e<t:e>t)?1:0}function y(e,t,s){return s?t-e:e-t}function g(e,t,s,i){if(s&&"esriFieldTypeDate"===s.type){const s=new Date(e).getTime(),r=new Date(t).getTime();if(!isNaN(s)&&!isNaN(r))return y(s,r,i)}if("number"==typeof e&&"number"==typeof t)return y(e,t,i);if("string"==typeof e&&"string"==typeof t){const r=e.toUpperCase(),n=t.toUpperCase();return!s||"esriFieldTypeGUID"!==s.type&&"esriFieldTypeGlobalID"!==s.type?p(r,n,i):p(m(r),m(n),i)}return i?1:-1}class I{constructor(e,t,s){this.items=e,this.queryGeometry=t,this.definitionExpression=s.definitionExpression,this.geometryType=s.geometryType,this.hasM=s.hasM,this.hasZ=s.hasZ,this.objectIdField=s.objectIdField,this.spatialReference=s.spatialReference,this.fieldsIndex=s.fieldsIndex,this.timeInfo=s.timeInfo,this.featureAdapter=s.featureAdapter,this.aggregateAdapter=s.aggregateAdapter}get size(){return this.items.length}createQueryResponseForCount(e){const t=new l(e,this.featureAdapter,this.fieldsIndex);if(!e.outStatistics)return t.countDistinctValues(this.items);const{groupByFieldsForStatistics:s,having:i}=e;if(!!!(null==s?void 0:s.length))return 1;const r=new Map,n=new Map,o=new Set,a=e.outStatistics;for(const u of a){const{statisticType:e}=u,a="exceedslimit"!==e?u.onStatisticField:void 0;if(!n.has(a)){const e=[];for(const i of s){const s=this._getAttributeValues(t,i,r);e.push(s)}n.set(a,this._calculateUniqueValues(e))}const l=n.get(a);for(const s in l){const{data:e,items:r}=l[s],n=e.join(",");i&&!t.validateItems(r,i)||o.add(n)}}return o.size}createQueryResponse(e){let t;if(e.outStatistics){t=e.outStatistics.some((e=>"exceedslimit"===e.statisticType))?this._createExceedsLimitQueryResponse(e):this._createStatisticsQueryResponse(e)}else t=this._createFeatureQueryResponse(e);return e.returnQueryGeometry&&(s(e.outSR)&&!i(this.queryGeometry.spatialReference,e.outSR)?t.queryGeometry=c({spatialReference:e.outSR,...o(this.queryGeometry,this.queryGeometry.spatialReference,e.outSR)}):t.queryGeometry=c({spatialReference:e.outSR,...this.queryGeometry})),t}createSnappingResponse(e,t){const s=this.featureAdapter,i=x(this.hasZ,this.hasM),{x:r,y:n}=e.point,o="number"==typeof e.distance?e.distance:e.distance.x,a="number"==typeof e.distance?e.distance:e.distance.y,u={candidates:[]},l="esriGeometryPolygon"===this.geometryType,c=this.getPointCreator(e.point,this.spatialReference,t);for(const h of this.items){const t=s.getGeometry(h);if(!t)continue;const{coords:d,lengths:f}=t;if(1&e.types){let e=0;for(let t=0;t<f.length;t++){const l=f[t];for(let t=0;t<l;t++,e+=i){const f=d[e],m=d[e+1];if(t!==l-1){const t=d[e+i],l=d[e+i+1],{x:p,y}=b(r,n,f,m,t,l),g=(r-p)/o,I=(n-y)/a,x=g*g+I*I;x<=1&&u.candidates.push({type:"edge",objectId:s.getObjectId(h),distance:Math.sqrt(x),target:c(p,y),start:c(f,m),end:c(t,l)})}}}}if(2&e.types){const e=l?d.length-i:d.length;for(let t=0;t<e;t+=i){const e=d[t],i=d[t+1],l=(r-e)/o,f=(n-i)/a,m=l*l+f*f;m<=1&&u.candidates.push({type:"vertex",objectId:s.getObjectId(h),distance:Math.sqrt(m),target:c(e,i)})}}}return u.candidates.sort(((e,t)=>e.distance-t.distance)),u}getPointCreator(t,s,r){const n=e(r)&&!i(s,r)?e=>o(e,s,r):e=>e;return null!=t.z&&null!=t.m?(e,s)=>n({x:e,y:s,z:t.z,m:t.m}):null!=t.z?(e,s)=>n({x:e,y:s,z:t.z}):null!=t.m?(e,s)=>n({x:e,y:s,m:t.m}):(e,t)=>n({x:e,y:t})}executeAttributesQuery(e){const t=u(e.where,this.fieldsIndex);if(!t)return Promise.resolve(this);if(t.isStandardized){let s=0;const i=[];for(const e of this.items)t.testFeature(e,this.featureAdapter)&&(i[s++]=e);const r=new I(i,this.queryGeometry,this);return r.definitionExpression=e.where,Promise.resolve(r)}return Promise.reject(new TypeError("Where clause is not standardized"))}executeAggregateIdsQuery(e){if(!e.aggregateIds||!e.aggregateIds.length||t(this.aggregateAdapter))return Promise.resolve(this);const s=new Set;for(const t of e.aggregateIds){this.aggregateAdapter.getFeatureObjectIds(t).forEach((e=>s.add(e)))}const i=this.featureAdapter.getObjectId;return Promise.resolve(new I(this.items.filter((e=>s.has(i(e)))),this.queryGeometry,this))}executeObjectIdsQuery(e){if(!e.objectIds||!e.objectIds.length)return Promise.resolve(this);const t=new Set(e.objectIds),s=this.featureAdapter.getObjectId;return Promise.resolve(new I(this.items.filter((e=>t.has(s(e)))),this.queryGeometry,this))}executeTimeQuery(t){const s=f(this.timeInfo,t.timeExtent,this.featureAdapter);if(!e(s))return Promise.resolve(this);const i=this.items.filter(s);return Promise.resolve(new I(i,this.queryGeometry,this))}filterLatest(){const{trackIdField:e,startTimeField:t,endTimeField:s}=this.timeInfo,i=s||t,r=new Map,n=this.featureAdapter.getAttribute;for(const a of this.items){const t=n(a,e),s=n(a,i),o=r.get(t);(!o||s>n(o,i))&&r.set(t,a)}const o=Array.from(r.values());return Promise.resolve(new I(o,this.queryGeometry,this))}async project(e){if(!e||i(this.spatialReference,e))return this;const t=this.featureAdapter,s=(await a(this.items.map((e=>h(this.geometryType,this.hasZ,this.hasM,t.getGeometry(e)))),this.spatialReference,e)).map(((e,s)=>t.cloneWithGeometry(this.items[s],r(e,this.hasZ,this.hasM))));return new I(s,this.queryGeometry,{definitionExpression:this.definitionExpression,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,objectIdField:this.objectIdField,spatialReference:e,fieldsIndex:this.fieldsIndex,timeInfo:this.timeInfo,featureAdapter:this.featureAdapter})}_sortFeatures(e,t,s){if(e.length>1&&t&&t.length)for(const i of t.reverse()){const t=i.split(" "),r=t[0],n=this.fieldsIndex.get(r),o=t[1]&&"desc"===t[1].toLowerCase();e.sort(((e,t)=>g(s(e,r,n),s(t,r,n),n,o)))}}_createFeatureQueryResponse(e){const t=this.items,{geometryType:s,hasM:i,hasZ:r,objectIdField:o,spatialReference:a}=this,{outFields:u,outSR:l,quantizationParameters:h,resultRecordCount:d,resultOffset:f,returnZ:m,returnM:p}=e,y=null!=d&&t.length>(f||0)+d,g=u&&(u.indexOf("*")>-1?[...this.fieldsIndex.fields]:u.map((e=>this.fieldsIndex.get(e))));return{exceededTransferLimit:y,features:this._createFeatures(e,t),fields:g,geometryType:s,hasM:i&&p,hasZ:r&&m,objectIdFieldName:o,spatialReference:c(l||a),transform:h&&n(h)||null}}_createFeatures(e,t){const s=new l(e,this.featureAdapter,this.fieldsIndex),{hasM:i,hasZ:r}=this,{orderByFields:o,quantizationParameters:a,returnGeometry:u,returnCentroid:c,maxAllowableOffset:f,resultOffset:m,resultRecordCount:p,returnZ:y=!1,returnM:g=!1}=e,I=r&&y,b=i&&g;let x=[],T=0;const F=[...t];if(this._sortFeatures(F,o,((e,t,i)=>s.getFieldValue(e,t,i))),u||c){const e=n(a);if(u&&!c)for(const t of F)x[T++]={attributes:s.getAttributes(t),geometry:h(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),f,e,I,b)};else if(!u&&c)for(const t of F)x[T++]={attributes:s.getAttributes(t),centroid:d(this,this.featureAdapter.getCentroid(t,this),e)};else for(const t of F)x[T++]={attributes:s.getAttributes(t),centroid:d(this,this.featureAdapter.getCentroid(t,this),e),geometry:h(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),f,e,I,b)}}else for(const n of F){const e=s.getAttributes(n);e&&(x[T++]={attributes:e})}const S=m||0;if(null!=p){const e=S+p;x=x.slice(S,Math.min(x.length,e))}return x}_createExceedsLimitQueryResponse(e){let t=!1,s=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY;for(const n of e.outStatistics)if("exceedslimit"===n.statisticType){s=null!=n.maxPointCount?n.maxPointCount:Number.POSITIVE_INFINITY,i=null!=n.maxRecordCount?n.maxRecordCount:Number.POSITIVE_INFINITY,r=null!=n.maxVertexCount?n.maxVertexCount:Number.POSITIVE_INFINITY;break}if("esriGeometryPoint"===this.geometryType)t=this.items.length>s;else if(this.items.length>i)t=!0;else{const e=this.hasZ?this.hasM?4:3:this.hasM?3:2,s=this.featureAdapter;t=this.items.reduce(((e,t)=>{const i=s.getGeometry(t);return e+(i&&i.coords.length||0)}),0)/e>r}return{fields:[{name:"exceedslimit",type:"esriFieldTypeInteger",alias:"exceedslimit",sqlType:"sqlTypeInteger",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(t)}}]}}_createStatisticsQueryResponse(e){const t={attributes:{}},s=[],i=new Map,r=new Map,n=new Map,o=new Map,a=new l(e,this.featureAdapter,this.fieldsIndex),u=e.outStatistics,{groupByFieldsForStatistics:c,having:h,orderByFields:d}=e,f=c&&c.length,m=!!f,p=m&&c[0],y=m&&!this.fieldsIndex.get(p);for(const l of u){const{outStatisticFieldName:e,statisticType:u}=l,d=l,g="exceedslimit"!==u?l.onStatisticField:void 0,I="percentile_disc"===u||"percentile_cont"===u,b=m&&1===f&&(g===p||y)&&"count"===u;if(m){if(!n.has(g)){const e=[];for(const t of c){const s=this._getAttributeValues(a,t,i);e.push(s)}n.set(g,this._calculateUniqueValues(e,a.returnDistinctValues))}const t=n.get(g);for(const s in t){const{count:r,data:n,items:u,itemPositions:l}=t[s],f=n.join(",");if(!h||a.validateItems(u,h)){const t=o.get(f)||{attributes:{}};let s=null;if(b)s=r;else{const e=this._getAttributeValues(a,g,i),t=l.map((t=>e[t]));s=I&&"statisticParameters"in d?this._getPercentileValue(d,t):this._getStatisticValue(d,t)}t.attributes[e]=s,c.forEach(((e,s)=>t.attributes[this.fieldsIndex.get(e)?e:`EXPR_${s+1}`]=n[s])),o.set(f,t)}}}else{const s=this._getAttributeValues(a,g,i);t.attributes[e]=I&&"statisticParameters"in d?this._getPercentileValue(d,s):this._getStatisticValue(d,s,r)}s.push({name:e,alias:e,type:"esriFieldTypeDouble"})}const g=m?Array.from(o.values()):[t];return this._sortFeatures(g,d,((e,t)=>e.attributes[t])),{fields:s,features:g}}_getStatisticValue(e,t,s){const{onStatisticField:i,statisticType:r}=e,n=s&&s.has(i)?s.get(i):this._calculateStatistics(t);s&&s.set(i,n);return n["var"===r?"variance":r]}_getPercentileValue(e,t){const{onStatisticField:s,statisticParameters:i,statisticType:r}=e,{value:n,orderBy:o}=i,a="desc"===o,u=this.fieldsIndex.get(s),l=[...t].filter((e=>null!=e)).sort(((e,t)=>g(e,t,u,a)));return this._calculatePercentile(l,n,"percentile_disc"===r)}_getAttributeValues(e,t,s){if(s.has(t))return s.get(t);const i=this.fieldsIndex.get(t),r=this.items.map((s=>e.getFieldValue(s,t,i)));return s.set(t,r),r}_calculateStatistics(e){let t=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,i=null,r=null,n=null,o=null;const a=[];let u=0;for(const l of e)"string"==typeof l?u++:null==l||isNaN(l)||(i+=l,t=Math.min(t,l),s=Math.max(s,l),a.push(l),u++);if(u){r=i/u;let e=0;for(const t of a)e+=(t-r)**2;o=u>1?e/(u-1):0,n=Math.sqrt(o)}else t=null,s=null;return{avg:r,count:u,max:s,min:t,stddev:n,sum:i,variance:o}}_calculateUniqueValues(e,t){const s={},i=this.items,r=i.length;for(let n=0;n<r;n++){const r=i[n],o=[];for(const t of e)o.push(t[n]);const a=o.join(",");t?null==s[a]&&(s[a]={count:1,data:o,items:[r],itemPositions:[n]}):null==s[a]?s[a]={count:1,data:o,items:[r],itemPositions:[n]}:(s[a].count++,s[a].items.push(r),s[a].itemPositions.push(n))}return s}_calculatePercentile(e,t,s){if(0===e.length)return null;if(t<=0)return e[0];if(t>=1)return e[e.length-1];const i=(e.length-1)*t,r=Math.floor(i),n=r+1,o=i%1,a=e[r],u=e[n];return n>=e.length||s||"string"==typeof a||"string"==typeof u?a:a*(1-o)+u*o}}function b(e,t,s,i,r,n){const o=r-s,a=n-i,u=o*o+a*a,l=(e-s)*o+(t-i)*a,c=Math.min(1,Math.max(0,l/u));return{x:s+o*c,y:i+a*c}}function x(e,t){return e?t?4:3:t?3:2}export default I;
