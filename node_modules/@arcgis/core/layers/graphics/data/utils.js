/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isNone as e}from"../../../core/maybe.js";import{JSONMap as t}from"../../../core/jsonMap.js";import{isGeographic as r,isWebMercator as i,WGS84 as o}from"../../../geometry/support/spatialReferenceUtils.js";import{getGeometryExtent as n}from"../../../geometry/support/extentUtils.js";import{fromJSON as s}from"../../../geometry/support/jsonUtils.js";import{getUnitString as a}from"../../../core/unitUtils.js";import{normalizeCentralMeridian as l}from"../../../geometry/support/normalizeUtils.js";import m from"../OptimizedGeometry.js";import{quantizeOptimizedGeometry as c,convertToPoint as u,generalizeOptimizedGeometry as f,removeZMValues as p,convertToPolyline as y,convertToPolygon as g,convertToMultipoint as S}from"../featureConversionUtils.js";import{getCentroidOptimizedGeometry as R}from"../centroid.js";import{checkProjectionSupport as d,project as h}from"./projectionSupport.js";const w=new t({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"}),j=Object.freeze({}),U=new m,M=new m,F=new m,G={esriGeometryPoint:u,esriGeometryPolyline:y,esriGeometryPolygon:g,esriGeometryMultipoint:S};function N(e,t,r,i=e.hasZ,o=e.hasM){const n=e.hasZ&&i,s=e.hasM&&o;if(r){const a=c(F,t,e.hasZ,e.hasM,"esriGeometryPoint",r,i,o);return u(a,n,s)}return u(t,n,s)}function O(e,t,r){return"esriGeometryPolygon"===e.geometryType&&t&&(t.centroid||t.geometry)?(t.centroid||(t.centroid=R(new m,t.geometry,e.hasZ,e.hasM)),N(e,t.centroid,r)):null}function _(e,t,r,i,o,n,s=t,a=r){const l=t&&s,m=r&&a,u=i?"coords"in i?i:i.geometry:null;if(!u)return null;if(o){let i=f(M,u,t,r,e,o,s,a);return n&&(i=c(F,i,l,m,e,n)),G[e](i,l,m)}if(n){const i=c(F,u,t,r,e,n,s,a);return G[e](i,l,m)}return p(U,u,t,r,s,a),G[e](U,l,m)}async function J(e,t,r){const{outFields:i,orderByFields:o,groupByFieldsForStatistics:n,outStatistics:s}=e;if(i)for(let a=0;a<i.length;a++)i[a]=i[a].trim();if(o)for(let a=0;a<o.length;a++)o[a]=o[a].trim();if(n)for(let a=0;a<n.length;a++)n[a]=n[a].trim();if(s)for(let a=0;a<s.length;a++)s[a].onStatisticField&&(s[a].onStatisticField=s[a].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),v(e,t,r)}async function P(e,t,r){return v(e,t,r)}async function v(t,r,i){if(!t)return null;let{where:o}=t;if(t.where=o=o&&o.trim(),(!o||/^1 *= *1$/.test(o)||r&&r===o)&&(t.where=null),!t.geometry)return t;let a=await Z(t);if(t.distance=0,t.units=null,"esriSpatialRelEnvelopeIntersects"===t.spatialRel){const{spatialReference:e}=t.geometry;a=n(a),a.spatialReference=e}t.geometry=a,await d(a.spatialReference,i);const m=(await l(s(a)))[0];if(e(m))throw j;const c=m.toJSON(),u=await h(c,c.spatialReference,i);if(!u)throw j;return u.spatialReference=i,t.geometry=u,t}async function Z(e){const{geometry:t,distance:n,units:s}=e;if(null==n||"vertexAttributes"in t)return t;const l=t.spatialReference,m=s?w.fromJSON(s):a(l),c=l&&(r(l)||i(l))?t:await d(l,o).then((()=>h(t,o)));return(await b())(c.spatialReference,c,n,m)}async function b(){return(await import("../../../geometry/geometryEngineJSON.js")).geodesicBuffer}function x(e){return e&&z in e?JSON.parse(JSON.stringify(e,B)):e}const z="_geVersion",B=(e,t)=>e!==z?t:void 0;export{j as QUERY_ENGINE_EMPTY_RESULT,x as cleanFromGeometryEngine,O as getCentroid,_ as getGeometry,P as normalizeFilter,J as normalizeQuery,v as normalizeQueryLike,N as transformCentroid};
