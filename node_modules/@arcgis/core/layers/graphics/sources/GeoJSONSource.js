/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/has.js";import{isSome as r,isNone as o}from"../../../core/maybe.js";import s from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import a from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import u from"../../../geometry/Extent.js";import l from"../../../geometry/Polygon.js";import{typeKebabDictionary as p}from"../../../geometry/support/typeUtils.js";import"../../../geometry.js";import c from"../../../core/Loadable.js";import{open as d}from"../../../core/workers/workers.js";import h from"../../../tasks/support/FeatureSet.js";import m from"../../support/TimeInfo.js";import{queryCapabilities as y}from"../data/QueryEngineCapabilities.js";const f=s.getLogger("esri.layers.graphics.sources.GeoJSONSource");let g=class extends c{constructor(){super(...arguments),this.type="geojson",this.fullExtent=null,this.timeInfo=null}load(e){const t=r(e)?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}applyEdits(e){return this.load().then((()=>this._applyEdits(e)))}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>h.fromJSON(e)))}queryFeaturesJSON(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:u.fromJSON(e.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}_applyEdits(e){if(!this._connection)throw new a("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,r=[],o=[],s=[];if(e.addFeatures)for(const i of e.addFeatures)r.push(this._serializeFeature(i));if(e.deleteFeatures)for(const i of e.deleteFeatures)"objectId"in i&&null!=i.objectId?o.push(i.objectId):"attributes"in i&&null!=i.attributes[t]&&o.push(i.attributes[t]);if(e.updateFeatures)for(const i of e.updateFeatures)s.push(this._serializeFeature(i));return this._connection.invoke("applyEdits",{adds:r,updates:s,deletes:o}).then((({fullExtent:e,timeExtent:t,featureEditResults:r})=>{if(this.fullExtent=e,this.timeInfo){const e=this.timeInfo.clone();e.read({timeExtent:t}),this.timeInfo=e}return this._createEditsResult(r)}))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=!0===e.success?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new a("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e);return r?{geometry:r.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return o(t)?null:"mesh"===t.type||"extent"===t.type?l.fromExtent(t.extent):t}async _startWorker(e){this._connection=await d("GeoJSONSourceWorker",{strategy:t("feature-layers-workers")?"dedicated":"local",signal:e});const{fields:r,spatialReference:o,hasZ:s,geometryType:i,objectIdField:n,url:a,timeInfo:l}=this.layer,c="defaults"===this.layer.originOf("spatialReference"),h={url:a,fields:r&&r.map((e=>e.toJSON())),geometryType:p.toJSON(i),hasZ:s,objectIdField:n,timeInfo:l?l.toJSON():null,spatialReference:c?null:o&&o.toJSON()},g=await this._connection.invoke("load",h,{signal:e});for(const t of g.warnings)f.warn(t.message,{layer:this.layer,warning:t});g.featureErrors.length&&f.warn(`Encountered ${g.featureErrors.length} validation errors while loading features`,g.featureErrors),this.fullExtent=u.fromJSON(g.layerDefinition.extent),this.timeInfo=m.fromJSON(g.layerDefinition.timeInfo),this.sourceJSON=g.layerDefinition,this.capabilities={attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:g.layerDefinition.hasZ},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!0,supportsDelete:!0,supportsEditing:!0,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!0,supportsExceedsLimitStatistics:!0},query:y,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0},editing:{supportsGeometryUpdate:!0,supportsGlobalId:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}}};e([i()],g.prototype,"capabilities",void 0),e([i()],g.prototype,"type",void 0),e([i()],g.prototype,"fullExtent",void 0),e([i({constructOnly:!0})],g.prototype,"layer",void 0),e([i()],g.prototype,"sourceJSON",void 0),e([i()],g.prototype,"timeInfo",void 0),g=e([n("esri.layers.graphics.sources.GeoJSONSource")],g);var S=g;export default S;export{g as GeoJSONSource};
