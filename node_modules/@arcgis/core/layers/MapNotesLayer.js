/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import{clone as t}from"../core/lang.js";import{setDeepValue as r}from"../core/object.js";import{isNone as o,isSome as i}from"../core/maybe.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import{reader as a}from"../core/accessorSupport/decorators/reader.js";import n from"../core/Warning.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import{writer as p}from"../core/accessorSupport/decorators/writer.js";import y from"../core/Error.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{equals as m}from"../geometry/support/spatialReferenceUtils.js";import u from"../geometry/SpatialReference.js";import c from"../geometry/Extent.js";import"../geometry.js";import f from"../core/Collection.js";import d from"../symbols/SimpleLineSymbol.js";import g from"../symbols/SimpleFillSymbol.js";import b from"../symbols/SimpleMarkerSymbol.js";import S from"../symbols/TextSymbol.js";import"../symbols.js";import h from"../Graphic.js";import O from"./Layer.js";import{MultiOriginJSONMixin as j}from"../core/MultiOriginJSONSupport.js";import{canProjectWithoutEngine as w,isLoaded as N,load as L,project as v}from"../geometry/projection.js";import{OperationalLayer as J}from"./mixins/OperationalLayer.js";import{normalizeCentralMeridian as x}from"../geometry/support/normalizeUtils.js";import T from"./support/Field.js";import{BlendLayer as C}from"./mixins/BlendLayer.js";import{PortalLayer as M}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as I}from"./mixins/ScaleRangeLayer.js";import R from"./FeatureLayer.js";import E from"./GraphicsLayer.js";import{findLastObjectIdFromFeatures as D}from"./graphics/objectIdUtils.js";function F(e){return e.layers.some((e=>null!=e.layerDefinition.visibilityField))}const G=new T({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),_=new T({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let P=class extends E{constructor(){super(...arguments),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null}))}get sublayers(){return this.graphics}};e([l({readOnly:!0})],P.prototype,"sublayers",null),e([l()],P.prototype,"layer",void 0),e([l({readOnly:!0})],P.prototype,"visibilityMode",void 0),P=e([s("esri.layers.MapNotesLayer.MapNotesSublayer")],P);const k=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",layerId:"polygonLayer",title:"Polygons",identifyingSymbol:(new g).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",layerId:"polylineLayer",title:"Polylines",identifyingSymbol:(new d).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",layerId:"multipointLayer",title:"Multipoints",identifyingSymbol:(new b).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"pointLayer",title:"Points",identifyingSymbol:(new b).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"textLayer",title:"Text",identifyingSymbol:(new S).toJSON()}];let z=class extends(C(I(J(M(j(O)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.minScale=0,this.maxScale=0,this.spatialReference=u.WGS84,this.sublayers=new f(k.map((e=>new P({id:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!F(t)&&"portal-item"!==(null==r?void 0:r.origin)}}}readFeatureCollections(e,t,r){if(!F(t))return null;const o=t.layers.map((e=>{const t=new R;return t.read(e,r),t}));return new f({items:o})}readLegacyfeatureCollectionJSON(e,r){return F(r)?t(r.featureCollection):null}readFullExtent(e,t){if(!t.layers.length)return new c({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:u.WGS84});const r=u.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce(((e,t)=>{const r=t.layerDefinition.extent;return r?c.fromJSON(r).union(e):e}),new c({spatialReference:r}))}readMinScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.minScale)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.maxScale)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?u.fromJSON(t.layers[0].layerDefinition.spatialReference):u.WGS84}readSublayers(e,t,r){if(F(t))return null;const o=[];for(let l=0;l<t.layers.length;l++){var i;const{layerDefinition:e,featureSet:r}=t.layers[l],a=null!=(i=e.geometryType)?i:r.geometryType,n=k.find((t=>{var r,o,i;return a===t.geometryTypeJSON&&(null==(r=e.drawingInfo)||null==(o=r.renderer)||null==(i=o.symbol)?void 0:i.type)===t.identifyingSymbol.type}));if(n){const t=new P({id:n.layerId,title:e.name,layer:this,graphics:r.features.map((({geometry:e,symbol:t,attributes:r,popupInfo:o})=>h.fromJSON({attributes:r,geometry:e,symbol:t,popupTemplate:o})))});o.push(t)}}return new f(o)}writeSublayers(e,t,l,a){const{minScale:n,maxScale:s}=this;if(o(e))return;const p=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing){var m;if(p)null==a||null==(m=a.messages)||m.push(new y("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"));return}const u=[];let c=this.spatialReference.toJSON();e:for(const r of e)for(const e of r.graphics)if(i(e.geometry)){c=e.geometry.spatialReference.toJSON();break e}for(const r of k){const t=e.find((e=>r.layerId===e.id));this._writeMapNoteSublayer(u,t,r,n,s,c,a)}r("featureCollection.layers",u,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,r){"featureCollection"in e&&(e=t(e),Object.assign(e,e.featureCollection)),super.read(e,r)}async beforeSave(){if(o(this.sublayers))return;let e=null;const t=[];for(const o of this.sublayers)for(const r of o.graphics)if(i(r.geometry)){const o=r.geometry;e?m(o.spatialReference,e)||(w(o.spatialReference,e)||N()||await L(),r.geometry=v(o,e)):e=o.spatialReference,t.push(r)}const r=await x(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){var t,r;return o(this.sublayers)?null:null!=(t=null==(r=this.sublayers)?void 0:r.find((t=>t.id===e)))?t:null}_writeMapNoteSublayer(e,r,i,l,a,n,s){const p=[];if(!o(r)){for(const e of r.graphics)this._writeMapNote(p,e,i.geometryType,s);this._normalizeObjectIds(p,G),e.push({layerDefinition:{name:r.title,drawingInfo:{renderer:{type:"simple",symbol:t(i.identifyingSymbol)}},geometryType:i.geometryTypeJSON,minScale:l,maxScale:a,objectIdField:"OBJECTID",fields:[G.toJSON(),_.toJSON()],spatialReference:n},featureSet:{features:p,geometryType:i.geometryTypeJSON}})}}_writeMapNote(e,t,r,l){if(o(t))return;const{geometry:a,symbol:s,popupTemplate:p}=t;if(o(a))return;var y,m;if(a.type!==r)return void(null==l||null==(y=l.messages)||y.push(new n("map-notes-layer:invalid-geometry-type",`Geometry "${a.type}" cannot be saved in "${r}" layer`,{graphic:t})));if(o(s))return void(null==l||null==(m=l.messages)||m.push(new n("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t})));const u={attributes:{...t.attributes},geometry:a.toJSON(),symbol:s.toJSON()};i(p)&&(u.popupInfo=p.toJSON()),e.push(u)}_normalizeObjectIds(e,t){const r=t.name;let o=D(r,e)+1;const i=new Set;for(const l of e){l.attributes||(l.attributes={});const{attributes:e}=l;(null==e[r]||i.has(e[r]))&&(e[r]=o++),i.add(e[r])}}};e([l({readOnly:!0})],z.prototype,"capabilities",void 0),e([a(["portal-item","web-map"],"capabilities",["layers"])],z.prototype,"readCapabilities",null),e([l({readOnly:!0})],z.prototype,"featureCollections",void 0),e([a(["web-map","portal-item"],"featureCollections",["layers"])],z.prototype,"readFeatureCollections",null),e([l({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],z.prototype,"featureCollectionJSON",void 0),e([a(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],z.prototype,"readLegacyfeatureCollectionJSON",null),e([l({readOnly:!0,json:{read:!1,write:{enabled:!0,ignoreOrigin:!0}}})],z.prototype,"featureCollectionType",void 0),e([l({json:{write:!1}})],z.prototype,"fullExtent",void 0),e([a(["web-map","portal-item"],"fullExtent",["layers"])],z.prototype,"readFullExtent",null),e([l({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],z.prototype,"legendEnabled",void 0),e([l({type:["show","hide"]})],z.prototype,"listMode",void 0),e([l({type:Number,nonNullable:!0,json:{write:!1}})],z.prototype,"minScale",void 0),e([a(["web-map","portal-item"],"minScale",["layers"])],z.prototype,"readMinScale",null),e([l({type:Number,nonNullable:!0,json:{write:!1}})],z.prototype,"maxScale",void 0),e([a(["web-map","portal-item"],"maxScale",["layers"])],z.prototype,"readMaxScale",null),e([l({readOnly:!0})],z.prototype,"multipointLayer",null),e([l({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],z.prototype,"operationalLayerType",void 0),e([l({readOnly:!0})],z.prototype,"pointLayer",null),e([l({readOnly:!0})],z.prototype,"polygonLayer",null),e([l({readOnly:!0})],z.prototype,"polylineLayer",null),e([l({type:u})],z.prototype,"spatialReference",void 0),e([a(["web-map","portal-item"],"spatialReference",["layers"])],z.prototype,"readSpatialReference",null),e([l({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],z.prototype,"sublayers",void 0),e([a("web-map","sublayers",["layers"])],z.prototype,"readSublayers",null),e([p("web-map","sublayers")],z.prototype,"writeSublayers",null),e([l({readOnly:!0})],z.prototype,"textLayer",null),e([l()],z.prototype,"title",void 0),e([l({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),z=e([s("esri.layers.MapNotesLayer")],z);var B=z;export default B;
