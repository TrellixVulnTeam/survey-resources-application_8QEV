/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as e}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import i from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{eachAlways as o}from"../../../core/promiseUtils.js";import a from"../../../geometry/SpatialReference.js";import m from"../../../geometry/Extent.js";import"../../../geometry.js";import n from"../RasterInfo.js";import{split as l,estimateStatisticsHistograms as p}from"../rasterFunctions/pixelUtils.js";import c from"./BaseRaster.js";let h=class extends c{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(t){var e;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:l,nativeExtent:p,transform:c}=this.data,{width:h,height:u,pixelType:d}=s,f=this.data.extent||new m({xmin:-.5,ymin:.5,xmax:h-.5,ymax:u-.5,spatialReference:new a({wkid:3857})}),y=null!=(e=this.data.isPseudoSpatialReference)?e:!this.data.extent,x={x:f.width/h,y:f.height/u},g=new n({width:h,height:u,pixelType:d,extent:f,nativeExtent:p,transform:c,pixelSize:x,spatialReference:f.spatialReference,bandCount:3,keyProperties:l||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(t,s,r){const a=this.rasterInfo.storageInfo.maximumPyramidLevel,m=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:s,maximumPyramidLevel:a},r):Promise.resolve(l(t,s,a)),n=e(this.rasterInfo.statistics),c=e(this.rasterInfo.histograms),h=n&&c?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve(p(t)),u=await o([m,h]);if(!u[0].value&&u[1].value)throw new i("inmemory-raster:open","failed to build in memory raster");var d,f;(this._pixelBlockTiles=u[0].value,n)||(this.rasterInfo.statistics=null==(d=u[1].value)?void 0:d.statistics);c&&(this.rasterInfo.histograms=null==(f=u[1].value)?void 0:f.histograms)}};t([s({type:String,json:{write:!0}})],h.prototype,"datasetFormat",void 0),t([s()],h.prototype,"data",void 0),h=t([r("esri.layers.support.rasterDatasets.InMemoryRaster")],h);var u=h;export default u;
