/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{Z as e}from"../../../chunks/Zlib.js";import{J as t}from"../../../chunks/Jpg.js";import{bytesToUTF8 as n}from"../rasterDatasets/byteStreamUtils.js";import{decode as i}from"./Lzw.js";import a from"./TiffTags.js";import{isPlatformLittleEndian as s}from"./utils.js";const l=[0,1,1,2,4,8,1,1,2,4,8,4,8,-1,-1,-1,8,8,8],r=4294967296;function o(e,t){let n="unknown";return 3===e?n="f32":1===e?1===t?n="u1":2===t?n="u2":4===t?n="u4":t<=8?n="u8":t<=16?n="u16":t<=32&&(n="u32"):2===e&&(t<=8?n="s8":t<=16?n="s16":t<=32&&(n="s32")),n}function f(e){let t=null;switch(e?e.toLowerCase():"f32"){case"u1":case"u2":case"u4":case"u8":t=Uint8Array;break;case"u16":t=Uint16Array;break;case"u32":t=Uint32Array;break;case"s8":t=Int8Array;break;case"s16":t=Int16Array;break;case"s32":t=Int32Array;break;default:t=Float32Array}return t}function u(e,t){return{x:t[0]*e.x+t[1]*e.y+t[2],y:t[3]*e.x+t[4]*e.y+t[5]}}function c(e,t){const n=e.get(t);return n&&n.values}function h(e,t){const n=e.get(t);return n&&n.values[0]}function g(e,t,n,i=0,s=a.TIFF_TAGS,l=4){const r=8===l,o=r?A(new DataView(e,n,8),0,t):new DataView(e,n,2).getUint16(0,t),f=4+2*l,u=r?8:2,c=u+o*f;if(n+c>e.byteLength)return{success:!1,ifd:null,nextIFD:null,requiredBufferSize:c};const h=n+c+4<=e.byteLength?M(new DataView(e,n+c,8===l?8:4),0,t,8===l):null,g=n+u,p=new Map;let w,d,I,T,y,m,S;for(let A=0;A<o;A++){d=new DataView(e,g+f*A,f),I=d.getUint16(0,t),y=d.getUint16(2,t),T=a.getTagName(I,s);const n=[];2===l?(m=d.getUint16(4,t),S=d.getUint16(6,t)):4===l?(m=d.getUint32(4,t),S=d.getUint32(8,t)):8===l&&(m=M(d,4,t,!0),S=M(d,12,t,!0),n.push(d.getUint32(12,t)),n.push(d.getUint32(16,t))),w={id:I,type:y,valueCount:m,valueOffset:S,valueOffsets:n,values:null},E(e,t,w,i,!1,l),p.set(T,w)}return{success:!0,ifd:p,nextIFD:h,requiredBufferSize:c}}const p=function(n,a,l,r,u){const c=s===a,g=h(l,"BITSPERSAMPLE"),p=o(h(l,"SAMPLEFORMAT")||1,g),w=h(l,"COMPRESSION")||1,d=f(p);let I,T,E,y,m,A,S;if(1===w)E=n.slice(r,r+u),y=new Uint8Array(E);else if(8===w||32946===w)y=new Uint8Array(n,r,u),A=new e(y),S=A.getBytes(),E=new ArrayBuffer(S.length),y=new Uint8Array(E),y.set(S);else if(6===w){y=new Uint8Array(n,r,u);const e=new t;e.parse(y);const i=e.getData(e.width,e.height,!0);E=new ArrayBuffer(i.length),y=new Uint8Array(E),y.set(i)}else 5===w&&(y=i(n,r,u,a),E=y.buffer);if("u8"===p||"s8"===p||c)T=new d(E);else{switch(E=new ArrayBuffer(y.length),m=new Uint8Array(E),p){case"u16":case"s16":for(I=0;I<y.length;I+=2)m[I]=y[I+1],m[I+1]=y[I];break;case"u32":case"s32":case"f32":for(I=0;I<y.length;I+=4)m[I]=y[I+3],m[I+1]=y[I+2],m[I+2]=y[I+1],m[I+3]=y[I]}T=new d(E)}return T},w=function(e,t,n){const i=c(n,"TILEOFFSETS");if(void 0===i)return null;const a=c(n,"TILEBYTECOUNTS"),s=t.tileWidth,l=t.tileHeight,{width:r,height:o,pixelType:u,isBSQ:h}=t,g=t.planes,w=r*o,d=c(n,"BITSPERSAMPLE")[0],I=f(u),T=[];for(let f=0;f<g;f++)T.push(new I(w));let E,y,m,A,S,M,b,x,O,D,U,N,k;const L=Math.ceil(r/s);if(d%8==0)for(E=0;E<i.length;E++)for(M=Math.floor(E/L)*l,b=E%L*s,x=M*r+b,m=p(e,t.littleEndian,n,i[E],a[E]),D=0,O=x,N=Math.min(s,r-b),U=Math.min(l,o-M),y=0;y<g;y++)if(k=T[y],h)for(A=0;A<U;A++)for(O=x+A*r,D=s*l*y+A*s,S=0;S<N;S++,O++,D++)k[O]=m[D];else for(A=0;A<U;A++)for(O=x+A*r,D=A*s*g+y,S=0;S<N;S++,O++,D+=g)k[O]=m[D];return{width:r,height:o,pixelType:u,pixels:T}},d=function(n,a,l){const r=s===a.littleEndian,o=c(l,"STRIPOFFSETS");if(void 0===o)return null;const{width:u,height:h,pixelType:g}=a,p=a.planes,w=u*h,d=c(l,"BITSPERSAMPLE")[0],I=f(g),T=new I(w*p),E=c(l,"STRIPBYTECOUNTS"),y=c(l,"ROWSPERSTRIP")[0],m=c(l,"COMPRESSION")?c(l,"COMPRESSION")[0]:1;let A,S,M,b,x,O,D,U,N,k,L,P=y;if(d%8==0)for(A=0;A<o.length;A++){if(x=A*(y*u)*p,P=(A+1)*y>h?h-A*y:y,"u8"===g||"s8"===g||r){if(8===m||32946===m)D=new Uint8Array(n,o[A],E[A]),k=new e(D),L=k.getBytes(),O=new ArrayBuffer(L.length),D=new Uint8Array(O),D.set(L),D.length!==P*u*p*d/8&&console.log("strip byte counts is different than expected");else if(6===m){D=new Uint8Array(n,o[A],E[A]);const e=new t;e.parse(D);const i=e.getData(e.width,e.height,!0);O=new ArrayBuffer(i.length),D=new Uint8Array(O),D.set(i)}else 5===m?(D=i(n,o[A],E[A],a.littleEndian),O=D.buffer):1===m&&(E[A]!==P*u*p*d/8&&console.log("strip byte counts is different than expected"),O=n.slice(o[A],o[A]+E[A]));b=new I(O)}else{switch(6===m||8===m||32946===m?(D=new Uint8Array(n,o[A],E[A]),k=new e(D),D=k.getBytes(),O=new ArrayBuffer(D.length),U=new Uint8Array(O),D.length!==P*u*p*d/8&&console.log("strip byte counts is different than expected")):1===m&&(E[A]!==P*u*p*d/8&&console.log("strip byte counts is different than expected"),O=new ArrayBuffer(E[A]),D=new Uint8Array(n,o[A],E[A]),U=new Uint8Array(O)),g){case"u16":case"s16":for(M=0;M<D.length;M+=2)U[M]=D[M+1],U[M+1]=D[M];break;case"u32":case"s32":case"f32":for(M=0;M<D.length;M+=4)U[M]=D[M+3],U[M+1]=D[M+2],U[M+2]=D[M+1],U[M+3]=D[M]}b=new I(O)}T.set(b,x)}const G=[];if(1===p)G.push(T);else for(A=0;A<p;A++){for(N=new I(w),S=0;S<w;S++)N[S]=T[S*p+A];G.push(N)}return{width:u,height:h,pixelType:g,pixels:G}},I=function(e,t,n){if(!(e&&e.length>0&&t&&n))return null;let i,a,s;const l=e[0].length,r=e.length,o=new Uint8Array(l);for(let f=0;f<r;f++)if(i=e[f],a=t[f],s=n[f],0===f)for(let e=0;e<l;e++)o[e]=i[e]<a||i[e]>s?0:1;else for(let e=0;e<l;e++)o[e]&&(o[e]=i[e]<a||i[e]>s?0:1);return o},T=function(e){if(!e)return null;const t=e.match(/<Item(.*?)Item>/gi);if(!t||0===t.length)return null;const n=new Map;let i,a,s,l,r;for(let I=0;I<t.length;I++)i=t[I],a=i.slice("<Item ".length,i.indexOf(">")),l=i.indexOf("sample="),l>-1&&(r=i.slice(l+'sample="'.length,i.indexOf('"',l+'sample="'.length))),l=i.indexOf("name="),l>-1&&(a=i.slice(l+'name="'.length,i.indexOf('"',l+'name="'.length))),a&&(s=i.slice(i.indexOf(">")+1,i.indexOf("</Item>")).trim(),null!=r?n.has(a)?n.get(a)[r]=s:n.set(a,[s]):n.set(a,s)),r=null;const o=n.get("STATISTICS_MINIMUM"),f=n.get("STATISTICS_MAXIMUM"),u=n.get("STATISTICS_MEAN"),c=n.get("STATISTICS_STDDEV");let h=null;if(o&&f){h=[];for(let e=0;e<o.length;e++)h.push({min:parseFloat(o[e]),max:parseFloat(f[e]),avg:u&&parseFloat(u[e]),stddev:c&&parseFloat(c[e])})}const g=n.get("BandName"),p=n.get("WavelengthMin"),w=n.get("WavelengthMax");let d=null;if(g){d=[];for(let e=0;e<g.length;e++)d.push({BandName:g[e],WavelengthMin:p&&parseFloat(p[e]),WavelengthMax:w&&parseFloat(w[e])})}return{statistics:h,bandProperties:d,dataType:n.get("DataType"),rawMetadata:n}};function E(e,t,n,i=0,a=!1,s=4){if(n.values)return!0;const o=n.type,f=n.valueCount;let u=n.valueOffset,c=[];const h=l[o],g=8*h,p=f*h,w=f*l[o]*8;let d,I;const T=8===s?64:32,E=n.valueOffsets;if(w>T){if(p>(a?e.byteLength:e?e.byteLength-u+i:0))return n.offlineOffsetSize=[u,p],n.values=null,!1}if(w<=T){if(!t)if(T<=32)u>>>=32-w;else{const e=null!=E&&E.length?E[0]:u>>>0,t=null!=E&&E.length?E[1]:Math.round((u-e)/r);w<=32?(u=e>>>32-w,E[0]=u):(u=e*2**(32-w)+(t>>>32-w),E[0]=e,E[1]=t>>>32-w)}if(1===f&&g===T)c=[u];else if(64===T){const e=null!=E&&E.length?E[0]:u>>>0,t=null!=E&&E.length?E[1]:Math.round((u-e)/r);let n=e,i=32;for(I=1;I<=f;I++){const e=32-g*I%32;if(i<g){const a=n<<e>>>32-i,s=t<<32-i>>>32-i;n=t,c.push(a+s*2**(g-i)),i-=32-(g-i)}else c.push(n<<e>>>32-g),i-=g;0===i&&(i=32,n=t)}}else for(I=1;I<=f;I++){const e=32-g*I;c.push(u<<e>>>32-g)}}else{u-=i,a&&(u=0);for(let n=u;n<u+p;n+=h){switch(o){case 1:case 2:d=new DataView(e,n,1).getUint8(0);break;case 3:d=new DataView(e,n,2).getUint16(0,t);break;case 4:d=new DataView(e,n,4).getUint32(0,t);break;case 5:d=new DataView(e,n,4).getUint32(0,t)/new DataView(e,n+4,4).getUint32(0,t);break;case 6:d=new DataView(e,n,1).getInt8(0);break;case 7:d=new DataView(e,n,1).getUint8(0);break;case 8:d=new DataView(e,n,2).getInt16(0,t);break;case 9:d=new DataView(e,n,4).getInt32(0,t);break;case 10:d=new DataView(e,n,4).getInt32(0,t)/new DataView(e,n+4,4).getInt32(0,t);break;case 11:d=new DataView(e,n,4).getFloat32(0,t);break;case 12:d=new DataView(e,n,8).getFloat64(0,t);break;case 16:case 18:d=A(new DataView(e,n,8),0,t);break;case 17:d=S(new DataView(e,n,8),0,t);break;default:d=null}c.push(d)}}if(2===o){let e="";const t=c;for(c=[],I=0;I<t.length;I++)0===t[I]&&""!==e?(c.push(e),e=""):e+=String.fromCharCode(t[I]);""===e&&0!==c.length||c.push(e)}return n.values=c,!0}function y(e){const t=e[0],n=h(t,"TILEWIDTH"),i=h(t,"TILELENGTH"),a=h(t,"IMAGEWIDTH"),s=h(t,"IMAGELENGTH"),l=h(t,"BITSPERSAMPLE"),r=h(t,"SAMPLESPERPIXEL"),f=h(t,"SAMPLEFORMAT")||1,g=o(f,l),p=!!c(t,"PLANARCONFIGURATION")&&2===c(t,"PLANARCONFIGURATION")[0],w=c(t,"GDAL_NODATA");let d;null!=w&&("string"==typeof w[0]?(d=w.map((e=>parseFloat(e))),d.some((e=>isNaN(e)))&&(d=null)):"number"==typeof w[0]&&(d=w));const I=h(t,"COMPRESSION")||1;let E;switch(I){case 1:E="NONE";break;case 2:case 3:case 4:case 32771:E="CCITT";break;case 5:E="LZW";break;case 6:case 7:E="JPEG";break;case 32773:E="PACKBITS";break;case 8:case 32946:E="DEFLATE";break;case 34712:E="JPEG2000";break;default:E=String(I)}let y=!0,m="";1!==I&&5!==I&&6!==I&&8!==I&&32946!==I&&(y=!1,m+="unsupported tag compression "+I),f>3&&(y=!1,m+="unsupported tag sampleFormat "+f),l%8!=0&&(y=!1,m+="unsupported tag bitsPerSample "+l);const A=h(t,"GEOASCIIPARAMS");let S;if(A){const e=A.split("|").filter((e=>e.indexOf("ESRI PE String = ")>-1))[0],t=e?e.replace("ESRI PE String = ",""):"";S=0===t.indexOf("PROJCS")||0===t.indexOf("GEOGCS")?{wkid:null,wkt:t}:null}const M=c(t,"GEOTIEPOINTS"),b=c(t,"GEOPIXELSCALE"),x=c(t,"GEOTRANSMATRIX"),D=t.has("GEOKEYDIRECTORY")?t.get("GEOKEYDIRECTORY").data:null;let U,N,k=!1;if(D){k=2===h(D,"GTRasterTypeGeoKey");const e=h(D,"GTModelTypeGeoKey");if(2===e){const e=h(D,"GeographicTypeGeoKey");e>=1024&&e<=32766&&(S={wkid:e})}else if(1===e){const e=h(D,"ProjectedCSTypeGeoKey");e>=1024&&e<=32766&&(S={wkid:e})}}if(b&&M&&M.length>=6?(U=[b[0],0,M[3]-M[0]*b[0],0,-Math.abs(b[1]),M[4]-M[1]*b[1]],k&&(U[2]-=.5*U[0]+.5*U[1],U[5]-=.5*U[3]+.5*U[4])):x&&16===x.length&&(U=k?[x[0],x[1],x[3]-.5*x[0],x[4],x[5],x[7]-.5*x[5]]:[x[0],x[1],x[3],x[4],x[5],x[7]]),U){const e=[{x:0,y:s},{x:0,y:0},{x:a,y:s},{x:a,y:0}];let t,n=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY,r=Number.NEGATIVE_INFINITY;for(let a=0;a<e.length;a++)t=u(e[a],U),n=t.x>n?n:t.x,l=t.x<l?l:t.x,i=t.y>i?i:t.y,r=t.y<r?r:t.y;N={xmin:n,xmax:l,ymin:i,ymax:r,spatialReference:S}}const L=e.filter((e=>1===h(e,"NEWSUBFILETYPE")));let P,G,R,F,C;L.length>0&&(P=Math.round(Math.log(a/h(L[0],"IMAGEWIDTH"))/Math.LN2),G=Math.round(Math.log(a/h(L[L.length-1],"IMAGEWIDTH"))/Math.LN2),R=h(L[L.length-1],"TILEWIDTH"),F=h(L[L.length-1],"TILEHEIGHT")),R=G>0?R||n:null,F=G>0?F||i:null,n&&(C=[{maxCol:Math.ceil(a/n)-1,maxRow:Math.ceil(s/i)-1,minRow:0,minCol:0}],L.forEach((e=>{C.push({maxCol:Math.ceil(h(e,"IMAGEWIDTH")/h(e,"TILEWIDTH"))-1,maxRow:Math.ceil(h(e,"IMAGELENGTH")/h(e,"TILELENGTH"))-1,minRow:0,minCol:0})})));const v=h(e[0],"GDAL_METADATA"),B=T(v);return m+=" "+O({width:a,height:s,tileWidth:n,tileHeight:i,planes:r,ifds:e}),{width:a,height:s,tileWidth:n,tileHeight:i,planes:r,isBSQ:p,pixelType:g,compression:E,noData:d,isSupported:y,message:m,extent:N,affine:b?null:U,firstPyramidLevel:P,maximumPyramidLevel:G,pyramidBlockWidth:R,pyramidBlockHeight:F,tileBoundary:C,metadata:B}}function m(e){const{littleEndian:t,isBigTiff:n,firstIFD:i}=b(e);let s=i;const l=[];do{const i=x(e,t,s,0,a.TIFF_TAGS,n?8:4);if(!i.success)break;l.push(i.ifd),s=i.nextIFD}while(s>0);return{...y(l),littleEndian:t,isBigTiff:n,ifds:l}}function A(e,t,n){const i=e.getUint32(t,n),a=e.getUint32(t+4,n);return n?a*r+i:i*r+a}function S(e,t,n){let i=n?e.getInt32(t,n):e.getUint32(t,n),a=n?e.getUint32(t+4,n):e.getInt32(t+4,n);const s=(n?i:a)>=0?1:-1;n?i*=s:a*=s;return s*(n?a*r+i:i*r+a)}function M(e,t,n,i){return i?A(e,t,n):e.getUint32(t,n)}function b(e){const t=new DataView(e,0,16),n=t.getUint16(0,!1);let i=null;if(18761===n)i=!0;else{if(19789!==n)throw"unexpected endianess byte";i=!1}const a=t.getUint16(2,i);if(42!==a&&43!==a)throw"unexpected tiff identifier";let s=4;const l=43===a;if(l){const e=t.getUint16(s,i);if(s+=2,8!==e)throw"unsupported bigtiff version";if(0!==t.getUint16(s,i))throw"unsupported bigtiff version";s+=2}return{littleEndian:i,isBigTiff:l,firstIFD:M(t,s,i,l)}}function x(e,t,i,s=0,l=a.TIFF_TAGS,r=4){const o=g(e,t,i,s,l,r);let f;const u=o.ifd;if(u){if(a.ifdTags.forEach(((n,i)=>{u.has(i)&&(f=u.get(i),f.data=g(e,t,f.valueOffset-s,s,n).ifd)})),u.has("GEOKEYDIRECTORY")){f=u.get("GEOKEYDIRECTORY");const n=f.values;if(n&&n.length>4){const i=n[0]+"."+n[1]+"."+n[2];f.data=g(e,t,f.valueOffset+6-s,s,a.GEO_KEYS,2).ifd,f.data&&f.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[i]})}}if(u.has("XMP")){f=u.get("XMP");const e=f.values;"number"==typeof e[0]&&7===f.type&&(f.values=[n(new Uint8Array(e))])}}return o}function O(e){const{width:t,height:n,tileHeight:i,tileWidth:a}=e,s=e.planes,l=a?a*i:t*n,r=c(e.ifds[0],"BITSPERSAMPLE")[0];let o="";return l*s>2**30/(r>8?r/8:1)&&(o=a?"tiled tiff exceeding 1 gigabits per tile is not supported":"scanline tiff exceeding 1 gigabits is not supported"),o}function D(e,t){const{headerInfo:n,ifd:i}=t,a=p(e,n.littleEndian,i,t.offset||0,t.size||e.byteLength),{pixelType:s,isBSQ:l,planes:r}=n,o=f(s),u=a.length/r;let c;const g=[];for(let f=0;f<r;f++){if(c=new o(u),l)c=a.slice(u*f,u*(f+1));else for(let e=0;e<u;e++)c[e]=a[e*r+f];g.push(c)}const w=h(i,"TILEWIDTH"),d=h(i,"TILELENGTH"),T=n.noData?n.noData[0]:null,E=n.metadata?n.metadata.statistics:null,y=E?E.map((e=>e.min)):null,m=E?E.map((e=>e.max)):null;let A,S;if(null!=T)if(A=new Uint8Array(u),Math.abs(T)>1e24)for(S=0;S<u;S++)Math.abs((g[0][S]-T)/T)<1e-6?A[S]=0:A[S]=1;else for(S=0;S<u;S++)g[0][S]===T?A[S]=0:A[S]=1;else y&&m&&t.applyMinMaxConstraint&&(A=I(g,y,m));return{pixelType:s,width:w,height:d,pixels:g,mask:A,noDataValue:T}}function U(e,t){t=t||m(e);const{ifds:n,noData:i}=t;if(0===n.length)throw"no valid image file directory";const a=O(t);if(a)throw a;let s,l;const r=n[0],o=i?i[0]:null;if(l=t.tileWidth?w(e,t,r):d(e,t,r),null!==o){if(l.mask=new Uint8Array(l.width*l.height),Math.abs(o)>1e24)for(s=0;s<l.width*l.height;s++)Math.abs((l.pixels[0][s]-o)/o)<1e-6?l.mask[s]=0:l.mask[s]=1;else for(s=0;s<l.width*l.height;s++)l.pixels[0][s]===o?l.mask[s]=0:l.mask[s]=1;l.noDataValue=o}return l}export{U as decode,D as decodeTileOrStrip,y as getImageInfo,E as parseFieldValues,m as parseHeader,x as parseIFD,b as parseSignature};
