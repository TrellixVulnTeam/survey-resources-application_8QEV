/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"../../core/has.js";import{eachAlways as e}from"../../core/promiseUtils.js";import r from"../../core/Collection.js";import a from"../../portal/PortalItem.js";import{loadStyleRenderer as t}from"../../renderers/support/styleUtils.js";import{layerLookupMap as y}from"./lazyLayerLoader.js";import{isMapNotesLayer as i,isRouteLayer as L}from"../../portal/support/featureCollectionUtils.js";import{selectLayerClassPath as o}from"../../portal/support/portalLayers.js";async function n(r,a,t){if(!a)return;const y=[];for(const e of a){const r=I(e,t);"GroupLayer"===e.layerType?y.push(M(r,e,t)):y.push(r)}const i=await e(y);for(const e of i)!e.value||t.filter&&!t.filter(e.value)||r.add(e.value)}const l={ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",PointCloudLayer:"PointCloudLayer",ArcGISSceneServiceLayer:"SceneLayer",IntegratedMeshLayer:"IntegratedMeshLayer",BuildingSceneLayer:"BuildingSceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",GroupLayer:"GroupLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",VectorTileLayer:"VectorTileLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer",KML:"KMLLayer",RasterDataLayer:"UnsupportedLayer"},c={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},s={ArcGISTiledMapServiceLayer:"TileLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",OpenStreetMap:"OpenStreetMapLayer",WebTiledLayer:"WebTileLayer",VectorTileLayer:"VectorTileLayer",ArcGISImageServiceLayer:"UnsupportedLayer",WMS:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",DefaultTileLayer:"TileLayer"},p={ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",VectorTileLayer:"VectorTileLayer",GroupLayer:"GroupLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",GeoRSS:"GeoRSSLayer",KML:"KMLLayer",WFS:"UnsupportedLayer",SubtypeGroupLayer:"UnsupportedLayer",WMS:"WMSLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",DefaultTileLayer:"TileLayer"},S={ArcGISFeatureLayer:"FeatureLayer"},u={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WebTiledLayer:"WebTileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer"};async function I(e,r){return d(await T(e,r),e,r)}async function d(e,r,a){const y=new e;return y.read(r,a.context),"group"===y.type&&m(r)&&await G(y,r,a.context),await t(y,a.context),y}async function T(e,r){const t=r.context,n=f(t);let l=e.layerType||e.type;!l&&r&&r.defaultLayerType&&(l=r.defaultLayerType);const c=n[l];let s=c?y[c]:y.UnknownLayer;const p=t&&t.portal;if(g(e)){if(e.itemId){const r=new a({id:e.itemId,portal:p});await r.load();const t=(await o(r)).className||"UnknownLayer";s=y[t]}}else"ArcGISFeatureLayer"===l&&(await i(e,p)?s=y.MapNotesLayer:await L(e,p)?s=y.RouteLayer:m(e)&&(s=y.GroupLayer));return e.wmtsInfo&&e.wmtsInfo.url&&e.wmtsInfo.layerIdentifier&&(s=y.WMTSLayer),s()}function m(e){if("ArcGISFeatureLayer"!==e.layerType||g(e))return!1;const r=e.featureCollection;return!!(r&&r.layers&&r.layers.length>1)}function g(e){return"Feature Collection"===e.type}function f(e){let r;switch(e.origin){case"web-scene":switch(e.layerContainerType){case"basemap":r=s;break;case"ground":r=c;break;default:r=l}break;default:switch(e.layerContainerType){case"basemap":r=u;break;case"tables":r=S;break;default:r=p}}return r}async function M(e,a,t){const y=new r,i=n(y,Array.isArray(a.layers)?a.layers:[],t),L=await e;if(await i,"group"===L.type)return L.layers.addMany(y),L}async function G(e,r,a){const t=y.FeatureLayer,i=await t(),L=r.featureCollection,o=L.showLegend,n=L.layers.map((e=>{const r=new i;return r.read(e,a),null!=o&&r.read({showLegend:o},a),r}));e.layers.addMany(n)}export{n as populateOperationalLayers};
