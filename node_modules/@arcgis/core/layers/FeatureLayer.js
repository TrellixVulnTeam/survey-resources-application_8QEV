/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../core/has.js";import{setDeepValue as r}from"../core/object.js";import{destroyMaybe as i,isSome as o}from"../core/maybe.js";import s from"../core/Logger.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import{cast as n}from"../core/accessorSupport/decorators/cast.js";import{JSONMap as p}from"../core/jsonMap.js";import{reader as l}from"../core/accessorSupport/decorators/reader.js";import{createTypeReader as u}from"../core/accessorSupport/extensions/serializableProperty/reader.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import{writer as c}from"../core/accessorSupport/decorators/writer.js";import y from"../core/Error.js";import{urlToObject as h,join as m}from"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{throwIfAborted as f}from"../core/promiseUtils.js";import b from"../geometry/SpatialReference.js";import g from"../geometry/Extent.js";import w from"../core/Collection.js";import{fixRendererFields as v,getField as S,fixTimeInfoFields as I}from"./support/fieldUtils.js";import F from"../PopupTemplate.js";import j from"../request.js";import{symbolTypes as D,symbolTypesRenderer as x}from"../symbols.js";import E from"../core/Handles.js";import T from"./Layer.js";import{MultiOriginJSONMixin as R}from"../core/MultiOriginJSONSupport.js";import{titleFromUrlAndName as M,parse as C,cleanTitle as O,sanitizeUrlWithLayerId as A,writeUrlWithLayerId as P}from"./support/arcgisLayerUrl.js";import _ from"../geometry/HeightModelInfo.js";import{elevationInfo as L,id as Q,labelsVisible as q,opacityDrawingInfo as U,legendEnabled as V,minScale as G,maxScale as B,popupEnabled as k,screenSizePerspectiveEnabled as z,url as W}from"./support/commonProperties.js";import{OperationalLayer as N}from"./mixins/OperationalLayer.js";import"../renderers/Renderer.js";import"../renderers/ClassBreaksRenderer.js";import Z from"../renderers/UniqueValueRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import J from"../renderers/SimpleRenderer.js";import{rendererTypes as $,webSceneRendererTypes as H}from"../renderers/support/types.js";import{read as K,write as X}from"../renderers/support/jsonUtils.js";import Y from"./support/FieldsIndex.js";import ee from"../form/FormTemplate.js";import te from"../tasks/support/FeatureSet.js";import re from"./graphics/sources/MemorySource.js";import{ArcGISService as ie}from"./mixins/ArcGISService.js";import{BlendLayer as oe}from"./mixins/BlendLayer.js";import{CustomParametersMixin as se}from"./mixins/CustomParametersMixin.js";import{PortalLayer as ae}from"./mixins/PortalLayer.js";import{RefreshableLayer as ne}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as pe}from"./mixins/ScaleRangeLayer.js";import le from"./support/TimeInfo.js";import{TemporalLayer as ue}from"./mixins/TemporalLayer.js";import{FeatureIndex as de}from"./support/FeatureIndex.js";import ce from"./support/FeatureReduction.js";import ye from"./support/LabelClass.js";import he from"./support/FeatureReductionCluster.js";import me from"./support/FeatureReductionSelection.js";import{read as fe,writeTarget as be,webSceneFeatureReductionTypes as ge}from"./support/featureReductionUtils.js";import we from"./support/FeatureTemplate.js";import ve from"./support/FeatureType.js";import{defineFieldProperties as Se}from"./support/fieldProperties.js";import Ie from"./support/GeometryFieldsInfo.js";import{reader as Fe}from"./support/labelingInfo.js";import je from"./support/LayerFloorInfo.js";import De from"./support/Relationship.js";import{DataLayerSource as xe}from"./support/source/DataLayerSource.js";import{loadStyleRenderer as Ee}from"../renderers/support/styleUtils.js";import{createPopupTemplate as Te}from"../support/popupUtils.js";import Re from"../tasks/support/AttachmentQuery.js";import Me from"../tasks/support/Query.js";import Ce from"../tasks/support/RelationshipQuery.js";const Oe=new p({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"}),Ae={name:"supportsName",size:"supportsSize",contentType:"supportsContentType",keywords:"supportsKeywords",exifInfo:"supportsExifInfo"},Pe="FeatureLayer",_e=s.getLogger("esri.layers.FeatureLayer");function Le(e){return e&&e instanceof w}function Qe(e,t,r){return!!(e&&e.hasOwnProperty(t)?e[t]:r)}function qe(e,t,r){return e&&e.hasOwnProperty(t)?e[t]:r}const Ue=Se();function Ve(e,t,r){const i=!(null==r||!r.writeLayerSchema);return{enabled:i,ignoreOrigin:i}}let Ge=class extends(oe(ue(pe(ne(ie(N(ae(R(se(T)))))))))){constructor(...e){super(...e),this._handles=new E,this.capabilities=null,this.charts=null,this.copyright=null,this.displayField=null,this.definitionExpression=null,this.dynamicDataSource=null,this.editFieldsInfo=null,this.editingEnabled=!0,this.editingInfo=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.floorInfo=null,this.formTemplate=null,this.fullExtent=null,this.gdbVersion=null,this.geometryFieldsInfo=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.heightModelInfo=null,this.historicMoment=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.layerId=void 0,this.legendEnabled=!0,this.minScale=0,this.maxScale=0,this.globalIdField=null,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.returnM=void 0,this.returnZ=void 0,this.screenSizePerspectiveEnabled=!0,this.serviceDefinitionExpression=null,this.spatialReference=b.WGS84,this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.trackIdField=null,this.type="feature",this.typeIdField=null,this.types=null,this.indexes=new(w.ofType(de)),this.userIsAdmin=!1,this.version=void 0,this.visible=!0}destroy(){var e;null==(e=this.source)||e.destroy(),this._handles=i(this._handles)}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=o(e)?e.signal:null;if(this.portalItem&&this.portalItem.loaded&&this.source)return void this.addResolvingPromise(this.createGraphicsSource(t).then((e=>this._initLayerProperties(e))));const r=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection"]},e).catch((e=>e)).then((async()=>{if(this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)){const e=await this._fetchFirstLayerId(t);null!=e&&(this.layerId=e)}if(!this.url&&!this._hasMemorySource())throw new y("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this._initLayerProperties(await this.createGraphicsSource(t))}));return this.addResolvingPromise(r),Promise.resolve(this)}readCapabilities(e,t){return t=t.layerDefinition||t,{attachment:this._readAttachmentCapabilities(t.attachmentProperties),data:this._readDataCapabilities(t),metadata:this._readMetadataCapabilities(t),operations:this._readOperationsCapabilities(t.capabilities||e,t),query:this._readQueryCapabilities(t),queryRelated:this._readQueryRelatedCapabilities(t),editing:this._readEditingCapabilities(t)}}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")||0)+1}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,r){return this._readEditingEnabled(t,!0,r)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,r,i){this._writeEditingEnabled(e,t,!0,i)}readEditingInfo(e,t){const{editingInfo:r}=t;return r?{lastEditDate:null!=r.lastEditDate?new Date(r.lastEditDate):null}:null}readFeatureReduction(e,t){return fe(e,t)}writeWebSceneFeatureReduction(e,t,r,i){be(e,t,"layerDefinition.featureReduction",i)}get fieldsIndex(){return new Y(this.fields||[])}readIsTable(e,t){return"Table"===(t=t&&t.layerDefinition||t).type||!t.geometryType}writeIsTable(e,t,i,o){null!=o&&o.writeLayerSchema&&r(i,e?"Table":"Feature Layer",t)}readMinScale(e,t){return t.effectiveMinScale||e||0}readMaxScale(e,t){return t.effectiveMaxScale||e||0}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields)for(const r of t.fields)if("esriFieldTypeGlobalID"===r.type)return r.name}readObjectIdFieldFromService(e,t){if((t=t.layerDefinition||t).objectIdField)return t.objectIdField;if(t.fields)for(const r of t.fields)if("esriFieldTypeOID"===r.type)return r.name}get parsedUrl(){const e=this.url?h(this.url):null;return null!=e&&(null!=this.dynamicDataSource?e.path=m(e.path,"dynamicLayer"):null!=this.layerId&&(e.path=m(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){v(e,this.fields),this._set("renderer",e)}readRenderer(e,t,r){const i=(t=t.layerDefinition||t).drawingInfo&&t.drawingInfo.renderer||void 0;if(i){const e=K(i,t,r)||void 0;return e||_e.error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),e}if(t.defaultSymbol)return t.types&&t.types.length?new Z({defaultSymbol:Be(t.defaultSymbol,t,r),field:t.typeIdField,uniqueValueInfos:t.types.map((e=>({id:e.id,symbol:Be(e.symbol,e,r)})))}):new J({symbol:Be(t.defaultSymbol,t,r)})}set source(e){const t=this._get("source");t!==e&&(Le(t)&&this._resetMemorySource(t),Le(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof w?new re({layer:this,items:e}):e:null}readSource(e,t){const r=te.fromJSON(t.featureSet);return new re({layer:this,items:r&&r.features||[]})}readServiceDefinitionExpression(e,t){return t.definitionQuery||t.definitionExpression}readTemplates(e,t){const r=t.editFieldsInfo,i=r&&r.creatorField,o=r&&r.editorField;return e=e&&e.map((e=>we.fromJSON(e))),this._fixTemplates(e,i),this._fixTemplates(e,o),e}readTitle(e,t){const r=t.layerDefinition&&t.layerDefinition.name||t.name,i=t.title||t.layerDefinition&&t.layerDefinition.title;if(r){const e=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return this.url?M(this.url,r):r;let t=r;if(!t&&this.url){const e=C(this.url);o(e)&&(t=e.title)}if(!t)return;return"item-title-and-service-name"===this.sublayerTitleMode&&e&&e!==t&&(t=e+" - "+t),O(t)}if("item-title"===this.sublayerTitleMode&&i)return i}readTitleFromWebMap(e,t){return t.title||t.layerDefinition&&t.layerDefinition.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r){const e=S(t.fields,r);e&&(r=e.name)}return r}readTypes(e,t){e=(t=t.layerDefinition||t).types;const r=t.editFieldsInfo,i=r&&r.creatorField,o=r&&r.editorField;return e&&e.map((e=>(e=ve.fromJSON(e),this._fixTemplates(e.templates,i),this._fixTemplates(e.templates,o),e)))}set url(e){const t=A({layer:this,url:e,nonStandardUrlAllowed:!0,logger:_e});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,i){P(this,e,null,t,i)}readVersion(e,t){return t.currentVersion?t.currentVersion:t.hasOwnProperty("capabilities")||t.hasOwnProperty("drawingInfo")||t.hasOwnProperty("hasAttachments")||t.hasOwnProperty("htmlPopupType")||t.hasOwnProperty("relationships")||t.hasOwnProperty("timeInfo")||t.hasOwnProperty("typeIdField")||t.hasOwnProperty("types")?10:9.3}readVisible(e,t){return t.layerDefinition&&null!=t.layerDefinition.defaultVisibility?!!t.layerDefinition.defaultVisibility:null!=t.visibility?!!t.visibility:void 0}addAttachment(e,t){return this.load().then((()=>this._checkAttachmentSupport(e))).then((()=>{if(!("addAttachment"in this.source))throw new y(Pe,"Layer source does not support addAttachment capability");return this.source.addAttachment(e,t)}))}updateAttachment(e,t,r){return this.load().then((()=>this._checkAttachmentSupport(e))).then((()=>{if(!("updateAttachment"in this.source))throw new y(Pe,"Layer source does not support updateAttachment capability");return this.source.updateAttachment(e,t,r)}))}async applyEdits(e,t){const r=await import("./graphics/editingSupport.js");return await this.load(),r.applyEdits(this,this.source,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return Te(this,e)}async createGraphicsSource(e){if(this._hasMemorySource())return this.emit("graphics-source-create",{graphicsSource:this.source}),this.source.load({signal:e});const t=await import("./graphics/sources/FeatureLayerSource.js");f(e);const r=await new t.default({layer:this}).load({signal:e});return this.emit("graphics-source-create",{graphicsSource:r}),r}createQuery(){const e=new Me,t=this.get("capabilities.data");e.dynamicDataSource=this.dynamicDataSource,e.gdbVersion=this.gdbVersion,e.historicMoment=this.historicMoment,e.returnGeometry=!0,t&&(t.supportsZ&&null!=this.returnZ&&(e.returnZ=this.returnZ),t.supportsM&&null!=this.returnM&&(e.returnM=this.returnM)),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:r,timeExtent:i}=this;return e.timeExtent=null!=r&&null!=i?i.offset(-r.value,r.unit):i||null,e.multipatchOption="multipatch"===this.geometryType?"xyFootprint":null,e}deleteAttachments(e,t){return this.load().then((()=>this._checkAttachmentSupport(e))).then((()=>{if(!("deleteAttachments"in this.source))throw new y(Pe,"Layer source does not support deleteAttachments capability");return this.source.deleteAttachments(e,t)}))}fetchRecomputedExtents(e){return this.load({signal:null==e?void 0:e.signal}).then((()=>{if(this.source.fetchRecomputedExtents)return this.source.fetchRecomputedExtents(e);throw new y(Pe,"Layer source does not support fetchUpdates capability")}))}getFeatureType(e){const{typeIdField:t,types:r}=this;if(!t||!e)return null;const i=e.attributes?e.attributes[t]:void 0;if(null==i)return null;let o=null;return r.some((e=>{const{id:t}=e;return null!=t&&(t.toString()===i.toString()&&(o=e),!!o)})),o}getFieldDomain(e,t){const r=t&&t.feature,i=this.getFeatureType(r);if(i){const t=i.domains&&i.domains[e];if(t&&"inherited"!==t.type)return t}return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}queryAttachments(e,t){return e=Re.from(e),this.load().then((()=>{if(!this.get("capabilities.data.supportsAttachment"))throw new y(Pe,"this layer doesn't support attachments");const{attachmentTypes:t,objectIds:r,globalIds:i,num:o,size:s,start:a,where:n}=e;if(!this.get("capabilities.operations.supportsQueryAttachments")){const p=r&&r.length>1,l=t&&t.length,u=i&&i.length,d=s&&s.length;if(p||l||u||d||o||a||n)throw new y(Pe,"when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported",e)}if(!(r&&r.length||n))throw new y(Pe,"'objectIds' or 'where' are required to perform attachment query",e);if(!("queryAttachments"in this.source))throw new y(Pe,"Layer source does not support queryAttachments capability",e);return this.source.queryAttachments(e)}))}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(Me.from(e)||this.createQuery(),t))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>{if(this.source.queryObjectIds)return this.source.queryObjectIds(Me.from(e)||this.createQuery(),t);throw new y(Pe,"Layer source does not support queryObjectIds capability")}))}queryFeatureCount(e,t){return this.load().then((()=>{if(this.source.queryFeatureCount)return this.source.queryFeatureCount(Me.from(e)||this.createQuery(),t);throw new y(Pe,"Layer source does not support queryFeatureCount capability")}))}queryExtent(e,t){return this.load().then((()=>{if(this.source.queryExtent)return this.source.queryExtent(Me.from(e)||this.createQuery(),t);throw new y(Pe,"Layer source does not support queryExtent capability")}))}queryRelatedFeatures(e,t){return this.load().then((()=>{if("queryRelatedFeatures"in this.source)return this.source.queryRelatedFeatures(Ce.from(e),t);throw new y(Pe,"Layer source does not support queryRelatedFeatures capability")}))}queryRelatedFeaturesCount(e,t){return this.load().then((()=>{if("queryRelatedFeaturesCount"in this.source)return this.source.queryRelatedFeaturesCount(Ce.from(e),t);throw new y(Pe,"Layer source does not support queryRelatedFeaturesCount capability")}))}read(e,t){const r=e.featureCollection;if(r){const e=r.layers;e&&1===e.length&&(super.read(e[0],t),null!=r.showLegend&&super.read({showLegend:r.showLegend},t))}super.read(e,t),t&&"service"===t.origin&&this.revert(["objectIdField","fields","timeInfo","spatialReference"],"service")}write(e,t){var r,i;const o=(t={...t,writeLayerSchema:null!=(r=null==(i=t)?void 0:i.writeLayerSchema)?r:this._hasMemorySource()}).origin,s=t.layerContainerType,a=t.messages;if(this.isTable){if("web-scene"===o||"web-map"===o&&"tables"!==s)return a&&a.push(new y("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a Table source cannot be written to web scenes and web maps`,{layer:this})),null;if(this._hasMemorySource())return a&&a.push(new y("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using an in-memory Table source cannot be written to web scenes and web maps`,{layer:this})),null}else if(this.loaded&&"web-map"===o&&"tables"===s)return a&&a.push(new y("layer:unsupported",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a non-table source cannot be written to tables in web maps`,{layer:this})),null;return super.write(e,t)}_readEditingEnabled(e,t,r){var i;let o=null==(i=e.layerDefinition)?void 0:i.capabilities;return o?this._hasEditingCapability(o):(o=e.capabilities,!(t&&"web-map"===(null==r?void 0:r.origin)&&!this._hasMemorySource()&&o)||this._hasEditingCapability(o))}_hasEditingCapability(e){return e.toLowerCase().split(",").map((e=>e.trim())).includes("editing")}_writeEditingEnabled(e,t,i,o){if(!e){var s,a;const e=null!=(s=this.capabilities)&&null!=(a=s.operations)&&a.supportsSync?"Query,Sync":"Query";r("layerDefinition.capabilities",e,t),!i||null!=o&&o.writeLayerSchema||(t.capabilities=e)}}_checkAttachmentSupport(e){const{attributes:t}=e,{objectIdField:r}=this;return this.get("capabilities.data.supportsAttachment")?e?t?t[r]?void 0:Promise.reject(new y(Pe,`feature is missing the identifying attribute ${r}`)):Promise.reject(new y(Pe,"'attributes' are required on a feature to query attachments")):Promise.reject(new y(Pe,"A feature is required to add/delete/update attachments")):Promise.reject(new y(Pe,"this layer doesn't support attachments"))}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}_fetchFirstLayerId(e){return j(this.url,{query:{f:"json",...this.customParameters},responseType:"json",signal:e}).then((e=>{const t=e.data;if(t)return Array.isArray(t.layers)&&t.layers.length>0?t.layers[0].id:Array.isArray(t.tables)&&t.tables.length>0?t.tables[0].id:void 0}))}async _initLayerProperties(e){return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",url:this.parsedUrl})),this._verifySource(),this._verifyFields(),v(this.renderer,this.fields),I(this.timeInfo,this.fields),Ee(this,{origin:"service"})}_verifyFields(){const e=this.parsedUrl&&this.parsedUrl.path||"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||-1!==e.search(/\/FeatureServer\//i)||this.fields&&this.fields.some((function(e){return"geometry"===e.type}))||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach((e=>{const r=e.prototype&&e.prototype.attributes;r&&t&&delete r[t]}))}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new y("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new y("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach((e=>{e.layer=this,e.sourceLayer=this})),this._handles.add([e.on("after-add",(e=>{e.item.layer=this,e.item.sourceLayer=this})),e.on("after-remove",(e=>{e.item.layer=null,e.item.sourceLayer=null}))],"fl-source")}_resetMemorySource(e){e.forEach((e=>{e.layer=null,e.sourceLayer=null})),this._handles.remove("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}_readAttachmentCapabilities(e){const t={supportsName:!1,supportsSize:!1,supportsContentType:!1,supportsKeywords:!1,supportsExifInfo:!1};return e&&Array.isArray(e)&&e.forEach((e=>{const r=Ae[e.name];r&&(t[r]=!!e.isEnabled)})),t}_readDataCapabilities(e){return{isVersioned:Qe(e,"isDataVersioned",!1),supportsAttachment:Qe(e,"hasAttachments",!1),supportsM:Qe(e,"hasM",!1),supportsZ:Qe(e,"hasZ",!1)}}_readMetadataCapabilities(e){return{supportsAdvancedFieldProperties:Qe(e,"supportsFieldDescriptionProperty",!1)}}_readOperationsCapabilities(e,t){const r=e?e.toLowerCase().split(",").map((e=>e.trim())):[],i=-1!==r.indexOf("editing");let o=i&&-1!==r.indexOf("create"),s=i&&-1!==r.indexOf("delete"),a=i&&-1!==r.indexOf("update");const n=-1!==r.indexOf("changetracking");return i&&!(o||s||a)&&(o=s=a=!0),{supportsCalculate:Qe(t,"supportsCalculate",!1),supportsTruncate:Qe(t,"supportsTruncate",!1),supportsValidateSql:Qe(t,"supportsValidateSql",!1),supportsAdd:o,supportsDelete:s,supportsEditing:i,supportsChangeTracking:n,supportsQuery:-1!==r.indexOf("query"),supportsQueryAttachments:Qe(t.advancedQueryCapabilities,"supportsQueryAttachments",!1),supportsResizeAttachments:Qe(t,"supportsAttachmentsResizing",!1),supportsSync:-1!==r.indexOf("sync"),supportsUpdate:a,supportsExceedsLimitStatistics:Qe(t,"supportsExceedsLimitStatistics",!1)}}_readQueryCapabilities(e){var r;const i=e.advancedQueryCapabilities,o=e.ownershipBasedAccessControlForFeatures,s=e.archivingInfo,a=null==(r=this.url)?void 0:r.includes("MapServer"),n=!t("mapserver-pbf-enabled")&&a&&this.version<10.81,p=(e.supportedQueryFormats||"").split(",").reduce(((e,t)=>{const r=t.toLowerCase().trim();return r&&e.add(r),e}),new Set);return{supportsStatistics:Qe(i,"supportsStatistics",e.supportsStatistics),supportsPercentileStatistics:Qe(i,"supportsPercentileStatistics",!1),supportsCentroid:Qe(i,"supportsReturningGeometryCentroid",!1),supportsDistance:Qe(i,"supportsQueryWithDistance",!1),supportsDistinct:Qe(i,"supportsDistinct",e.supportsAdvancedQueries),supportsExtent:Qe(i,"supportsReturningQueryExtent",!1),supportsGeometryProperties:Qe(i,"supportsReturningGeometryProperties",!1),supportsHavingClause:Qe(i,"supportsHavingClause",!1),supportsOrderBy:Qe(i,"supportsOrderBy",e.supportsAdvancedQueries),supportsPagination:Qe(i,"supportsPagination",!1),supportsQuantization:Qe(e,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:Qe(e,"supportsQuantizationEditMode",!1),supportsQueryGeometry:Qe(e,"supportsReturningQueryGeometry",!1),supportsResultType:Qe(i,"supportsQueryWithResultType",!1),supportsMaxRecordCountFactor:Qe(i,"supportsMaxRecordCountFactor",!1),supportsSqlExpression:Qe(i,"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:Qe(e,"useStandardizedQueries",!1),supportsQueryByOthers:Qe(o,"allowOthersToQuery",!0),supportsHistoricMoment:Qe(s,"supportsQueryWithHistoricMoment",!1),supportsFormatPBF:!n&&p.has("pbf"),supportsDisjointSpatialRelationship:Qe(i,"supportsDisjointSpatialRel",!1),supportsCacheHint:Qe(i,"supportsQueryWithCacheHint",!1),maxRecordCountFactor:qe(e,"maxRecordCountFactor",void 0),maxRecordCount:qe(e,"maxRecordCount",void 0),standardMaxRecordCount:qe(e,"standardMaxRecordCount",void 0),tileMaxRecordCount:qe(e,"tileMaxRecordCount",void 0)}}_readQueryRelatedCapabilities(e){const t=e.advancedQueryCapabilities,r=Qe(t,"supportsAdvancedQueryRelated",!1);return{supportsPagination:Qe(t,"supportsQueryRelatedPagination",!1),supportsCount:r,supportsOrderBy:r}}_readEditingCapabilities(e){const t=e.ownershipBasedAccessControlForFeatures;return{supportsGeometryUpdate:Qe(e,"allowGeometryUpdates",!0),supportsGlobalId:Qe(e,"supportsApplyEditsWithGlobalIds",!1),supportsRollbackOnFailure:Qe(e,"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:Qe(e,"allowUpdateWithoutMValues",!1),supportsUploadWithItemId:Qe(e,"supportsAttachmentsByUploadId",!1),supportsDeleteByAnonymous:Qe(t,"allowAnonymousToDelete",!0),supportsDeleteByOthers:Qe(t,"allowOthersToDelete",!0),supportsUpdateByAnonymous:Qe(t,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:Qe(t,"allowOthersToUpdate",!0)}}};e([a({readOnly:!0,json:{read:!1}})],Ge.prototype,"capabilities",void 0),e([l("service","capabilities",["advancedQueryCapabilities","allowGeometryUpdates","allowUpdateWithoutMValues","archivingInfo","capabilities","hasAttachments","hasM","hasZ","maxRecordCount","maxRecordCountFactor","ownershipBasedAccessControlForFeatures","standardMaxRecordCount","supportedQueryFormats","supportsAdvancedQueries","supportsApplyEditsWithGlobalIds","supportsAttachmentsByUploadId","supportsAttachmentsResizing","supportsCalculate","supportsCoordinatesQuantization","supportsExceedsLimitStatistics","supportsFieldDescriptionProperty","supportsQuantizationEditMode","supportsRollbackOnFailureParameter","supportsStatistics","supportsTruncate","supportsValidateSql","tileMaxRecordCount","useStandardizedQueries"])],Ge.prototype,"readCapabilities",null),e([a({json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],Ge.prototype,"charts",void 0),e([a({readOnly:!0})],Ge.prototype,"createQueryVersion",null),e([a({type:String,json:{read:{source:"layerDefinition.copyrightText"},origins:{service:{read:{source:"copyrightText"}}}}})],Ge.prototype,"copyright",void 0),e([a({type:String,json:{read:{source:"layerDefinition.displayField"},origins:{service:{read:{source:"displayField"}}}}})],Ge.prototype,"displayField",void 0),e([a({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],Ge.prototype,"definitionExpression",void 0),e([a({types:D,readOnly:!0})],Ge.prototype,"defaultSymbol",void 0),e([a({type:xe})],Ge.prototype,"dynamicDataSource",void 0),e([a({readOnly:!0})],Ge.prototype,"editFieldsInfo",void 0),e([a({type:Boolean})],Ge.prototype,"editingEnabled",void 0),e([l(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],Ge.prototype,"readEditingEnabled",null),e([l("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],Ge.prototype,"readEditingEnabledFromWebMap",null),e([c(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],Ge.prototype,"writeEditingEnabled",null),e([c("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],Ge.prototype,"writeEditingEnabledToWebMap",null),e([a({readOnly:!0})],Ge.prototype,"editingInfo",void 0),e([l("editingInfo")],Ge.prototype,"readEditingInfo",null),e([a(L)],Ge.prototype,"elevationInfo",void 0),e([a({types:{key:"type",base:ce,typeMap:{selection:me,cluster:he}},json:{write:{target:"layerDefinition.featureReduction"}}})],Ge.prototype,"featureReduction",void 0),e([l("featureReduction",["layerDefinition.featureReduction"])],Ge.prototype,"readFeatureReduction",null),e([c("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:ge}})],Ge.prototype,"writeWebSceneFeatureReduction",null),e([a({...Ue.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{read:!0},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:Ve}}}}})],Ge.prototype,"fields",void 0),e([a({readOnly:!0})],Ge.prototype,"fieldsIndex",null),e([a({type:je,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"},origins:{"web-scene":{write:!1}}}})],Ge.prototype,"floorInfo",void 0),e([a({type:ee,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],Ge.prototype,"formTemplate",void 0),e([a({type:g,json:{origins:{service:{read:{source:"extent"}}},read:{source:"layerDefinition.extent"}}})],Ge.prototype,"fullExtent",void 0),e([a()],Ge.prototype,"gdbVersion",void 0),e([a({readOnly:!0,type:Ie,json:{read:{source:"geometryProperties"}}})],Ge.prototype,"geometryFieldsInfo",void 0),e([a({type:["point","polygon","polyline","multipoint","multipatch","mesh"],json:{origins:{service:{read:Oe.read},"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:Ve,writer(e,t,i){const o=e?Oe.toJSON(e):null;o&&r(i,o,t)}}}},read:{source:"layerDefinition.geometryType",reader:Oe.read}}})],Ge.prototype,"geometryType",void 0),e([a({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasM"}}})],Ge.prototype,"hasM",void 0),e([a({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasZ"}}})],Ge.prototype,"hasZ",void 0),e([a({readOnly:!0,type:_})],Ge.prototype,"heightModelInfo",void 0),e([a({type:Date})],Ge.prototype,"historicMoment",void 0),e([a(Q)],Ge.prototype,"id",void 0),e([a({readOnly:!0,json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],Ge.prototype,"isTable",void 0),e([l("service","isTable",["type","geometryType"]),l("isTable",["layerDefinition.type","layerDefinition.geometryType"])],Ge.prototype,"readIsTable",null),e([c("web-map","isTable")],Ge.prototype,"writeIsTable",null),e([a(q)],Ge.prototype,"labelsVisible",void 0),e([a({type:[ye],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:Fe},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:Fe},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],Ge.prototype,"labelingInfo",void 0),e([a(U)],Ge.prototype,"opacity",void 0),e([a({type:Number,json:{origins:{service:{read:{source:"id"}}},read:!1}})],Ge.prototype,"layerId",void 0),e([a(V)],Ge.prototype,"legendEnabled",void 0),e([a({type:["show","hide"]})],Ge.prototype,"listMode",void 0),e([a(G)],Ge.prototype,"minScale",void 0),e([l("service","minScale",["minScale","effectiveMinScale"])],Ge.prototype,"readMinScale",null),e([a(B)],Ge.prototype,"maxScale",void 0),e([l("service","maxScale",["maxScale","effectiveMaxScale"])],Ge.prototype,"readMaxScale",null),e([a({type:String})],Ge.prototype,"globalIdField",void 0),e([l("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"]),l("service","globalIdField",["globalIdField","fields"])],Ge.prototype,"readGlobalIdFieldFromService",null),e([a({type:String,json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:Ve}}}}})],Ge.prototype,"objectIdField",void 0),e([l("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"]),l("service","objectIdField",["objectIdField","fields"])],Ge.prototype,"readObjectIdFieldFromService",null),e([a({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],Ge.prototype,"operationalLayerType",void 0),e([a(Ue.outFields)],Ge.prototype,"outFields",void 0),e([a({readOnly:!0})],Ge.prototype,"parsedUrl",null),e([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Ge.prototype,"path",void 0),e([a(k)],Ge.prototype,"popupEnabled",void 0),e([a({type:F,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Ge.prototype,"popupTemplate",void 0),e([a({readOnly:!0})],Ge.prototype,"defaultPopupTemplate",null),e([a({type:[De],readOnly:!0})],Ge.prototype,"relationships",void 0),e([a({types:$,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:H,write:{target:"layerDefinition.drawingInfo.renderer",writer:X}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,r)=>({ignoreOrigin:null==r?void 0:r.writeLayerSchema}),writer:X}}})],Ge.prototype,"renderer",null),e([l("service","renderer",["drawingInfo.renderer","defaultSymbol"]),l("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],Ge.prototype,"readRenderer",null),e([a()],Ge.prototype,"sourceJSON",void 0),e([a({type:Boolean})],Ge.prototype,"returnM",void 0),e([a({type:Boolean})],Ge.prototype,"returnZ",void 0),e([a(z)],Ge.prototype,"screenSizePerspectiveEnabled",void 0),e([a()],Ge.prototype,"source",null),e([n("source")],Ge.prototype,"castSource",null),e([l("portal-item","source",["featureSet"]),l("web-map","source",["featureSet"])],Ge.prototype,"readSource",null),e([a({readOnly:!0})],Ge.prototype,"serviceDefinitionExpression",void 0),e([l("service","serviceDefinitionExpression",["definitionQuery","definitionExpression"])],Ge.prototype,"readServiceDefinitionExpression",null),e([a({type:b,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:{source:"layerDefinition.extent.spatialReference"}}})],Ge.prototype,"spatialReference",void 0),e([a({type:[we]})],Ge.prototype,"templates",void 0),e([l("templates",["editFieldsInfo","creatorField","editorField","templates"])],Ge.prototype,"readTemplates",null),e([a({type:le})],Ge.prototype,"timeInfo",void 0),e([a()],Ge.prototype,"title",void 0),e([l("service","title",["name"]),l("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],Ge.prototype,"readTitle",null),e([l("web-map","title",["layerDefinition.name","title"])],Ge.prototype,"readTitleFromWebMap",null),e([a({type:String})],Ge.prototype,"sublayerTitleMode",void 0),e([a({type:String,json:{read:{source:"timeInfo.trackIdField"}}})],Ge.prototype,"trackIdField",void 0),e([a({json:{read:!1}})],Ge.prototype,"type",void 0),e([a({type:String})],Ge.prototype,"typeIdField",void 0),e([l("service","typeIdField"),l("typeIdField",["layerDefinition.typeIdField"])],Ge.prototype,"readTypeIdField",null),e([a({type:[ve]})],Ge.prototype,"types",void 0),e([l("service","types",["types"]),l("types",["layerDefinition.types"])],Ge.prototype,"readTypes",null),e([a({readOnly:!0,json:{write:!1}})],Ge.prototype,"serverGens",void 0),e([a({type:w.ofType(de),readOnly:!0})],Ge.prototype,"indexes",void 0),e([a(W)],Ge.prototype,"url",null),e([c("url")],Ge.prototype,"writeUrl",null),e([a({readOnly:!0})],Ge.prototype,"userIsAdmin",void 0),e([a({json:{origins:{service:{read:!0}},read:!1}})],Ge.prototype,"version",void 0),e([l("service","version",["currentVersion","capabilities","drawingInfo","hasAttachments","htmlPopupType","relationships","timeInfo","typeIdField","types"])],Ge.prototype,"readVersion",null),e([a({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],Ge.prototype,"visible",void 0),e([l("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],Ge.prototype,"readVisible",null),Ge=e([d("esri.layers.FeatureLayer")],Ge);const Be=u({types:x});var ke=Ge;export default ke;
