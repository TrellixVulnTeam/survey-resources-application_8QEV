/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{resampleHermite as e}from"./utils.js";import r from"./Rect.js";import{SymbolHelper as t,CIMSymbolHelper as a}from"./CIMSymbolHelper.js";import{getSDFInfo as n,buildSDF as i}from"./SDFHelper.js";const s=512;class o{dispose(){this._rasterizationCanvas=null}rasterizeJSONResource(e,s,o){if(this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),"simple-fill"===e.type||"esriSFS"===e.type){const[r,a,n]=t.rasterizeSimpleFill(this._rasterizationCanvas,e.style,s);return{size:[a,n],image:new Uint32Array(r.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0}}if("simple-line"===e.type||"esriSLS"===e.type){const[r,a,n]=t.rasterizeSimpleLine(e.style,e.cap);return{size:[a,n],image:new Uint32Array(r.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}let m,l,f;if("simple-marker"===e.type||"esriSMS"===e.type||"line-marker"===e.type?(m=a.fromSimpleMarker(e),f=n(m)):"CIMHatchFill"===e.type?(m=a.fromCIMHatchFill(e),l=new r(m.frame.xmin,-m.frame.ymax,m.frame.xmax-m.frame.xmin,m.frame.ymax-m.frame.ymin)):e.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===e.markerPlacement.type?(m=a.fromCIMInsidePolygon(e),l=new r(m.frame.xmin,-m.frame.ymax,m.frame.xmax-m.frame.xmin,m.frame.ymax-m.frame.ymin)):(m=e,f=n(m)),f&&!o){const[e,r,t]=i(f);return e?{size:[r,t],image:new Uint32Array(e.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}const[c,h,p,y,u]=a.rasterize(this._rasterizationCanvas,m,l,!o);return c?{size:[h,p],image:new Uint32Array(c.buffer),sdf:!1,simplePattern:!1,anchorX:y,anchorY:u}:null}rasterizeImageResource(r,t,a,n){this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),this._rasterizationCanvas.width=r,this._rasterizationCanvas.height=t;const i=this._rasterizationCanvas.getContext("2d");a instanceof ImageData?i.putImageData(a,0,0):(a.setAttribute("width",`${r}px`),a.setAttribute("height",`${t}px`),i.drawImage(a,0,0,r,t));const o=i.getImageData(0,0,r,t),m=new Uint8Array(o.data);if(n)for(const e of n)if(e&&e.oldColor&&4===e.oldColor.length&&e.newColor&&4===e.newColor.length){const[r,t,a,n]=e.oldColor,[i,s,o,l]=e.newColor;if(r===i&&t===s&&a===o&&n===l)continue;for(let e=0;e<m.length;e+=4)r===m[e]&&t===m[e+1]&&a===m[e+2]&&n===m[e+3]&&(m[e]=i,m[e+1]=s,m[e+2]=o,m[e+3]=l)}let l;for(let e=0;e<m.length;e+=4)l=m[e+3]/255,m[e]=m[e]*l,m[e+1]=m[e+1]*l,m[e+2]=m[e+2]*l;let f=m,c=r,h=t;const p=s;if(c>=p||h>=p){const a=c/h;a>1?(c=p,h=Math.round(p/a)):(h=p,c=Math.round(p*a)),f=new Uint8Array(4*c*h);const n=new Uint8ClampedArray(f.buffer);e(m,r,t,n,c,h,!1)}return{size:[r,t],image:new Uint32Array(f.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}}export default o;
