/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{numericHash as e}from"../../core/string.js";import t from"../../core/Logger.js";import{createRendererExpression as i,ArcadeExpression as o}from"../../support/arcadeOnDemand.js";import r from"../../Color.js";import{pt2px as n}from"../../core/screenUtils.js";import{fromCIMColor as a,_adjustTextCase as l}from"./utils.js";import s from"../../views/2d/arcade/callExpressionWithFeature.js";import{CIMSymbolHelper as c,OverrideHelper as f}from"./CIMSymbolHelper.js";import{getExtent as m,getSDFMetrics as p}from"./SDFHelper.js";const u=t.getLogger("esri.symbols.cim.cimAnalyzer");function y(e){switch(e){case"Butt":return 0;case"Square":return 2;case"Round":default:return 1}}function h(e){switch(e){case"Bevel":return 0;case"Miter":return 2;case"Round":default:return 1}}function g(e){switch(e){case"Left":default:return"left";case"Right":return"right";case"Center":return"center";case"Justify":return"justify"}}function d(e){switch(e){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function S(e){let t="normal",i="normal";if(e){const o=e.toLowerCase();-1!==o.indexOf("italic")?t="italic":-1!==o.indexOf("oblique")&&(t="oblique"),-1!==o.indexOf("bold")?i="bold":-1!==o.indexOf("light")&&(i="lighter")}return{style:t,weight:i}}function v(e){return e.underline?"underline":e.strikethrough?"line-through":"none"}function b(e,t,i,o){let r;e[t]?r=e[t]:(r={},e[t]=r),r[i]=o}function N(e){const t=e.markerPlacement;return t&&t.angleToLine?1:0}async function k(e,t,o,r){const n=o||[];if(!e)return n;let a,l;const s={};if("CIMSymbolReference"!==e.type)return u.error("Expect cim type to be 'CIMSymbolReference'"),n;if(a=e.symbol,l=e.primitiveOverrides,l){const e=[];for(const o of l){const r=o.valueExpressionInfo;if(r&&t){const n=r.expression,a=i(n,t.spatialReference,t.fields).then((e=>{e&&b(s,o.primitiveName,o.propertyName,e)}));e.push(a)}else null!=o.value&&b(s,o.primitiveName,o.propertyName,o.value)}await Promise.all(e)}switch(a.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":O(a,l,s,t,n,r)}return n}function O(e,t,i,o,r,n){if(!e)return;const a=e.symbolLayers;if(!a)return;let l;const s=c.getSize(e);"CIMPointSymbol"===e.type&&"Map"===e.angleAlignment&&(l=1);let m=a.length;for(;m--;){const c=a[m];if(!c||!1===c.enable)continue;const p=[];switch(f.findApplicableOverrides(c,t,p),c.type){case"CIMSolidFill":C(c,i,p,o,r);break;case"CIMPictureFill":P(c,i,p,o,r);break;case"CIMHatchFill":L(c,i,p,o,r);break;case"CIMGradientFill":M(c,i,p,o,r);break;case"CIMSolidStroke":X(c,i,p,o,r,"CIMPolygonSymbol"===e.type,s);break;case"CIMPictureStroke":I(c,i,p,o,r,"CIMPolygonSymbol"===e.type,s);break;case"CIMGradientStroke":x(c,i,p,o,r,"CIMPolygonSymbol"===e.type,s);break;case"CIMCharacterMarker":if(w(c,i,p,o,r))break;break;case"CIMPictureMarker":if(w(c,i,p,o,r))break;"CIMLineSymbol"===e.type&&(l=N(c)),z(c,i,p,o,r,l,s);break;case"CIMVectorMarker":if(w(c,i,p,o,r))break;"CIMLineSymbol"===e.type&&(l=N(c)),J(c,i,p,o,r,l,s,n);break;default:u.error("Cannot analyze CIM layer",c.type)}}}function C(t,i,o,r,n){const l=t.primitiveName,s=a(t.color),c=e(JSON.stringify(t)).toString();n.push({type:"fill",templateHash:c,materialHash:0===o.length?c:()=>c,cim:t,materialOverrides:null,colorLocked:t.colorLocked,color:F(l,i,"Color",r,s,j),height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,effects:t.effects})}function P(t,i,o,r,n){const l=t.primitiveName,s=t.tintColor?a(t.tintColor):{r:255,g:255,b:255,a:1},c=e(JSON.stringify(t)).toString(),f=e(`${t.url}${JSON.stringify(t.colorSubstitutions)}`).toString();n.push({type:"fill",templateHash:c,materialHash:0===o.length?f:()=>f,cim:t,materialOverrides:null,colorLocked:t.colorLocked,effects:t.effects,color:F(l,i,"TintColor",r,s,j),height:F(l,i,"Height",r,t.height),scaleX:F(l,i,"ScaleX",r,t.scaleX),angle:F(l,i,"Rotation",r,t.rotation),offsetX:F(l,i,"OffsetX",r,t.offsetX),offsetY:F(l,i,"OffsetY",r,t.offsetY)})}function L(t,i,o,r,n){const a=["Rotation","OffsetX","OffsetY"],l=o.filter((e=>e.primitiveName!==t.primitiveName&&-1===a.indexOf(e.propertyName))),s=t.primitiveName,c=e(JSON.stringify(t)).toString(),f=e(`${t.separation}${JSON.stringify(t.lineSymbol)}`).toString();n.push({type:"fill",templateHash:c,materialHash:0===o.length?f:W(f,i,l,r),cim:t,materialOverrides:l,colorLocked:t.colorLocked,effects:t.effects,color:{r:255,g:255,b:255,a:1},height:F(s,i,"Separation",r,t.separation),scaleX:1,angle:F(s,i,"Rotation",r,t.rotation),offsetX:F(s,i,"OffsetX",r,t.offsetX),offsetY:F(s,i,"OffsetY",r,t.offsetY)})}function M(t,i,o,r,n){const a=e(JSON.stringify(t)).toString();n.push({type:"fill",templateHash:a,materialHash:0===o.length?a:W(a,i,o,r),cim:t,materialOverrides:null,colorLocked:t.colorLocked,effects:t.effects,color:{r:128,g:128,b:128,a:1},height:0,angle:0,offsetX:0,offsetY:0,scaleX:1})}function X(t,i,o,r,n,l,s){const c=e(JSON.stringify(t)).toString(),f=t.primitiveName,m=a(t.color),p=void 0!==t.width?t.width:4,u=y(t.capStyle),g=h(t.joinStyle),d=t.miterLimit;n.push({type:"line",templateHash:c,materialHash:0===o.length?c:()=>c,cim:t,materialOverrides:null,isOutline:l,colorLocked:t.colorLocked,effects:t.effects,color:F(f,i,"Color",r,m,j),width:F(f,i,"Width",r,p),cap:F(f,i,"CapStyle",r,u),join:F(f,i,"JoinStyle",r,g),miterLimit:F(f,i,"MiterLimit",r,d),referenceWidth:s,zOrder:A(t.name),isDashed:!1})}function I(t,i,o,r,n,l,s){const c=e(`${t.url}${JSON.stringify(t.colorSubstitutions)}`).toString(),f=t.primitiveName,m=a(t.tintColor),p=void 0!==t.width?t.width:4,u=y(t.capStyle),g=h(t.joinStyle),d=t.miterLimit,S=e(JSON.stringify(t)).toString();n.push({type:"line",templateHash:S,materialHash:0===o.length?c:()=>c,cim:t,materialOverrides:null,isOutline:l,colorLocked:t.colorLocked,effects:t.effects,color:F(f,i,"TintColor",r,m,j),width:F(f,i,"Width",r,p),cap:F(f,i,"CapStyle",r,u),join:F(f,i,"JoinStyle",r,g),miterLimit:F(f,i,"MiterLimit",r,d),referenceWidth:s,zOrder:A(t.name),isDashed:!1})}function x(t,i,o,r,n,a,l){const s=t.primitiveName,c=void 0!==t.width?t.width:4,f=y(t.capStyle),m=h(t.joinStyle),p=t.miterLimit,u=e(JSON.stringify(t)).toString();n.push({type:"line",templateHash:u,materialHash:0===o.length?u:W(u,i,o,r),cim:t,materialOverrides:null,isOutline:a,colorLocked:t.colorLocked,effects:t.effects,color:{r:128,g:128,b:128,a:1},width:F(s,i,"Width",r,c),cap:F(s,i,"CapStyle",r,f),join:F(s,i,"JoinStyle",r,m),miterLimit:F(s,i,"MiterLimit",r,p),referenceWidth:l,zOrder:A(t.name),isDashed:!1})}function w(t,i,o,r,n){const a=t.markerPlacement;if(!a||"CIMMarkerPlacementInsidePolygon"!==a.type)return!1;const l=a,s=["Rotation","OffsetX","OffsetY"],c=o.filter((e=>e.primitiveName!==t.primitiveName&&-1===s.indexOf(e.propertyName))),f=e(JSON.stringify(t)).toString();return n.push({type:"fill",templateHash:f,materialHash:0===o.length?f:W(f,i,c,r),cim:t,materialOverrides:c,colorLocked:t.colorLocked,effects:t.effects,color:{r:255,g:255,b:255,a:1},height:F(l.primitiveName,i,"StepY",r,l.stepY),scaleX:1,angle:F(l.primitiveName,i,"GridAngle",r,l.gridAngle),offsetX:F(l.primitiveName,i,"OffsetX",r,l.offsetX),offsetY:F(l.primitiveName,i,"OffsetY",r,l.offsetY)}),!0}function z(t,i,o,r,n,l,s){const c=t.primitiveName,f=t.size,m=t.scaleX,p=t.rotation,u=t.offsetX,y=t.offsetY,h=a(t.tintColor),g=e(`${t.url}${JSON.stringify(t.colorSubstitutions)}`).toString();let d=!1,S="";for(const e of o)e.primitiveName===c&&(void 0!==e.value?S+=`-${e.primitiveName}-${e.propertyName}-${JSON.stringify(e.value)}`:e.valueExpressionInfo&&(d=!0));n.push({type:"marker",templateHash:e(JSON.stringify(t)+S).toString(),materialHash:d?()=>g:g,cim:t,materialOverrides:null,colorLocked:t.colorLocked,effects:t.effects,scaleSymbolsProportionally:!1,alignment:l,size:F(c,i,"Size",r,f),scaleX:F(c,i,"ScaleX",r,m),rotation:F(c,i,"Rotation",r,p),offsetX:F(c,i,"OffsetX",r,u),offsetY:F(c,i,"OffsetY",r,y),color:F(c,i,"TintColor",r,h,j),anchorPoint:t.anchorPoint,isAbsoluteAnchorPoint:"Relative"!==t.anchorPointUnits,outlineColor:{r:0,g:0,b:0,a:0},outlineWidth:0,frameHeight:0,rotateClockwise:t.rotateClockwise,referenceSize:s,sizeRatio:1,markerPlacement:t.markerPlacement})}function J(e,t,i,o,r,n,a,l){const s=e.markerGraphics;if(!s)return;let c=0;if(e.scaleSymbolsProportionally){const t=e.frame;t&&(c=t.ymax-t.ymin)}for(const f of s)if(f){const s=f.symbol;if(!s)continue;switch(s.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":Y(e,f,i,t,o,r,n,a,c,l);break;case"CIMTextSymbol":H(e,f,t,i,o,r,n,a,c)}}}function H(t,i,o,r,n,s,m,p,u){const y=[];f.findApplicableOverrides(i,r,y);const h=i.geometry;if(!("x"in h)||!("y"in h))return;const b=i.symbol,N=v(b),k=S(b.fontStyleName);b.font={family:b.fontFamilyName,decoration:N,...k};const O=t.frame,C=h.x-.5*(O.xmin+O.xmax),P=h.y-.5*(O.ymin+O.ymax),L=t.size/u,M=t.primitiveName,X=(b.height||0)*L,I=b.angle||0,x=((b.offsetX||0)+C)*L,w=((b.offsetY||0)+P)*L,z=a(c.getFillColor(b));let J=a(c.getStrokeColor(b)),H=c.getStrokeWidth(b);H||(J=a(c.getFillColor(b.haloSymbol)),H=b.haloSize*L);let Y="";for(const e of r)e.primitiveName===M&&void 0!==e.value&&(Y+=`-${e.primitiveName}-${e.propertyName}-${JSON.stringify(e.value)}`);const R=JSON.stringify(t.effects)+Number(t.colorLocked)+JSON.stringify(t.anchorPoint)+t.anchorPointUnits+JSON.stringify(t.markerPlacement),$=e(JSON.stringify(i)+R+Y).toString();s.push({type:"text",templateHash:$,materialHash:()=>e(JSON.stringify(b.font)).toString(),cim:b,materialOverrides:null,colorLocked:t.colorLocked,effects:t.effects,alignment:m,anchorPoint:{x:t.anchorPoint?t.anchorPoint.x:0,y:t.anchorPoint?t.anchorPoint.y:0},isAbsoluteAnchorPoint:"Relative"!==t.anchorPointUnits,fontName:b.fontFamilyName,decoration:"none",weight:"normal",style:"normal",size:F(M,o,"Size",n,X),angle:F(M,o,"Rotation",n,I),offsetX:F(M,o,"OffsetX",n,x),offsetY:F(M,o,"OffsetY",n,w),horizontalAlignment:g(b.horizontalAlignment),verticalAlignment:d(b.verticalAlignment),text:F(i.primitiveName,o,"TextString",n,i.textString,l,b.textCase),color:z,outlineColor:J,outlineSize:H,referenceSize:p,sizeRatio:1,markerPlacement:t.markerPlacement})}function Y(t,i,o,r,n,l,s,f,u,y){const h=i.symbol,g=i.geometry;if(!g)return;const d=h.symbolLayers;if(!d)return;if(y)return void R(t,i,r,o,n,l,s,f,u);let S=d.length;for(;S--;){const y=d[S];if(y&&!1!==y.enable)switch(y.type){case"CIMSolidFill":case"CIMSolidStroke":{const h=m(g);if(!h)continue;const[d,S,v]=p(h,t.frame,t.size,t.anchorPoint,"Relative"!==t.anchorPointUnits),b="CIMSolidFill"===y.type,N={type:"sdf",geom:g,asFill:b},k=t.primitiveName,O=t.size,C=t.rotation||0,P=t.offsetX,L=t.offsetY,M=y.primitiveName,X=a(b?c.getFillColor(y):c.getStrokeColor(y)),I=b?{r:0,g:0,b:0,a:0}:a(c.getStrokeColor(y)),x=c.getStrokeWidth(y);if(!b&&!x)break;let w=!1,z="";for(const e of o)e.primitiveName!==M&&e.primitiveName!==k||(void 0!==e.value?z+=`-${e.primitiveName}-${e.propertyName}-${JSON.stringify(e.value)}`:e.valueExpressionInfo&&(w=!0));const J=JSON.stringify({...t,markerGraphics:null}),H=e(JSON.stringify(N)).toString(),Y={type:"marker",templateHash:e(JSON.stringify(i)+JSON.stringify(y)+J+z).toString(),materialHash:w?()=>H:H,cim:N,materialOverrides:null,colorLocked:t.colorLocked,effects:t.effects,scaleSymbolsProportionally:t.scaleSymbolsProportionally,alignment:s,anchorPoint:{x:S,y:v},isAbsoluteAnchorPoint:!1,size:F(t.primitiveName,r,"Size",n,O),rotation:F(t.primitiveName,r,"Rotation",n,C),offsetX:F(t.primitiveName,r,"OffsetX",n,P),offsetY:F(t.primitiveName,r,"OffsetY",n,L),scaleX:1,frameHeight:u,rotateClockwise:t.rotateClockwise,referenceSize:f,sizeRatio:d,color:F(M,r,"Color",n,X,j),outlineColor:F(M,r,"Color",n,I,j),outlineWidth:F(M,r,"Width",n,x),markerPlacement:t.markerPlacement};l.push(Y);break}default:R(t,i,r,o,n,l,s,f,u)}}}function R(t,i,o,r,a,l,s,f,m){const p=$(t,i);let u=[];const y=["Rotation","OffsetX","OffsetY"];u=r.filter((e=>e.primitiveName!==t.primitiveName||-1===y.indexOf(e.propertyName)));let h="";for(const e of r)void 0!==e.value&&(h+=`-${e.primitiveName}-${e.propertyName}-${JSON.stringify(e.value)}`);const[g,d,S]=c.getTextureAnchor(p),v=t.primitiveName,b=t.rotation||0,N=t.offsetX||0,k=t.offsetY||0,O=e(JSON.stringify(p)+h).toString(),C={type:"marker",templateHash:O,materialHash:0===u.length?O:W(O,o,u,a),cim:p,materialOverrides:u,colorLocked:t.colorLocked,effects:t.effects,scaleSymbolsProportionally:t.scaleSymbolsProportionally,alignment:s,anchorPoint:{x:g,y:d},isAbsoluteAnchorPoint:!1,size:t.size,rotation:F(v,o,"Rotation",a,b),offsetX:F(v,o,"OffsetX",a,N),offsetY:F(v,o,"OffsetY",a,k),color:{r:0,g:0,b:0,a:0},outlineColor:{r:0,g:0,b:0,a:0},outlineWidth:0,scaleX:1,frameHeight:m,rotateClockwise:t.rotateClockwise,referenceSize:f,sizeRatio:S/n(t.size),markerPlacement:t.markerPlacement};l.push(C)}function $(e,t){return{type:e.type,enable:!0,name:e.name,colorLocked:e.colorLocked,primitiveName:e.primitiveName,anchorPoint:e.anchorPoint,anchorPointUnits:e.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:e.rotateClockwise,rotation:0,size:e.size,billboardMode3D:e.billboardMode3D,depth3D:e.depth3D,frame:e.frame,markerGraphics:[t],scaleSymbolsProportionally:e.scaleSymbolsProportionally,respectFrame:e.respectFrame,clippingPath:e.clippingPath,effects:e.effects}}function A(e){if(e&&0===e.indexOf("Level_")){const t=parseInt(e.substr(6),10);if(NaN!==t)return t}return 0}function j(e){if(!e||0===e.length)return null;const t=new r(e).toRgba();return{r:t[0],g:t[1],b:t[2],a:t[3]}}function F(e,t,i,r,n,a,l){const c=t[e];if(c){const e=c[i];if("string"==typeof e||"number"==typeof e||e instanceof Array)return a?a.call(null,e,l):e;if(null!=e&&e instanceof o)return(t,i,o)=>{let c=s(e,t,{$view:o},r.geometryType,i);return null!==c&&a&&(c=a.call(null,c,l)),null!==c?c:n}}return n}function W(t,i,r,n){for(const e of r){if(e.valueExpressionInfo){const t=i[e.primitiveName]&&i[e.primitiveName][e.propertyName];t instanceof o&&(e.fn=(e,i,o)=>s(t,e,{$view:o},n.geometryType,i))}}return(i,o,n)=>{for(const e of r)e.fn&&(e.value=e.fn(i,o,n));return e(t+f.buildOverrideKey(r)).toString()}}function T(e,t){if(!t||0===t.length)return e;const i=JSON.parse(JSON.stringify(e));return f.applyOverrides(i,t),i}export{T as analyzeCIMResource,k as analyzeCIMSymbol};
