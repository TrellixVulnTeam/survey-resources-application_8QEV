/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{numericTypes as e}from"../../../layers/support/fieldUtils.js";import t from"../../../popup/support/FieldInfoFormat.js";import s from"../../../popup/FieldInfo.js";import i from"../../../popup/ExpressionInfo.js";import r from"../../../PopupTemplate.js";import{substitute as l}from"../../../intl/substitute.js";import{fetchMessageBundle as o}from"../../../intl/messages.js";import{getStatisticInfos as n,clusterCountField as a,getClusterField as u,getPredominantTypeExpression as p}from"../../support/clusterUtils.js";import{isClusterCompatibleRenderer as m}from"../../../views/2d/layers/support/clusterUtils.js";function f(i){const{fieldName:r,label:l,type:o}=i,n=e.indexOf(o)>-1,a=new s({fieldName:r,label:l,visible:!0,format:n?{places:"integer"===o||"small-integer"===o?0:2,digitSeparator:!0}:null});return"date"===o&&(a.format=new t({dateFormat:"short-date-short-time"})),a}function c(e,t){const s=t.getField(e);return s&&(s.alias||s.name)}function d(e,t,s){const{attributeInfo:i,statisticType:r}=t,{field:o,normalizationField:n}=i;let a,u="";if("avg"===r?a=n?s.clusters.avgNormFieldLabel:s.clusters.avgFieldLabel:"type"===r&&(a=s.clusters.predominantFieldLabel),a){const t=i.valueExpression?i.valueExpressionTitle:c(o,e),s=n&&c(n,e);u=l(a,{fieldLabel:t||"",normFieldLabel:s||""})}return u}function b(e,t,s,i){const{attributeInfo:r,statisticType:o}=t,{field:n,normalizationField:a}=r;let u,p="";if("avg"===o?u=a?i.clusters.avgNormFieldSummary:i.clusters.avgFieldSummary:"type"===o&&(u=i.clusters.predominantFieldSummary),u){const t=r.valueExpression?r.valueExpressionTitle:c(n,e),i=a&&c(a,e);p=l(u,{fieldLabel:t||"",normFieldLabel:i||"",fieldValue:"{"+s+"}"})}return p}async function y(e,t){if(!m(t))return null;const s=n(e,t),c=await o("esri/smartMapping/t9n/smartMapping"),y=c.clusters.predominantNoneValue,g="unique-value"===t.type?t.uniqueValueInfos:[],F=[],v=[],j=[];F.push(l(c.clusters.countSummary,{count:`{${a}}`})),v.push(f({fieldName:a,label:c.clusters.numFeatures,type:"integer"}));for(const r of s){const{statisticType:t,attributeInfo:s}=r,l=u(s,t),o=d(e,r,c);if("avg"===t)F.push(b(e,r,l,c)),v.push(f({fieldName:l,label:o,type:"double"}));else if("type"===t){const t=`expression/${l}`;F.push(b(e,r,t,c)),j.push(new i({name:l,title:o,returnType:"string",expression:p(g,l,y)})),v.push(f({fieldName:t}))}}return new r({fieldInfos:v,expressionInfos:j,content:F.join("<br/><br/>"),title:c.clusters.clusterPopupTitle})}export{y as createPopupTemplate};
