/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e}from"../../core/maybe.js";import i from"../../core/Error.js";import{toPt as a}from"../../core/screenUtils.js";import{substitute as s}from"../../intl/substitute.js";import{fetchMessageBundle as n}from"../../intl/messages.js";import l from"../../renderers/support/AuthoringInfoVisualVariable.js";import r from"../../renderers/support/AuthoringInfo.js";import"../../renderers/Renderer.js";import o from"../../renderers/visualVariables/SizeVariable.js";import t from"../../renderers/ClassBreaksRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import{getFieldsList as m,getNormalizationType as p}from"../support/utils.js";import{setLabelsForClassBreaks as u}from"../../renderers/support/utils.js";import{createLayerAdapter as d,getLayerTypeLabels as y}from"../support/adapters/support/layerUtils.js";import{getAgeExpressions as c,verifyDates as b,supportedAgeUnits as f}from"../statistics/support/ageUtils.js";import w from"../heuristics/ageUnit.js";import v from"../heuristics/outline.js";import h from"../heuristics/sizeRange.js";import{getSummaryStatistics as z,getClassBreaks as g,formatDate as x,updateAgeRendererAuthoringInfoVV as T,verifyBasicFieldValidity as S,getDataRange as E,getSizeRangeForAxis as V,createSymbol as j,getSymbolOutlineFromScheme as k,getSymbolSizeFromScheme as O,getBasemapInfo as I}from"./support/utils.js";import{c as q,g as F}from"../../chunks/size.js";const D="date",U=2**53-1;async function M(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new i("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new i("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const s={...a};if("90-10"===s.theme)throw new i("size-visual-variable:not-supported","Only 'high-to-low', 'above', 'below' themes are supported.");const n=[0,2,1,3],l=d(s.layer,n);if(s.layer=l,!l)throw new i("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+y(n).join(", "));"height"===s.axis&&(s.sizeOptimizationEnabled=!1);const r=e(s.signal)?{signal:s.signal}:null;await l.load(r);const o=l.geometryType;if("mesh"===o)throw new i("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(s.worldScale){if("polyline"===o||"polygon"===o)throw new i("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!s.view||"3d"!==s.view.type)throw new i("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true")}const t=await m({field:s.field,normalizationField:s.normalizationField,valueExpression:s.valueExpression}),p=S(l,t,"size-visual-variable:invalid-parameters");if(p)throw p;return s}async function R(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new i("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new i("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");const s={...a};s.symbolType=s.symbolType||"2d",s.defaultSymbolEnabled=null==s.defaultSymbolEnabled||s.defaultSymbolEnabled;const n=[0,2,1,3],l=d(s.layer,n);if(s.layer=l,!l)throw new i("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+y(n).join(", "));const r=e(s.signal)?{signal:s.signal}:null;await l.load(r);const o=l.geometryType,t=s.symbolType.indexOf("3d")>-1;if(s.outlineOptimizationEnabled="polygon"===o&&s.outlineOptimizationEnabled,"mesh"===o)throw new i("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(t&&("polyline"===o||"polygon"===o))throw new i("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(s.symbolType.indexOf("3d-volumetric")>-1&&(!s.view||"3d"!==s.view.type))throw new i("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const p=await m({field:s.field,normalizationField:s.normalizationField,valueExpression:s.valueExpression}),u=S(l,p,"size-continuous-renderer:invalid-parameters");if(u)throw u;return s}async function B(a){if(!a||!a.layer||!a.field&&!a.valueExpression)throw new i("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(a.valueExpression&&!a.view)throw new i("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");const s={...a};s.symbolType=s.symbolType||"2d",s.defaultSymbolEnabled=null==s.defaultSymbolEnabled||s.defaultSymbolEnabled,s.classificationMethod=s.classificationMethod||"equal-interval",s.normalizationType=p(s);const n=[0,2,1,3],l=d(s.layer,n);if(s.layer=l,!l)throw new i("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+y(n).join(", "));if(!(null!=s.minValue&&null!=s.maxValue)&&(null!=s.minValue||null!=s.maxValue))throw new i("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const r=e(s.signal)?{signal:s.signal}:null;await l.load(r);const o=l.geometryType,t=s.symbolType.indexOf("3d")>-1;if(s.outlineOptimizationEnabled="polygon"===o&&s.outlineOptimizationEnabled,"mesh"===o)throw new i("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(t&&("polyline"===o||"polygon"===o))throw new i("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(s.symbolType.indexOf("3d-volumetric")>-1&&(!s.view||"3d"!==s.view.type))throw new i("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const u=await m({field:s.field,normalizationField:s.normalizationField}),c=S(l,u,"size-class-breaks-renderer:invalid-parameters");if(c)throw c;return s}function A(e){const i={...e};delete i.basemap,delete i.sizeScheme,delete i.legendOptions,delete i.symbolType,delete i.defaultSymbolEnabled;const a=i;return a.analyzeData=!(null!=i.minValue&&null!=i.maxValue),a}function C(e){const i={...e},a=i.symbolType.indexOf("3d-volumetric")>-1,s=i;return s.worldScale=a,a&&(s.axis="3d-volumetric-uniform"===i.symbolType?"all":"height"),delete i.symbolType,delete i.defaultSymbolEnabled,s}async function W(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))throw new i("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");const s={...a};s.symbolType=s.symbolType||"2d",s.defaultSymbolEnabled=null==s.defaultSymbolEnabled||s.defaultSymbolEnabled;const n=[0,2,1,3],l=d(s.layer,n);if(s.layer=l,!l)throw new i("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+y(n).join(", "));const r=e(s.signal)?{signal:s.signal}:null;await l.load(r);const o=l.geometryType,t=s.symbolType.indexOf("3d")>-1;if(s.outlineOptimizationEnabled="polygon"===o&&s.outlineOptimizationEnabled,"mesh"===o)throw new i("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(t&&("polyline"===o||"polygon"===o))throw new i("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(s.symbolType.indexOf("3d-volumetric")>-1&&(!s.view||"3d"!==s.view.type))throw new i("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const m=b(l,s.startTime,s.endTime,"size-age-renderer:invalid-parameters");if(m)throw m;if(s.unit&&-1===f.indexOf(s.unit))throw new i("size-age-renderer:invalid-unit",`Supported units are: ${f.join(", ")}`);return s}async function P(i){let a=i.sizeScheme,s=null,n=null;const l=await I(i.basemap,i.view);if(s=e(l.basemapId)?l.basemapId:null,n=e(l.basemapTheme)?l.basemapTheme:null,a)return{scheme:q(a),basemapId:s,basemapTheme:n};const r=F({basemap:s,basemapTheme:n,geometryType:i.geometryType,worldScale:i.worldScale,view:i.view});return r&&(a=r.primaryScheme,s=r.basemapId,n=r.basemapTheme),{scheme:a,basemapId:s,basemapTheme:n}}function L(e,i){let a;switch(i){case"point":case"multipoint":{const i=e;a=[i.minSize,i.maxSize];break}case"polyline":{const i=e;a=[i.minWidth,i.maxWidth];break}case"polygon":{const i=e;a=[i.marker.minSize,i.marker.maxSize];break}}return a}function $(e,i){"clamped-linear"===e.transformationType&&"below"===i&&e.flipSizes()}async function H(e,a,s,n){const{theme:t,field:m,normalizationField:p,minValue:u,maxValue:d,axis:y}=e,c=e.layer,b=m&&!("function"==typeof m)?c.getField(m):null,f=b&&b.type===D,w=c.geometryType,v=await P({basemap:e.basemap,geometryType:w,sizeScheme:e.sizeScheme,worldScale:e.worldScale,view:e.view}),h=v.scheme;if(!h)throw new i("size-visual-variable:insufficient-info","Unable to find size scheme");const z=n&&[n.minSize,n.maxSize]||L(h,w),{minDataValue:g,maxDataValue:x,defaultValuesUsed:T}=E(a,s,t,f,"above"===t||"below"===t),S=[],j="height"===y,k=j?y:void 0,O=z[0];let I=z[1];if(j&&"number"==typeof O&&"number"==typeof I){const e=V({minSize:O,maxSize:I},k);S.push(new o({axis:"width-and-depth",minSize:e.minSize})),I=e.maxSize}const F=new o({field:m,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,valueUnit:"unknown",normalizationField:p,axis:k,minSize:O,maxSize:I,minDataValue:g,maxDataValue:x,legendOptions:e.legendOptions});$(F,t),S.unshift(F);const U=new l({type:"size",theme:t,minSliderValue:null!=u?u:a.min,maxSliderValue:null!=d?d:a.max}),M=new r({visualVariables:[U]});return{basemapId:v.basemapId,basemapTheme:v.basemapTheme,visualVariables:S,statistics:a,defaultValuesUsed:T,sizeScheme:q(h),authoringInfo:M}}async function _(e,i,a,s,l){const r=await n("esri/smartMapping/t9n/smartMapping"),o=l.layer,m=l.field,p=o.geometryType,u=l.defaultSymbolEnabled,d=q(e.sizeScheme),y="polygon"===p,c=y?d.marker:d,b=y?d.background:null,f=y?"point":p,w=i&&i.opacity,v=e.visualVariables.map((e=>e.clone()));i&&i.visualVariables&&i.visualVariables.length&&v.push(...i.visualVariables.map((e=>e.clone())));return{renderer:new t({backgroundFillSymbol:b&&j(p,{type:l.symbolType,color:b.color,outline:k(b,p,w)}),classBreakInfos:[{minValue:-U,maxValue:U,symbol:j(f,{type:l.symbolType,color:c.color,size:O(c,f),outline:k(c,f,w)})}],defaultLabel:u?r.other:null,defaultSymbol:u?j(f,{type:l.symbolType,color:c.noDataColor,size:O(c,f,!0),outline:k(c,f,w)}):null,field:m,normalizationField:s,normalizationType:a,valueExpression:l.valueExpression,valueExpressionTitle:l.valueExpressionTitle,visualVariables:v,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariables:e.visualVariables.map((e=>e.clone())),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,sizeScheme:q(e.sizeScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}function G(e,i){const s=a(e.minSize),n=(a(e.maxSize)-s)/(i>=4?i-1:i),l=[];for(let a=0;a<i;a++)l.push(s+n*a);return l}async function J(e,i){const a=await n("esri/smartMapping/t9n/smartMapping"),s=e.layer,l=e.defaultSymbolEnabled,o=s.geometryType,m="polygon"===o,p=e.symbolType.indexOf("3d-volumetric")>-1,d=await P({basemap:e.basemap,geometryType:o,sizeScheme:e.sizeScheme,worldScale:p,view:e.view}),y=d.scheme,{result:c,outlineResult:b}=i,f=c.classBreakInfos,w=e.classificationMethod,v=e.normalizationType,h=m?y.marker:y,z=m?y.background:null,g=m?"point":o,x=L(h,g),T=p&&V({minSize:x[0],maxSize:x[1]},"height"),S=G({minSize:x[0],maxSize:p?T.maxSize:x[1]},f.length),E=b&&b.opacity,I=new t({backgroundFillSymbol:z&&j(o,{type:e.symbolType,color:z.color,outline:k(z,o,E)}),classBreakInfos:f.map(((i,a)=>({minValue:i.minValue,maxValue:i.maxValue,symbol:j(g,{type:e.symbolType,color:h.color,size:S[a],widthAndDepth:T&&T.minSize,outline:k(h,g,E)}),label:i.label}))),defaultLabel:l?a.other:null,defaultSymbol:l?j(g,{type:e.symbolType,color:h.noDataColor,size:O(h,g,!0),widthAndDepth:T&&T.minSize,outline:k(h,g,E)}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:v,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===v?c.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new r({type:"class-breaks-size",classificationMethod:w,standardDeviationInterval:e.standardDeviationInterval})});return"standard-deviation"!==w&&u({classBreakInfos:I.classBreakInfos,classificationMethod:w,normalizationType:v,round:!0}),b&&b.visualVariables&&b.visualVariables.length&&(I.visualVariables=b.visualVariables.map((e=>e.clone()))),{renderer:I,sizeScheme:q(y),classBreaksResult:c,defaultValuesUsed:i.defaultValuesUsed,basemapId:d.basemapId,basemapTheme:d.basemapTheme}}async function K(e){const i=await M(e),{view:a,field:s,valueExpression:n,minValue:l,maxValue:r,layer:o,normalizationField:t,signal:m,statistics:p}=i,u=t?"field":void 0,[d,y,c]=await Promise.all([p||z({layer:o,field:s,valueExpression:n,sqlExpression:i.sqlExpression,sqlWhere:i.sqlWhere,normalizationType:u,normalizationField:t,minValue:l,maxValue:r,view:a,signal:m}),"90-10"===i.theme?g({layer:o,field:s,normalizationField:t,valueExpression:n,classificationMethod:"quantile",minValue:l,maxValue:r,view:a,numClasses:10,signal:m}):null,i.sizeOptimizationEnabled?h({view:a,layer:o,signal:m}):null]);return H(i,d,null==y?void 0:y.result,c)}async function N(e){const i=await R(e),a={layer:i.layer,view:i.view,signal:i.signal},[s,n]=await Promise.all([K(C(i)),i.outlineOptimizationEnabled?v(a):null]),l=i.normalizationField;return _(s,n,l?"field":void 0,l,i)}async function Q(e){const i=await B(e);return J(i,await g(A(i),i.outlineOptimizationEnabled))}async function X(e){const i=await W(e),{defaultSymbolEnabled:a,view:l,startTime:r,endTime:o,symbolType:t,minValue:m,maxValue:p,signal:u}=i,d=i.layer,y={layer:i.layer,view:i.view,signal:u},[b,f]=await Promise.all([i.unit?{unit:i.unit,statistics:null,valueExpression:null}:await w({view:l,layer:d,startTime:r,endTime:o,minValue:m,maxValue:p,signal:u}),i.outlineOptimizationEnabled?v(y):null]),{unit:h,statistics:z}=b,g=c({layer:d,startTime:r,endTime:o,unit:h}).valueExpression,S=await n("esri/smartMapping/t9n/smartMapping"),E=s(S[`ageInfo_${h}`],{unit:h,startTime:x(r,h,d),endTime:x(o,h,d)}),V=await K(C({layer:d,basemap:i.basemap,valueExpression:g,symbolType:t,statistics:z,legendOptions:{title:E},theme:i.theme,sizeScheme:i.sizeScheme,sizeOptimizationEnabled:i.sizeOptimizationEnabled,view:i.view,minValue:m,maxValue:p,signal:u})),j={layer:d,valueExpression:g,defaultSymbolEnabled:a,symbolType:t},k=await _(V,f,null,null,j);return k.renderer.authoringInfo.visualVariables.forEach((e=>T(e,r,o,h))),{...k,unit:h}}export{X as createAgeRenderer,Q as createClassBreaksRenderer,N as createContinuousRenderer,K as createVisualVariables};
