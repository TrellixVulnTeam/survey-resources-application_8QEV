/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e}from"../../core/maybe.js";import r from"../../core/Error.js";import a from"../../Color.js";import"../../renderers/Renderer.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../renderers/DictionaryRenderer.js";import"../../renderers/DotDensityRenderer.js";import s from"../../renderers/support/HeatmapColorStop.js";import t from"../../renderers/HeatmapRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import{getFieldsList as i}from"../support/utils.js";import{createLayerAdapter as n,getLayerTypeLabels as o}from"../support/adapters/support/layerUtils.js";import{verifyBasicFieldValidity as m,createColors as l,getBasemapInfo as p}from"./support/utils.js";import d from"../statistics/heatmapStatistics.js";import{c as u,g as c}from"../../chunks/heatmap.js";const f=.01;async function h(a){if(!(a&&a.layer&&a.view))throw new r("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const{blurRadius:s,minRatio:t,maxRatio:l,fadeToTransparent:p}=a,d={...a};d.blurRadius=null==s?10:s,d.minRatio=null==t?.01:t,d.maxRatio=null==l?1:l,d.fadeToTransparent=null==p||p;const u=[0,2,1],c=n(d.layer,u);if(d.layer=c,!c)throw new r("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+o(u).join(", "));const f=e(d.signal)?{signal:d.signal}:null;await c.load(f);const h=await i({field:d.field}),b=m(c,h,"heatmap-renderer:invalid-parameters");if(b)throw b;return d}async function b(r){let a=r.scheme,s=null,t=null;const i=await p(r.basemap,r.view);if(s=e(i.basemapId)?i.basemapId:null,t=e(i.basemapTheme)?i.basemapTheme:null,a)return{scheme:u(a),basemapId:s,basemapTheme:t};const n=c({basemap:s,basemapTheme:t});return n&&(a=n.primaryScheme,s=n.basemapId,t=n.basemapTheme),{scheme:a,basemapId:s,basemapTheme:t}}async function w(e,r){const{fieldOffset:i}=e,{field:n,basemap:o,blurRadius:m,minRatio:p,maxRatio:d,fadeToTransparent:c,heatmapScheme:h,view:w}=r,{scheme:j,basemapId:y,basemapTheme:R}=await b({basemap:o,scheme:h,view:w}),T=j.colors,g=T.length,v=!e.count,I=v?[0,100]:[e.min,e.max],x=(d-p)/(g-1),S=T[0],O=[new s({ratio:0,color:new a([S.r,S.g,S.b,0])}),new s({ratio:f,color:new a([S.r,S.g,S.b,0])}),new s({ratio:c?p:f,color:S})];l(T,g).forEach(((e,r)=>{O.push(new s({ratio:p+x*r,color:e}))}));const U=new t({blurRadius:m,colorStops:O,field:n,minPixelIntensity:I[0],maxPixelIntensity:I[1]});return null!=i&&(U.fieldOffset=i),{renderer:U,statistics:e,defaultValuesUsed:v,scheme:u(j),basemapId:y,basemapTheme:R}}async function j(e){const r=await h(e);return w(r.statistics?r.statistics:await d({layer:r.layer,field:r.field,fieldOffset:r.fieldOffset,blurRadius:r.blurRadius,view:r.view,signal:r.signal}),r)}export{j as createRenderer};
