/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e}from"../../core/maybe.js";import i from"../../core/Error.js";import a from"../../renderers/support/AuthoringInfoVisualVariable.js";import s from"../../renderers/support/AuthoringInfo.js";import r from"../../renderers/visualVariables/OpacityVariable.js";import{getFieldsList as l}from"../support/utils.js";import{createLayerAdapter as o,getLayerTypeLabels as t}from"../support/adapters/support/layerUtils.js";import n from"../statistics/summaryStatistics.js";import{verifyBasicFieldValidity as p,createStopValues as u,getDefaultDataRange as m}from"./support/utils.js";const d="date";async function f(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new i("opacity-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.view)throw new i("opacity-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");const s={...a},r=[0,2,1,3],n=o(s.layer,r);if(s.layer=n,!n)throw new i("opacity-visual-variable:invalid-parameters","'layer' must be one of these types: "+t(r).join(", "));const u=e(s.signal)?{signal:s.signal}:null;await n.load(u);const m=await l({field:s.field,normalizationField:s.normalizationField,valueExpression:s.valueExpression}),d=p(n,m,"opacity-visual-variable:invalid-parameters");if(d)throw d;return s}function v(e,i){const l=i.layer,o=i.field,t=o&&!("function"==typeof o)?l.getField(o):null,n=t&&t.type===d,p=u(e),f=m(e,n,!0),v=f||[p[0],p[4]],c=new r({field:o,valueExpression:i.valueExpression,valueExpressionTitle:i.valueExpressionTitle,normalizationField:i.normalizationField,stops:[{value:v[0],opacity:.3},{value:v[1],opacity:1}],legendOptions:i.legendOptions}),y=new a({type:"opacity",minSliderValue:null!=i.minValue?i.minValue:e.min,maxSliderValue:null!=i.maxValue?i.maxValue:e.max}),x=new s({visualVariables:[y]});return Promise.resolve({visualVariable:c,statistics:e,defaultValuesUsed:!!f,authoringInfo:x})}async function c(e){const i=await f(e);let a=null;return a=i.statistics?i.statistics:await n({layer:i.layer,field:i.field,valueExpression:i.valueExpression,sqlExpression:i.sqlExpression,sqlWhere:i.sqlWhere,normalizationType:i.normalizationField?"field":void 0,normalizationField:i.normalizationField,minValue:i.minValue,maxValue:i.maxValue,view:i.view,signal:i.signal}),v(a,i)}export{c as createVisualVariable};
