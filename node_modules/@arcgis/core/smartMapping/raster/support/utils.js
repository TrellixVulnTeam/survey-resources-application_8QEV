/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import r from"../../../core/Error.js";import{getSupportedRendererTypes as e,createDefaultRenderer as a}from"../../../renderers/support/rasterRendererHelper.js";import t from"./adapters/ImageryLayerAdapter.js";import s from"./adapters/ImageryTileLayerAdapter.js";const n={imagery:{adapter:t,label:"ImageryLayer"},"imagery-tile":{adapter:s,label:"ImageryTileLayer"},wcs:{adapter:s,label:"WCSLayer"}},l={"raster-stretch":"raster-stretch","unique-value":"raster-unique-value","raster-rgb":"raster-rgb","class-breaks":"raster-class-breaks","raster-colormap":"raster-colormap","raster-shaded-relief":"raster-shaded-relief","vector-field":"raster-vector-field"},o=Object.keys(n).map((r=>n[r].label));function i(r){var e;if("raster-layer-adapter"===r.type)return r;const a=null==(e=n[r.type])?void 0:e.adapter;return null==a?null:new a({layer:r})}async function p(r){const t=i((r=await d(r)).layer),s=await t.generateRasterInfo(r),n=e(s).map((r=>l[r])),o=a(s),{bandCount:p}=s;return p>1&&n.push("raster-rgb"),{supportedTypes:n,defaultRenderer:o}}async function d(e){const{layer:a}=e;if(!a)throw new r("raster-renderer-creator:missing-parameters","'layer' parameter is required");const t=i(a);if(null==t)throw new r("raster-renderer-creator:invalid-parameters","'layer' must be one of these types: "+o.join(", "));return await t.load(),await t.updateRasterInfo({renderingRule:e.renderingRule,signal:e.signal}),{...e,layer:t}}export{i as createRasterLayerAdapter,p as getSupportedRendererInfo,d as processRasterRendererParameters};
