/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../../../core/Error.js";import{createStretchRenderer as r,getDefaultBandCombination as t}from"../../../renderers/support/rasterRendererHelper.js";import{processRasterRendererParameters as n}from"../support/utils.js";async function a(r){r=await n(r);const{rasterInfo:a}=r.layer;if(1===a.bandCount)throw new e("raster-rgb-renderer:not-supported","Only multiband image is supported");const{rgbBandIds:s}=r;if(s&&3!==s.length)throw new e("raster-rgb-renderer:invalid-parameters","rgb band ids must have exactly three 0-based band indices");return s||(r.rgbBandIds=t(a)),r}async function s(e){const t=(e=await a(e)).layer,{rasterInfo:n}=t,{rgbBandIds:s}=e,i={bandIds:s,stretchType:e.stretchType};let o=r(n,i);return e.estimateStatistics&&o.dynamicRangeAdjustment&&(await t.updateRasterInfoWithEstimatedStats({renderingRule:e.renderingRule,signal:e.signal}),o=r(n,i)),d(o,e),{renderer:o,rgbBandIds:s}}function d(e,r){const{gamma:t,useGamma:n,dynamicRangeAdjustment:a}=r;3===(null==t?void 0:t.length)&&(e.gamma=t),null!=n&&(e.useGamma=n),null!=a&&(e.dynamicRangeAdjustment=a)}export{s as createRenderer};
