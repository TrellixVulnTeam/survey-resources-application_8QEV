/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import"../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import t from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{createGenerateRendererClassBreaks as s,createGenerateRendererUniqueValues as i}from"../../../tasks/support/generateRendererUtils.js";import{getFieldsList as o}from"../utils.js";import{mergeWhereClauses as a}from"../../statistics/support/utils.js";import{calculateStatsFromMemory as n,getDataValues as l,isValidNumber as u}from"./support/utils.js";import p from"./FeatureLayerAdapter.js";function c(e){return"esri.tasks.support.ClassBreaksDefinition"===e.declaredClass}function d(e){return"esri.tasks.support.UniqueValueDefinition"===e.declaredClass}let m=class extends p{constructor(e){super(e)}async _createGenerateRendererResult(e,r,o,a,p){const m=e&&e.features;if(!(m&&m.length))throw new t("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");let f=null;if("percent-of-total"===a){if(f=(await n({field:r},m)).sum,null==f)throw new t("csv-layer-adapter:invalid","invalid normalizationTotal")}if(c(p)){const e=(await l({field:r,normalizationType:a,normalizationField:o,normalizationTotal:f},m)).filter((e=>null!=e&&u(e)));return s({definition:p,values:e,normalizationTotal:f})}if(d(p)){const e=(await l({field:r},m)).filter((e=>null!=e&&"string"==typeof e&&""!==e.trim()));return i(e)}}generateRenderer(e,r){const t=e.classificationDefinition;let s=null,i=null,n=null;c(t)?(s=t.classificationField,i=t.normalizationField,n=t.normalizationType):d(t)&&(s=t.attributeField);const l=this.layer;return o({field:s,normalizationField:i}).then((o=>{const u=l.createQuery();return u.returnGeometry=!1,u.outFields=o,u.where=a(u.where,e.where),l.queryFeatures(u,{signal:r}).then((e=>this._createGenerateRendererResult(e,s,i,n,t)))}))}load(e){const r=this.layer.load(e).then((e=>{this.geometryType=e.geometryType,this.objectIdField=e.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0}));return this.addResolvingPromise(r),Promise.resolve(this)}};m=e([r("esri.smartMapping.support.adapters.CSVLayerAdapter")],m);var f=m;export default f;
