/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{loadArcade as e}from"../../support/arcadeOnDemand.js";import t from"../../Basemap.js";import{getWellKnownBasemapId as n}from"../../support/basemapUtils.js";const r={light:["streets","gray","topo","terrain","national-geographic","oceans","osm","gray-vector","streets-vector","topo-vector","streets-relief-vector","streets-navigation-vector"],dark:["satellite","hybrid","dark-gray","dark-gray-vector","streets-night-vector"]},o="percent-of-total",i="field",s={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},a=["integer","small-integer"];let l=null;async function u(t){const n=t.field,r=t.normalizationField,o=t.valueExpression;let i=[];if(o){if(!l){const{arcadeUtils:t}=await e();l=t}i=l.extractFieldNames(o)}return n&&i.push(n),r&&i.push(r),i}function c(e){let t=e.normalizationType;return t||(e.normalizationField?t=i:null!=e.normalizationTotal&&(t=o)),t}function f(e){return String(e).padStart(2,"0")}function g(e,t,n){let r;if("date"===t||"number"===t){"number"===t&&(e=new Date(e));r=`TIMESTAMP'${n?e.getFullYear():e.getUTCFullYear()}-${f((n?e.getMonth():e.getUTCMonth())+1)}-${f(n?e.getDate():e.getUTCDate())} ${f(n?e.getHours():e.getUTCHours())}:${f(n?e.getMinutes():e.getUTCMinutes())}:${f(n?e.getSeconds():e.getUTCSeconds())}'`}else r=e;return r}function d(e,t,n,r){const{hasQueryEngine:o}=e;let i=`(${g(n,p(e,n),o)} - ${g(t,p(e,t),o)})`;o&&(i=`(${i} * ${s.milliseconds})`);let a=s[r],l="/";a<1&&(a=1/a,l="*");return{sqlExpression:1===a?i:`(${i} ${l} ${a})`,sqlWhere:null}}function p(e,t){if(t instanceof Date)return"date";if("number"==typeof t)return"number";if("string"==typeof t){const n=e.getField(t);if("<now>"===t.toLowerCase())return;if(n&&"date"===n.type)return"field"}}function m(e,t=r){for(const n in t)if(t[n].indexOf(e)>-1)return n}function y(e,r,o=!0){let i=null;return"string"==typeof e&&r.indexOf(e)>-1?i=e:e instanceof t&&(i=n(e)),o?i||"gray":i}function $(e,t){const n=t&&e.getField(t);return n&&a.indexOf(n.type)>-1}function h(e){return`cast(${e} as float)`}export{h as castIntegerFieldToFloat,r as defaultBasemapGroups,m as getBasemapGroup,y as getBasemapId,d as getDateDiffSQL,p as getDateType,u as getFieldsList,c as getNormalizationType,$ as isIntegerField,s as unitValueInDays};
