/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import{fetchMessageBundle as n}from"../../intl/messages.js";import t from"../../symbols/TextSymbol.js";import"../../symbols.js";import r from"../../layers/support/LabelExpressionInfo.js";import s from"../../layers/support/LabelClass.js";import o from"../heuristics/clusterMinSize.js";import{getStatisticInfos as a,getClusterField as i,clusterCountField as l,getPredominantTypeExpression as u,getClusterFieldHash as c}from"../support/clusterUtils.js";import{isClusterCompatibleRenderer as m}from"../../views/2d/layers/support/clusterUtils.js";async function f(n){const{layer:t,renderer:r,view:s}=n;await Promise.all([t.load(),s.when()]);const o=r||t.renderer;return m(o)?{layer:t,renderer:o,view:s}:Promise.reject(new e("clusters-label-schemes:invalid-parameters","'renderer' is not valid"))}function p(e,n,t){const r="unique-value"===e.type?e.uniqueValueInfos:[];return u(r,n,t)}function v(e){return`\n  $feature["${e}"];\n  var value = $feature["${e}"];\n  var num = Count(Text(Round(value)));\n  var label = When(\n    num < 4, Text(value, "#.#"),\n    num == 4, Text(value / Pow(10, 3), "#.0k"),\n    num <= 6, Text(value / Pow(10, 3), "#k"),\n    num == 7, Text(value / Pow(10, 6), "#.0m"),\n    num > 7, Text(value / Pow(10, 6), "#m"),\n    Text(value, "#,###")\n  );\n  return label;\n  `}function w(e){const n=new t({haloColor:"#373837",haloSize:"1px",color:"#f0f0f0",font:{family:"Noto Sans",size:"12px",weight:"bold"}});return new s({symbol:n,deconflictionStrategy:"none",labelPlacement:"center-center",labelExpressionInfo:new r({expression:e})})}async function y(e){const{renderer:n,view:t,statInfo:r}=e,s=null==r?void 0:r.statisticType,a=r?i(r.attributeInfo,s):l,u=w("type"===s?p(n,a,e.noneValueLabel):v(a));return{name:r?`clusters-${s}-${c(a,s)}`:"clusters-count",labelingInfo:[u],clusterMinSize:await o(u.symbol,t),fieldName:a}}function b(e){const n=new Map;for(const t of e)"size"===t.attributeInfo.vvType?n.set(t.statisticHash,t):n.has(t.statisticHash)||n.set(t.statisticHash,t);return[...n.values()]}async function d(e){const[{renderer:t,layer:r,view:s},o]=await Promise.all([f(e),n("esri/smartMapping/t9n/smartMapping")]);if(!t)return null;let i=null;const l=[],u=b(a(r,t,!1));for(const n of u){const e=await y({renderer:t,view:s,statInfo:n,noneValueLabel:o.clusters.predominantNoneValue});"size"===n.attributeInfo.vvType?i=e:l.push(e)}const c=await y({renderer:t,view:s});return i?l.unshift(c):i=c,{primaryScheme:i,secondarySchemes:l}}export{d as getLabelSchemes};
