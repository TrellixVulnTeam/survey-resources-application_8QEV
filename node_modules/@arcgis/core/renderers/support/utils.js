/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../../core/Logger.js";import{unique as n}from"../../core/arrayUtils.js";import{convertDateFormatToIntlOptions as t,formatDate as l}from"../../intl/date.js";import a from"../visualVariables/support/ColorStop.js";import{format as i,round as o}from"./numberUtils.js";const r=e.getLogger("esri.renderers.support.utils"),s={lte:"<=",gte:">=",lt:"<",gt:">",pct:"%",ld:"â€“"},u={millisecond:0,second:1,minute:2,hour:3,day:4,month:5,year:6},d={millisecond:"long-month-day-year-long-time",second:"long-month-day-year-long-time",minute:"long-month-day-year-short-time",hour:"long-month-day-year-short-time",day:"long-month-day-year",month:"long-month-day-year",year:"year"},m=t("short-date");function f(e,n,t){let l="";return 0===n?l=s.lt+" ":n===t&&(l=s.gt+" "),l+e}function c(e){const{values:n,colors:t,labelIndexes:o,isDate:r,dateFormatOptions:s}=e;return n.map(((e,u)=>{let d=null;if(!o||o.indexOf(u)>-1){let t;t=r?l(e,s):i(e),t&&(d=f(t,u,n.length-1))}return new a({value:e,color:t[u],label:d})}))}function p(e){const{stops:n,changes:t,isDate:a,dateFormatOptions:r}=e,s=n.map((e=>e.value)),u=[];for(const l of t)u.push(l.index),s[l.index]=l.value;const d=o(s,{indexes:u});n.forEach(((e,t)=>{if(e.value=s[t],null!=e.label){let o,s=null;o=a?l(d[t],r):i(d[t]),o&&(s=f(o,t,n.length-1)),e.label=s}}))}function h(e){let n=e.minValue,t=e.maxValue;const l=e.isFirstBreak?"":s.gt+" ",a="percent-of-total"===e.normalizationType?s.pct:"";return n=null==n?"":i(n),t=null==t?"":i(t),l+n+a+" "+s.ld+" "+t+a}function y(e){const n=e.classBreakInfos,t=e.normalizationType;let l=[];if(n&&n.length)if("standard-deviation"!==e.classificationMethod)if(e.round){l.push(n[0].minValue);for(const e of n)l.push(e.maxValue);l=o(l),n.forEach(((e,n)=>{e.label=h({minValue:0===n?l[0]:l[n],maxValue:l[n+1],isFirstBreak:0===n,normalizationType:t})}))}else n.forEach(((e,n)=>{e.label=h({minValue:e.minValue,maxValue:e.maxValue,isFirstBreak:0===n,normalizationType:t})}));else r.warn("setLabelsForClassBreaks","cannot set labels for class breaks generated using 'standard-deviation' method.")}function g(e){if("standard-deviation"===e.classificationMethod)return void r.warn("updateClassBreak","cannot update labels for class breaks generated using 'standard-deviation' method.");const n=e.classBreaks,t=e.change,l=t.index,a=t.value,i=n.length;let o=-1,s=-1;0===l?o=l:l===i?s=l-1:(s=l-1,o=l);const u=e.normalizationType;let d=null;o>-1&&o<i&&(d=n[o],d.minValue=a,d.label=h({minValue:d.minValue,maxValue:d.maxValue,isFirstBreak:0===o,normalizationType:u})),s>-1&&s<i&&(d=n[s],d.maxValue=a,d.label=h({minValue:d.minValue,maxValue:d.maxValue,isFirstBreak:0===s,normalizationType:u}))}function x(e){const n=e.map((e=>new Date(e))),t=n.length;let l=1/0,a=null;for(let i=0;i<t-1;i++){const e=n[i];let o=1/0,r=null;for(let l=i+1;l<t;l++){const t=n[l],a=(e.getFullYear()!==t.getFullYear()?"year":e.getMonth()!==t.getMonth()&&"month")||e.getDate()!==t.getDate()&&"day"||e.getHours()!==t.getHours()&&"hour"||e.getMinutes()!==t.getMinutes()&&"minute"||e.getSeconds()!==t.getSeconds()&&"second"||"millisecond",i=u[a];i<o&&(o=i,r=a)}o<l&&(l=o,a=r)}return a}function V(e){const{value:n,domain:a,fieldInfo:o,dateFormatInterval:r}=e;let s=String(n);const u=a&&"codedValues"in a&&a.codedValues?a.getName(n):null;return u?s=u:"number"==typeof n&&(s=o&&"date"===o.type?l(n,r&&t(d[r])):i(n)),s}function b(e,n){return"normalizationField"in e&&e.normalizationField?F(e.field,e.normalizationField):"field"in e&&e.field?v(e.field):"valueExpression"in e&&e.valueExpression?z(e.valueExpression,e.valueExpressionTitle,n):null}function v(e){return{type:"field",field:e}}function F(e,n){return{type:"normalized-field",field:e,normalizationField:n}}function z(e,n,t){return{type:"expression",expression:e,title:n,returnType:t}}function k(e,t){const l=[];if("class-breaks"===e.type||"heatmap"===e.type)l.push(b(e,"number"));else if("unique-value"===e.type){const n=e.authoringInfo;if(n&&"relationship"===n.type){if(n.field1&&n.field2){const e=n.field1.field,t=n.field2.field,a=n.field1.normalizationField,i=n.field2.normalizationField;l.push(b({field:e,normalizationField:a})),l.push(b({field:t,normalizationField:i}))}}else{const n=e.uniqueValueInfos[0];let t=null;if(n&&n.value){const n=typeof e.uniqueValueInfos[0].value;"string"!==n&&"number"!==n||(t=n)}l.push(b(e,t)),[e.field2,e.field3].forEach((e=>e&&l.push(v(e))))}}else"dot-density"===e.type&&e.attributes.forEach((e=>l.push(b(e,"number"))));const a=t?t(e):"visualVariables"in e?e.visualVariables:null;return a&&a.forEach((e=>l.push(b(e,"number")))),n(l.filter(Boolean),((e,n)=>"field"===e.type&&"field"===n.type?e.field===n.field:"normalized-field"===e.type&&"normalized-field"===n.type?e.field===n.field&&e.normalizationField===n.normalizationField:"expression"===e.type&&"expression"===n.type&&e.expression===n.expression))}export{x as calculateDateFormatInterval,h as createClassBreakLabel,c as createColorStops,V as createUniqueValueLabel,b as getAttribute,k as getAttributes,y as setLabelsForClassBreaks,m as timelineDateFormatOptions,g as updateClassBreak,p as updateColorStops};
