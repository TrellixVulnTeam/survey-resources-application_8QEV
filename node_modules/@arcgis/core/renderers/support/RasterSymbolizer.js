/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{unwrap as t,isSome as r}from"../../core/maybe.js";import s from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{JSONSupport as a}from"../../core/JSONSupport.js";import{toHSV as n}from"../../core/colorUtils.js";import{convertColorRampToColormap as l}from"./colorRampUtils.js";import u from"../../layers/support/RasterInfo.js";import{extractBands as c,stretch as p,colorize as h,remapColor as m,lookupPixels as f,createStretchLUT as d,createColormapLUT as g,createHistogramEqualizationLUT as b,estimateStatisticsHistograms as x}from"../../layers/support/rasterFunctions/pixelUtils.js";import{hillshade as S,tintHillshade as y,calculateHillshadeParams as k}from"../../layers/support/rasterFunctions/surfaceUtils.js";const C=s.getLogger("esri.renderers.support.RasterSymbolizer");function O(e,t){const{attributeTable:s,bandCount:o}=e;if(!r(s)||o>1)return!1;if(t){if(null==s.fields.find((e=>e.name.toLowerCase()===t.toLowerCase())))return!1}return!0}function L(e){return"elevation"===e.dataType}function R(e){const{bandCount:t,colormap:s}=e;return r(s)&&s.length&&1===t}const v={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]};let _=class extends a{constructor(e){super(e)}bind(){const{rendererJSON:e}=this;if(!e)return!1;let t;switch(this.lookup={rendererJSON:{}},e.type){case"uniqueValue":t=this._updateUVRenderer(e);break;case"rasterColormap":t=this._updateColormapRenderer(e);break;case"rasterStretch":t=this._updateStretchRenderer(e);break;case"classBreaks":t=this._updateClassBreaksRenderer(e);break;case"rasterShadedRelief":t=this._updateShadedReliefRenderer(e)}return t}symbolize(e){let t=e&&e.pixelBlock;if(!this.isValidPixelBlock(t))return t;if(e.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(t,e.simpleStretchParams);try{let r;switch(t.pixels.length>3&&(t=c(t,[0,1,2])),this.rendererJSON.type){case"uniqueValue":case"rasterColormap":r=this._symbolize_colormap(t);break;case"classBreaks":r=this._symbolize_classBreaks(t);break;case"rasterStretch":r=this._symbolize_stretch(t,e.bandIds);break;case"rasterShadedRelief":{const{extent:s}=e,o=s.spatialReference.isGeographic,i={x:(s.xmax-s.xmin)/t.width,y:(s.ymax-s.ymin)/t.height};r=this._symbolize_shadedRelief(t,{isGCS:o,resolution:i});break}}return r}catch(r){return C.error("symbolize",r.message),t}}simpleStretch(e,t){if(!this.isValidPixelBlock(e))return e;try{return e.pixels.length>3&&(e=c(e,[0,1,2])),p(e,t)}catch(r){return C.error("symbolize",r.message),e}}generateWebGLParameters(e){if(["uniqueValue","rasterColormap","classBreaks"].indexOf(this.rendererJSON.type)>-1){var t;const{indexedColormap:e,offset:r}=(null==(t=this.lookup)?void 0:t.colormapLut)||{};return{colormap:e,colormapOffset:r,type:"lut"}}const{pixelBlock:r,isGCS:s,resolution:o,bandIds:i}=e,{rendererJSON:a}=this;return"rasterStretch"===a.type?this.generateStretchWebGLParams(r,a,i):"rasterShadedRelief"===a.type?this.generateShadedReliefWebGLParams(a,s,o):null}_isLUTChanged(e){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const t=this.rendererJSON.colorRamp;if(e)return JSON.stringify(t)!==JSON.stringify(this.lookup.rendererJSON.colorRamp);const r={...this.rendererJSON},s={...this.lookup.rendererJSON};return r.colorRamp=null,s.colorRamp=null,JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)}_symbolize_colormap(e){if(this._isLUTChanged()){if(!this.bind())return e}return h(e,this.lookup.colormapLut)}_symbolize_classBreaks(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1;let s;if(this._isLUTChanged()){if(!this.bind())return e}return s=r?h(e,this.lookup.colormapLut):m(e,this.lookup.remapLut),s}_symbolize_stretch(e,t){const{pixelType:r,bandCount:s}=this.rasterInfo,o=this.rendererJSON,i=["u8","u16","s8","s16"].indexOf(r)>-1;let a,n;const{dra:l}=o,u=o.useGamma?o.gamma:null;if("histogramEqualization"===o.stretchType){const r=l?null:this.lookup.histogramLut,s=this.getStretchCutoff(o,e,t,!r),i=p(e,{...s,gamma:u});n=f(i,{lut:l?s.histogramLut:r,offset:0})}else if(i){var c;if(l){const s=this.getStretchCutoff(o,e,t);a=d({pixelType:r,...s,gamma:u})}else if(this._isLUTChanged()){if(!this.bind())return e;a=this.lookup?this.lookup.stretchLut:null}else a=this.lookup?this.lookup.stretchLut:null;if(!a)return e;s>1&&(null==t?void 0:t.length)===e.pixels.length&&(null==(c=a)?void 0:c.lut.length)===s&&(a={lut:t.map((e=>a.lut[e])),offset:a.offset}),n=f(e,a)}else{const r=this.getStretchCutoff(o,e,t);n=p(e,{...r,gamma:u})}if(o.colorRamp){if(this._isLUTChanged(!0)){if(!this.bind())return e}n=h(n,this.lookup.colormapLut)}return n}_symbolize_shadedRelief(e,r){var s,o;const i=this.rendererJSON,a={...i,...r},n=S(e,a);if(!i.colorRamp)return n;let l;if(this._isLUTChanged(!0)){if(!this.bind())return n;l=this.lookup?this.lookup.hsvMap:null}else l=this.lookup?this.lookup.hsvMap:null;if(!l)return n;const u=null!=(s=null==(o=t(this.rasterInfo.statistics))?void 0:o[0])?s:{min:0,max:8e3};return y(n,e,l,u),n}_updateUVRenderer(e){const{bandCount:t,attributeTable:r,statistics:s,pixelType:o}=this.rasterInfo,i=e.field1;if(!i)return!1;const a=["u8","s8"].indexOf(o)>-1&&s&&null!=s[0].min&&null!=s[0].max;if(!(O(this.rasterInfo,i)||1===t&&a))return!1;const n=[];if(r){const t=r.fields.filter((e=>"value"===e.name.toLowerCase()))[0];if(!t)return!1;r.features.forEach((r=>{var s;const o=e.uniqueValueInfos.filter((e=>String(e.value)===String(r.attributes[i])))[0],a=null==o||null==(s=o.symbol)?void 0:s.color;a&&n.push([r.attributes[t.name]].concat(a))}))}else{if("value"!==i.toLowerCase())return!1;e.uniqueValueInfos.forEach((e=>{var t;const r=null==e||null==(t=e.symbol)?void 0:t.color;r&&n.push([parseInt(""+e.value,10)].concat(r))}))}if(0===n.length)return!1;const l=g({colormap:n});return this.lookup={rendererJSON:e,colormapLut:l},this.canRenderInWebGL=!0,!0}_updateColormapRenderer(e){if(!R(this.rasterInfo))return!1;const t=e.colormapInfos.map((e=>[e.value].concat(e.color))).sort(((e,t)=>e[0]-t[0]));if(!t||0===t.length)return!1;const r=g({colormap:t});return this.lookup={rendererJSON:e,colormapLut:r},this.canRenderInWebGL=!0,!0}_updateShadedReliefRenderer(e){if(!L(this.rasterInfo))return!1;if(e.colorRamp){const t=l(e.colorRamp,256,!0),r=g({colormap:t}),s=[],o=r.indexedColormap;for(let e=0;e<o.length;e+=4){const t=n({r:o[e],g:o[e+1],b:o[e+2]});s.push([t.h/60,t.s/100,255*t.v/100])}this.lookup={rendererJSON:e,colormapLut:r,hsvMap:s}}else this.lookup=null;return this.canRenderInWebGL=!0,!0}_updateClassBreaksRenderer(e){const t=this.rasterInfo.pixelType,r=["u8","u16","s8","s16"].indexOf(t)>-1,s=e.classBreakInfos;if(null==s||!s.length)return!1;const o=s.sort(((e,t)=>e.classMaxValue-t.classMaxValue)),i=o[o.length-1];let a=e.minValue;if(!r){const t=[];for(let e=0;e<o.length;e++){var n;t.push({value:null!=(n=o[e].classMinValue)?n:a,mappedColor:o[e].symbol.color}),a=o[e].classMaxValue}return t.push({value:i.classMaxValue,mappedColor:i.symbol.color}),this.lookup={rendererJSON:e,remapLut:t},this.canRenderInWebGL=!1,!0}const l=[];a=Math.floor(e.minValue);for(let c=0;c<o.length;c++){const e=o[c];for(let t=a;t<e.classMaxValue;t++)l.push([t].concat(e.symbol.color));a=Math.ceil(e.classMaxValue)}i.classMaxValue===a&&l.push([i.classMaxValue].concat(i.symbol.color));const u=g({colormap:l,fillUnspecified:!1});return this.lookup={rendererJSON:e,colormapLut:u},this.canRenderInWebGL=!0,!0}_isHistogramRequired(e){return"percentClip"===e||"histogramEqualization"===e}_updateStretchRenderer(e){let{stretchType:r,dra:s}=e;if(!("none"===r||e.statistics||this.rasterInfo.statistics||s))return!1;const o=t(e.histograms||this.rasterInfo.histograms);!this._isHistogramRequired(e.stretchType)||null!=o&&o.length||s||(r="minMax");const{gamma:i,useGamma:a,colorRamp:n}=e,u=this.rasterInfo.pixelType,c=!s&&["u8","u16","s8","s16"].indexOf(u)>-1;if("histogramEqualization"===r){const t=o.map((e=>b(e)));this.lookup={rendererJSON:e,histogramLut:t}}else if(c){const t=this.getStretchCutoff(e),r=d({pixelType:u,...t,gamma:a?i:null});this.lookup={rendererJSON:e,stretchLut:r}}if(n){const t=l(n,256,!0);this.lookup||(this.lookup={rendererJSON:e}),this.lookup.colormapLut=g({colormap:t}),this.lookup.rendererJSON=e}return this.canRenderInWebGL=!0,!0}getStretchCutoff(e,r,s,o){var i;let a,n,l=e.stretchType;var u;if(e.dra)if("minMax"===l&&r.statistics)a=r.statistics.map((e=>[e.minValue,e.maxValue,0,0]));else{const e=x(r);a=e.statistics,n=e.histograms}else a=(null==(u=e.statistics)?void 0:u.length)>0?e.statistics:t(this.rasterInfo.statistics),n=e.histograms||t(this.rasterInfo.histograms);!this._isHistogramRequired(l)||null!=(i=n)&&i.length||(l="minMax");const c=a||n?(a||n).length:this.rasterInfo.bandCount,p=[],h=[];let m,f,d,g,S,y,k,C,O,L,R,_;switch(a&&!Array.isArray(a[0])&&(a=a.map((e=>[e.min,e.max,e.avg,e.stddev]))),l){case"none":{const e=v[this.rasterInfo.pixelType]||v.f32;for(C=0;C<c;C++)p[C]=e[0],h[C]=e[1]}break;case"minMax":for(C=0;C<c;C++)p[C]=a[C][0],h[C]=a[C][1];break;case"standardDeviation":for(C=0;C<c;C++)p[C]=a[C][2]-e.numberOfStandardDeviations*a[C][3],h[C]=a[C][2]+e.numberOfStandardDeviations*a[C][3],p[C]<a[C][0]&&(p[C]=a[C][0]),h[C]>a[C][1]&&(h[C]=a[C][1]);break;case"histogramEqualization":for(C=0;C<c;C++)p[C]=n[C].min,h[C]=n[C].max;break;case"percentClip":for(C=0;C<n.length;C++){for(m=n[C],S=new Uint32Array(m.size),g=m.counts,d=0,f=(m.max-m.min)/m.size,k=-.5===m.min&&1===f?.5:0,O=0;O<m.size;O++)d+=g[O],S[O]=d;for(y=e.minPercent*d/100,O=0;O<m.size;O++)if(S[O]>y){p[C]=m.min+f*(O+k);break}for(y=(1-e.maxPercent/100)*d,O=m.size-2;O>=0;O--)if(S[O]<y){h[C]=m.min+f*(O+2-k);break}}break;default:for(C=0;C<c;C++)p[C]=a[C][0],h[C]=a[C][1]}"histogramEqualization"===l?(R=n[0].size||256,L=0,o&&(_=n.map((e=>b(e))))):(R=e.max||255,L=e.min||0);const N={minCutOff:p,maxCutOff:h,outMax:R,outMin:L,histogramLut:_};return this.getSelectedBandCutoffs(N,s)}getSelectedBandCutoffs(e,t){if(null==t||0===t.length)return e;const r=Math.max.apply(null,t),{minCutOff:s,maxCutOff:o,outMin:i,outMax:a,histogramLut:n}=e;return s.length===t.length||s.length<=r?e:{minCutOff:t.map((e=>s[e])),maxCutOff:t.map((e=>o[e])),histogramLut:n?t.map((e=>n[e])):null,outMin:i,outMax:a}}generateStretchWebGLParams(e,t,r){var s;let o=null,i=null;const a=this.lookup&&this.lookup.colormapLut;t.colorRamp&&a&&(o=a.indexedColormap,i=a.offset),"histogramEqualization"===t.stretchType&&(t={...t,stretchType:"minMax"});const{gamma:n}=t,l=!!(t.useGamma&&n&&n.some((e=>1!==e))),{minCutOff:u,maxCutOff:c,outMin:p,outMax:h}=this.getStretchCutoff(t,e,r),m=null==(s=e)?void 0:s.getPlaneCount();2===m&&((e=e.clone()).statistics=[e.statistics[0]],e.pixels=[e.pixels[0]]);const f=Math.min(3,(null==r?void 0:r.length)||m||this.rasterInfo.bandCount),d=new Float32Array(f),g=o||l?1:255;let b;for(b=0;b<f;b++)d[b]=(h-p)/(c[b]-u[b])/g;const x=new Float32Array(f);if(l)for(b=0;b<f;b++)n[b]>1?n[b]>2?x[b]=6.5+(n[b]-2)**2.5:x[b]=6.5+100*(2-n[b])**4:x[b]=1;return{bandCount:f,outMin:p/g,outMax:h/g,minCutOff:u,maxCutOff:c,factor:d,useGamma:l,gamma:l?n:[1,1,1],gammaCorrection:l?x:[1,1,1],colormap:o,colormapOffset:i,type:"stretch"}}generateShadedReliefWebGLParams(e,r,s){var o,i,a;let n=null,l=null;const u=this.lookup&&this.lookup.colormapLut;e.colorRamp&&u&&(n=u.indexedColormap,l=u.offset);const c={...e,isGCS:r,resolution:s},p=k(c),h=null==(o=t(this.rasterInfo.statistics))?void 0:o[0];return{...p,minValue:null!=(i=h.min)?i:0,maxValue:null!=(a=h.max)?a:8e3,hillshadeType:"traditional"===e.hillshadeType?0:1,type:"hillshade",colormap:n,colormapOffset:l}}isValidPixelBlock(e){return!!(e&&e.pixels&&e.pixels.length>0&&0!==e.validPixelCount)}};e([o({json:{write:!0}})],_.prototype,"rendererJSON",void 0),e([o({type:u,json:{write:!0}})],_.prototype,"rasterInfo",void 0),e([o({json:{write:!0}})],_.prototype,"lookup",void 0),e([o()],_.prototype,"canRenderInWebGL",void 0),_=e([i("esri.renderers.support.RasterSymbolizer")],_);var N=_;export default N;
