/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../Logger.js";import t from"../Error.js";import{onAbortOrThrow as o,createAbortController as s,isPromiseLike as r,isAbortError as n}from"../promiseUtils.js";import{workerMessages as a}from"../../kernel.js";import{newJobId as i,receiveMessage as l,toInvokeError as d,postMessage as h,MessageType as c}from"./utils.js";import{createWorker as p}from"./workerFactory.js";const b=e.getLogger("esri.core.workers"),{ABORT:m,INVOKE:_,OPEN:u,OPENED:g,RESPONSE:j}=c;class f{constructor(e,t){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=t,e.addEventListener("message",this._onMessage.bind(this)),e.addEventListener("error",(e=>{e.preventDefault(),b.error(e)}))}static async create(e){const t=await p();return new f(t,e)}terminate(){this.worker.terminate()}async open(e,t={}){const{signal:s}=t,r=i();return new Promise(((t,n)=>{const a={resolve:t,reject:n,abortHandle:o(s,(()=>{this._outJobs.delete(r),this._post({type:m,jobId:r})}))};this._outJobs.set(r,a),this._post({type:u,jobId:r,modulePath:e})}))}_onMessage(e){const t=l(e);if(t)switch(t.type){case g:this._onOpenedMessage(t);break;case j:this._onResponseMessage(t);break;case m:this._onAbortMessage(t);break;case _:this._onInvokeMessage(t)}}_onAbortMessage(e){const t=this._inJobs,o=e.jobId,s=t.get(o);s&&(s.controller&&s.controller.abort(),t.delete(o))}_onInvokeMessage(e){const{methodName:t,jobId:o,data:i,abortable:l}=e,h=l?s():null,c=this._inJobs,p=a[t];let b;try{if("function"!=typeof p)throw new TypeError(`${t} is not a function`);b=p.call(null,i,{signal:h?h.signal:null})}catch(m){return void this._post({type:j,jobId:o,error:d(m)})}r(b)?(c.set(o,{controller:h,promise:b}),b.then((e=>{c.has(o)&&(c.delete(o),this._post({type:j,jobId:o},e))}),(e=>{c.has(o)&&(c.delete(o),e||(e={message:"Error encountered at method"+t}),n(e)||this._post({type:j,jobId:o,error:d(e||{message:`Error encountered at method ${t}`})}))}))):this._post({type:j,jobId:o},b)}_onOpenedMessage(e){var t;const{jobId:o,data:s}=e,r=this._outJobs.get(o);r&&(this._outJobs.delete(o),null==(t=r.abortHandle)||t.remove(),r.resolve(s))}_onResponseMessage(e){var o;const{jobId:s,error:r,data:n}=e,a=this._outJobs.get(s);a&&(this._outJobs.delete(s),null==(o=a.abortHandle)||o.remove(),r?a.reject(t.fromJSON(JSON.parse(r))):a.resolve(n))}_post(e,t,o){return h(this.worker,e,t,o)}}export default f;
