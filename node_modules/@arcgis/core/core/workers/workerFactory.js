/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../has.js";import{buildDate as r,commitHash as o}from"../../support/revision.js";import t from"../../config.js";import s from"../Logger.js";import{makeAbsolute as n}from"../urlUtils.js";import{getLocale as i}from"../../intl/locale.js";import{version as a}from"../../kernel.js";import{getAssetUrl as l}from"../../assets.js";import"../../intl.js";import{receiveMessage as f,MessageType as c}from"./utils.js";import d from"./loaderConfig.js";import u from"./WorkerFallback.js";const g=s.getLogger("esri.core.workers");e.add("esri-workers-arraybuffer-transfer",!e("safari")||e("safari")>=12);const{HANDSHAKE:m}=c,p='let globalId=0;const outgoing=new Map,configuration=JSON.parse("{CONFIGURATION}");self.esriConfig=configuration.esriConfig;const workerPath=self.esriConfig.workers.workerPath,HANDSHAKE=0,OPEN=1,OPENED=2,RESPONSE=3,INVOKE=4,ABORT=5;function createAbortError(){const e=new Error("Aborted");return e.name="AbortError",e}function receiveMessage(e){return e&&e.data?"string"==typeof e.data?JSON.parse(e.data):e.data:null}function invokeStaticMessage(e,o,r){const t=r&&r.signal,n=globalId++;return new Promise(((r,i)=>{if(t){if(t.aborted)return i(createAbortError());t.addEventListener("abort",(()=>{outgoing.get(n)&&(outgoing.delete(n),self.postMessage({type:5,jobId:n}),i(createAbortError()))}))}outgoing.set(n,{resolve:r,reject:i}),self.postMessage({type:4,jobId:n,methodName:e,abortable:null!=t,data:o})}))}let workerRevisionChecked=!1;function checkWorkerRevision(e){if(!workerRevisionChecked&&e.kernelInfo){workerRevisionChecked=!0;const{revision:o,buildDate:r,version:t}=configuration.kernelInfo,{revision:n,buildDate:i,version:s}=e.kernelInfo;o!==n&&console.warn(`[esri.core.workers] Version mismatch detected between ArcGIS API for JavaScript and assets:\nAPI version: ${t} [Date: ${r}, Revision: ${o.slice(0,8)}]\nAssets version: ${s} [Date: ${i}, Revision: ${n.slice(0,8)}]`)}}function messageHandler(e){const o=receiveMessage(e);if(!o)return;const r=o.jobId;switch(o.type){case 1:let e;function t(o){const t=e.connect(o);self.postMessage({type:2,jobId:r,data:t},[t])}"function"==typeof define&&define.amd?require([workerPath],(r=>{e=r.default||r,checkWorkerRevision(e),e.loadWorker(o.modulePath).then((e=>e||new Promise((e=>{require([o.modulePath],e)})))).then(t)})):"System"in self&&"function"==typeof System.import?System.import(workerPath).then((r=>(e=r.default,checkWorkerRevision(e),e.loadWorker(o.modulePath)))).then((e=>e||System.import(o.modulePath))).then(t):(self.RemoteClient||importScripts(workerPath),e=self.RemoteClient.default||self.RemoteClient,checkWorkerRevision(e),e.loadWorker(o.modulePath).then(t));break;case 3:if(outgoing.has(r)){const e=outgoing.get(r);outgoing.delete(r),o.error?e.reject(JSON.parse(o.error)):e.resolve(o.data)}}}self.dojoConfig=configuration.loaderConfig,esriConfig.workers.loaderUrl&&(self.importScripts(esriConfig.workers.loaderUrl),"function"==typeof require&&"function"==typeof require.config&&require.config(configuration.loaderConfig)),self.addEventListener("message",messageHandler),self.postMessage({type:0});';let k,h;const w="Failed to create Worker. Fallback to execute module in main thread";async function v(){if(!e("esri-workers"))return b(new u);if(!k&&!h)try{const e=p.replace('"{CONFIGURATION}"',`'${y()}'`);k=URL.createObjectURL(new Blob([e],{type:"text/javascript"}))}catch(o){h=o||{}}let r;if(k)try{r=new Worker(k,{name:"esri-worker-"+P++})}catch(o){g.warn(w,h),r=new u}else g.warn(w,h),r=new u;return b(r)}async function b(e){return new Promise((r=>{function o(s){const n=f(s);n&&n.type===m&&(e.removeEventListener("message",o),e.removeEventListener("error",t),r(e))}function t(r){r.preventDefault(),e.removeEventListener("message",o),e.removeEventListener("error",t),g.warn("Failed to create Worker. Fallback to execute module in main thread",r),(e=new u).addEventListener("message",o),e.addEventListener("error",t)}e.addEventListener("message",o),e.addEventListener("error",t)}))}function y(){let s;if(null!=t.default){const e={...t};delete e.default,s=JSON.parse(JSON.stringify(e))}else s=JSON.parse(JSON.stringify(t));s.assetsPath=n(s.assetsPath),s.request.interceptors=[],s.log.interceptors=[],s.locale=i(),s.has={"csp-restrictions":e("csp-restrictions"),"esri-2d-debug":!1,"esri-2d-update-debug":e("esri-2d-update-debug"),"esri-2d-query-centroid-enabled":e("esri-2d-query-centroid-enabled"),"featurelayer-pbf":e("featurelayer-pbf"),"featurelayer-snapshot-point-threshold":e("featurelayer-snapshot-point-threshold"),"esri-atomics":e("esri-atomics"),"esri-shared-array-buffer":e("esri-shared-array-buffer"),"esri-tiles-debug":e("esri-tiles-debug"),"esri-workers-arraybuffer-transfer":e("esri-workers-arraybuffer-transfer"),"host-webworker":1},s.workers.loaderUrl&&(s.workers.loaderUrl=n(s.workers.loaderUrl)),s.workers.workerPath?s.workers.workerPath=n(s.workers.workerPath):s.workers.workerPath=n(l("esri/core/workers/RemoteClient.js"));const f=t.workers.loaderConfig,c=d({baseUrl:null==f?void 0:f.baseUrl,locale:i(),has:{"csp-restrictions":e("csp-restrictions"),"dojo-test-sniff":0,"host-webworker":1,...null==f?void 0:f.has},map:{...null==f?void 0:f.map},paths:{...null==f?void 0:f.paths},packages:(null==f?void 0:f.packages)||[]}),u={version:a,buildDate:r,revision:o};return JSON.stringify({esriConfig:s,loaderConfig:c,kernelInfo:u})}let P=0;export{v as createWorker};
