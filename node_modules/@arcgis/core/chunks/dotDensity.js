/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../Color.js";import{createThemes as o,getThemesforBasemap as t,getRawSchemes as n,filterSchemesByName as a,filterSchemesByTag as r}from"../smartMapping/symbology/support/symbologyUtils.js";import{createColors as i}from"../smartMapping/renderers/support/utils.js";import s from"../smartMapping/symbology/support/colors.js";const m={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"}},c=["vibrant-rainbow","cat-dark","predominant-v2","predominant-v1","predominance-race","desert-blooms","tropical-bliss","under-the-sea","ocean-bay","cat-light","predominant-v4","predominance-money","predominant-v3","predominance-race-ethnic","pastel-chalk","predominance-rainbow","predominance-sequence"],l=o({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features using the density of randomly placed dots.",schemes:{default:{light:{primary:"predominant-v5",secondary:c,common:{outline:m.light,fillOpacity:.8}},dark:{primary:"predominant-v5",secondary:c,common:{outline:m.dark,fillOpacity:.8}}}}}}});function p(e){return t(l,e)}function u(e){const o="default",t=n({basemap:e.basemap,basemapTheme:e.basemapTheme,theme:l.get(o)});if(!t)return;const{schemesInfo:a,basemapId:r,basemapTheme:i}=t,s=a.common,m=e.numColors;return{primaryScheme:y(a.primary,s,m),secondarySchemes:a.secondary.map((e=>y(e,s,m))).filter(Boolean),basemapId:r,basemapTheme:i}}function d(e){return a(e.name,u(e))}function h(e){return r(e.includedTags,e.excludedTags,u(e))}function f(o){if(!o)return;const t={...o};return t.colors&&(t.colors=t.colors.map((o=>new e(o)))),t.outline&&(t.outline={color:t.outline.color&&new e(t.outline.color),width:t.outline.width}),t}function y(e,o,t){const n=s[e];if(!n)return;return g({name:n.name,tags:n.tags,colors:n[t]||i(n.stops,t),opacity:o.fillOpacity,outline:o.outline})}function g(o){return{name:o.name,tags:[...o.tags],colors:o.colors.map((o=>new e(o))),outline:{color:new e(o.outline.color),width:o.outline.width},opacity:o.opacity}}var b=Object.freeze({__proto__:null,getThemes:p,getSchemes:u,getSchemeByName:d,getSchemesByTag:h,cloneScheme:f});export{p as a,d as b,f as c,b as d,h as e,u as g};
