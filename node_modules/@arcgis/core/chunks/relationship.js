/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{clone as e}from"../core/lang.js";import o from"../Color.js";import{createThemes as r,getThemesforBasemap as a,getRawSchemes as n,filterSchemesByName as l,filterSchemesByTag as s}from"../smartMapping/symbology/support/symbologyUtils.js";import{toWorldScale as t,hasIdenticalColors as i}from"../smartMapping/symbology/support/utils.js";import p from"../smartMapping/symbology/support/colors.js";const u={light:{color:[153,153,153,.25],width:"1px"},dark:{color:[153,153,153,.25],width:"1px"},darker:{color:[26,26,26,.25],width:"1px"}},c={lightBasemaps:{primary:"relationship-blue-orange-brown",secondary:["relationship-brewer-yellow-blue-black","relationship-brewer-pink-blue-purple","relationship-purple-green-blue","relationship-blue-green-purple","relationship-blue-orange-green","relationship-mustard-blue-wine","relationship-pink-blue-purple","relationship-olive-blue-green","relationship-yellow-cyan-blue","relationship-blue-pink-purple","relationship-purple-green-wine","relationship-blue-peach-purple","relationship-mint-mustard-green","relationship-purple-mustard-darkpurple","relationship-blue-orange-purple","relationship-pink-periwinkle-violet","relationship-blue-tan-green","relationship-blue-red-pink","relationship-blue-green-brightgreen","relationship-blue-orange-lavender","relationship-pink-purple-peach","relationship-purple-mustard-eggshell","relationship-blue-brick-green","relationship-orange-purple-lavender","relationship-brown-purple-lilac","relationship-teal-yellow-lightteal"]},darkBasemaps:{primary:"relationship-blue-green-brightgreen",secondary:["relationship-blue-red-pink","relationship-blue-orange-lavender","relationship-pink-purple-peach","relationship-purple-mustard-eggshell","relationship-blue-brick-green","relationship-orange-purple-lavender","relationship-brown-purple-lilac","relationship-teal-yellow-lightteal","relationship-blue-orange-brown","relationship-brewer-yellow-blue-black","relationship-brewer-pink-blue-purple","relationship-purple-green-blue","relationship-blue-green-purple","relationship-blue-orange-green","relationship-mustard-blue-wine","relationship-pink-blue-purple","relationship-olive-blue-green","relationship-yellow-cyan-blue","relationship-blue-pink-purple","relationship-purple-green-wine","relationship-blue-peach-purple","relationship-mint-mustard-green","relationship-purple-mustard-darkpurple","relationship-blue-orange-purple","relationship-pink-periwinkle-violet","relationship-blue-tan-green"]}},m="#aaaaaa",h="8px",g="2px",d=r({themeDictionary:{default:{name:"default",label:"Default",description:"Default theme for visualizing features based on relationship between two attributes.",schemes:{point:{light:{common:{noDataColor:m,outline:u.light,size:h},primary:c.lightBasemaps.primary,secondary:c.lightBasemaps.secondary},dark:{common:{noDataColor:m,outline:u.darker,size:h},primary:c.darkBasemaps.primary,secondary:c.darkBasemaps.secondary}},polyline:{light:{common:{noDataColor:m,width:g},primary:c.lightBasemaps.primary,secondary:c.lightBasemaps.secondary},dark:{common:{noDataColor:m,width:g},primary:c.darkBasemaps.primary,secondary:c.darkBasemaps.secondary}},polygon:{light:{common:{noDataColor:m,outline:u.light,fillOpacity:.8},primary:c.lightBasemaps.primary,secondary:c.lightBasemaps.secondary},dark:{common:{noDataColor:m,outline:u.dark,fillOpacity:.8},primary:c.darkBasemaps.primary,secondary:c.darkBasemaps.secondary}}}}}});function y(e){return a(d,e)}function b(e){const o="default",r=n({basemap:e.basemap,geometryType:e.geometryType,basemapTheme:e.basemapTheme,theme:d.get(o)});if(!r)return;const{schemesInfo:a,basemapId:l,basemapTheme:s}=r,t={...e,basemap:l};return{primaryScheme:z(t,a.primary,a.common),secondarySchemes:a.secondary.map((e=>z(t,e,a.common))).filter(Boolean),basemapId:l,basemapTheme:s}}function f(e){return l(e.name,b(e))}function w(e){return s(e.includedTags,e.excludedTags,b(e))}function C(e){if(!e)return;const r={...e};return r.colorsForClassBreaks=r.colorsForClassBreaks.map((e=>({numClasses:e.numClasses,colors:e.colors.map((e=>e.map((e=>new o(e)))))}))),r.noDataColor&&(r.noDataColor=new o(r.noDataColor)),"outline"in r&&r.outline&&(r.outline={color:r.outline.color&&new o(r.outline.color),width:r.outline.width}),r}function k(o,r){o=e(o);let a=[];const n=(r||"HH").split(""),l=n[0],s=n[1];"L"===l&&o.reverse();const t="H"===s;return o.forEach((e=>{t&&e.reverse(),a=a.concat(e)})),a}function B(e,r,a){let n;return e.colorsForClassBreaks.some((e=>(e.numClasses===r&&(n=e.colors),!!n))),n=n.map((e=>e.map((e=>new o(e))))),n?k(n,a):null}function D(e,o){const r=o?e:C(e);return r.colorsForClassBreaks.forEach((e=>{const o=e.colors.reverse(),r=[];for(let a=0;a<e.numClasses;a++){const e=[];o.forEach((o=>{e.push(o[a])})),r.push(e)}e.colors=r})),r}function F(e){const o=e.theme||"default",r=e.geometryType,a=e.colors,n=e.numClasses,l=d.get(o);if(!l)return;const s=l.supportedBasemaps,t=[];return s.forEach((e=>{const l=b({theme:o,basemap:e,geometryType:r});if(l){let e=S(l.primaryScheme,a,n);e&&t.push(e),l.secondarySchemes.forEach((o=>{e=S(o,a,n),e&&t.push(e)}))}})),t}function v(e,o,r,a){let n;const l=B(e,r,a);if(l){1===i(o,l)&&(n=e)}return n}function T(e,o,r,a){let n,l=1;do{n=v(e,o,r,a),n||(e=D(e),l++)}while(!n&&l<=4);return n}function S(e,o,r){return T(e,o,r,"HH")||T(e,o,r,"HL")||T(e,o,r,"LH")||T(e,o,r,"LL")}function z(e,o,r){const a="mesh"!==e.geometryType&&e.worldScale?e.view:null,n=p[o],l=e.theme||"default";if(!n)return;const s=l+"/"+e.basemap+"/"+o,t=[];for(const i in n)if("stops"!==i&&"name"!==i&&"tags"!==i){const e=+i,o=n[i];t.push({numClasses:e,colors:o})}switch(e.geometryType){case"point":case"multipoint":{const e=r;return x({id:s,name:n.name,tags:n.tags,colorsForClassBreaks:t,noDataColor:e.noDataColor,opacity:1,outline:e.outline,size:e.size},a)}case"polyline":{const e=r;return H({id:s,name:n.name,tags:n.tags,colorsForClassBreaks:t,noDataColor:e.noDataColor,opacity:1,width:e.width},a)}case"polygon":{const e=r;return j({id:s,name:n.name,tags:n.tags,colorsForClassBreaks:t,noDataColor:e.noDataColor,opacity:e.fillOpacity,outline:e.outline})}case"mesh":{const e=r;return E({id:s,name:n.name,tags:n.tags,colorsForClassBreaks:t,noDataColor:e.noDataColor,opacity:e.fillOpacity})}}}function x(e,r){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:L(e.colorsForClassBreaks),noDataColor:new o(e.noDataColor),outline:{color:new o(e.outline.color),width:e.outline.width},size:r?t(e.size,r):e.size,opacity:e.opacity}}function H(e,r){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:L(e.colorsForClassBreaks),noDataColor:new o(e.noDataColor),opacity:e.opacity,width:r?t(e.width,r):e.width}}function j(e){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:L(e.colorsForClassBreaks),noDataColor:new o(e.noDataColor),outline:{color:new o(e.outline.color),width:e.outline.width},opacity:e.opacity}}function E(e){return{id:e.id,name:e.name,tags:[...e.tags],colorsForClassBreaks:L(e.colorsForClassBreaks),noDataColor:new o(e.noDataColor),opacity:e.opacity}}function L(e){return e.map((e=>({numClasses:e.numClasses,colors:e.colors.map((e=>e.map((e=>new o(e)))))})))}var O=Object.freeze({__proto__:null,getThemes:y,getSchemes:b,getSchemeByName:f,getSchemesByTag:w,cloneScheme:C,flatten2DArray:k,getColors:B,flipColors:D,getMatchingSchemes:F});export{b as a,y as b,C as c,f as d,w as e,k as f,B as g,D as h,F as i,O as r};
