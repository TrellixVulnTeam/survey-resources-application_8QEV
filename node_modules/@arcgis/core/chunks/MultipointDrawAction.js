/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"../core/has.js";import{abortMaybe as t,isSome as i,isNone as s}from"../core/maybe.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import"../core/accessorSupport/decorators/property.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import r from"../geometry/Point.js";import"../geometry.js";import n from"../core/Handles.js";import{ViewEventPriorities as a}from"../views/input/InputManager.js";import{createScreenPointFromEvent as d}from"../views/support/screenUtils.js";import p from"../views/draw/DrawAction.js";import{VertexRemoveEvent as h,VertexAddEvent as _,CursorUpdateEvent as c,DrawCompleteEvent as l}from"../views/draw/input/DrawEvents.js";import{KEYS as v}from"../views/draw/input/Keys.js";let u=class extends p{constructor(e){super(e),this._cursorScreenPoint=null,this._popVertexOnPointerMove=!1,this._addVertexOnPointerUp=!1,this._activePointerId=null,this._viewHandles=new n,this._undoRedoHandles=new n}initialize(){this._addViewHandles(),this._addUndoRedoHandles()}destroy(){this._removeViewHandles(),this._viewHandles.destroy(),this._removeUndoRedoHandles(),this._undoRedoHandles.destroy(),this.emit("destroy")}undo(){super.undo(),this.notifyChange("vertices")}redo(){super.redo(),this.notifyChange("vertices")}complete(){this._completeDrawing()}_addViewHandles(){this._removeViewHandles(),this._viewHandles.add([this.view.on("click",(e=>{e.stopPropagation()}),a.TOOL),this.view.on("pointer-down",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=t(this._snappingTask),this._activePointerId=e.pointerId,this._addVertexOnPointerUp=!0,this._cursorScreenPoint=d(e),"touch"===e.pointerType&&this._updateCursor(e.native))}),a.TOOL),this.view.on("pointer-move",(e=>{this._popVertexOnPointerMove&&(this.undo(),this._popVertexOnPointerMove=!1),this._snappingTask=t(this._snappingTask),this._cursorScreenPoint=d(e),"touch"!==e.pointerType&&this._updateCursor(e.native)}),a.TOOL),this.view.on("pointer-drag",(e=>{this._shouldHandlePointerEvent(e)&&(this._snappingTask=t(this._snappingTask),this._addVertexOnPointerUp=!1)}),a.TOOL),this.view.on("pointer-up",(e=>{if(this._shouldHandlePointerEvent(e))if(this._snappingTask=t(this._snappingTask),this._activePointerId=null,this._addVertexOnPointerUp)this._vertexAddHandler(e);else{const t="touch"===e.pointerType;this._updateCursor(e.native,t)}}),a.TOOL),this.view.on("drag",["Shift"],(e=>{e.stopPropagation()}),a.TOOL),this.view.on("double-click",(e=>{e.stopPropagation(),this._drawCompleteHandler(e)}),a.TOOL),this.view.on("double-click",["Control"],(e=>{e.stopPropagation(),this._drawCompleteHandler(e)}),a.TOOL),this.view.on("key-down",(e=>{const{key:i,repeat:s}=e;i===v.vertexAddKey&&!s&&this._cursorScreenPoint?(e.stopPropagation(),this._snappingTask=t(this._snappingTask),this._vertexAddHandler(e)):i===v.drawCompleteKey&&!s&&this._cursorScreenPoint&&this.vertices.length>2?(e.stopPropagation(),this._snappingTask=t(this._snappingTask),this._vertexAddHandler(e),this._drawCompleteHandler(e)):i!==v.undoKey||this.interactiveUndoDisabled||s?i!==v.redoKey||this.interactiveUndoDisabled||s?i!==v.panKey||s||e.stopPropagation():(e.stopPropagation(),this.redo()):(e.stopPropagation(),this.undo())}),a.TOOL),this.view.on("key-up",(e=>{e.key===v.panKey&&e.stopPropagation()}),a.TOOL)])}_addUndoRedoHandles(){this._removeUndoRedoHandles(),this._undoRedoHandles.add([this._editGeometry.on("vertex-remove",(e=>{if(this.notifyChange("vertices"),"undo"===e.operation){const t=this._nativeEventHistory.undoStack.pop();this._nativeEventHistory.redoStack.push(t);const s=[...this._committedVertices];i(this._stagedVertex)&&s.push(this._coordinateHelper.pointToArray(this._stagedVertex)),this.emit("undo",new h(this.view,t,e.vertices[0].index,s))}})),this._editGeometry.on("vertex-add",(e=>{if(this.notifyChange("vertices"),"apply"===e.operation){const e=this._nativeEventHistory.undoStack[this._nativeEventHistory.undoStack.length],t=this._committedVertices.length-1,i=new _(this.view,e,t,this.vertices);this.emit("vertex-add",i),i.defaultPrevented&&(this._popVertexOnPointerMove=!0)}else if("redo"===e.operation){const t=this._nativeEventHistory.redoStack.pop();this._nativeEventHistory.undoStack.push(t);const s=[...this._committedVertices];i(this._stagedVertex)&&s.push(this._coordinateHelper.pointToArray(this._stagedVertex)),this.emit("redo",new _(this.view,t,e.vertices[0].index,s))}}))])}_removeViewHandles(){this._viewHandles.removeAll()}_removeUndoRedoHandles(){this._undoRedoHandles.removeAll()}_addVertex(e,t){const i=this._coordinateHelper.fromArray(e);if(this._isDuplicateOfLastVertex(i))return;this._lastVertexUnsnapped=this._stagedVertexUnsnapped,this._popCursorVertex(),this._editGeometry.appendVertex(i);const s=t||new Event("placeholder");this._nativeEventHistory.undoStack.push(s)}_updateCursor(e,t=!1){if(this._popCursorVertex(),!this._cursorScreenPoint)return;const s=this.getCoordsAndPointFromScreenPoint(this._cursorScreenPoint);if(i(s)&&!t){this._pushCursorVertex(s.vertex);const t=()=>new c(this.view,e,this._activeComponent.vertices.length,this.vertices,i(this._stagedVertex)?new r(this._stagedVertex):null);this.emit("cursor-update",t()),i(this._snappingTask)&&this._snappingTask.promise.then((e=>{e.valid&&this.emit("cursor-update",t())}),(()=>{}))}}_completeDrawing(e){if(this._activePointerId=null,this._popCursorVertex(),this._snappingTask=t(this._snappingTask),i(this._snappingManager)&&this._snappingManager.doneSnapping(),this.vertices.length<2)return;const s=new l(e,this.vertices);this.emit("draw-complete",s),s.defaultPrevented||this._removeViewHandles()}_shouldHandlePointerEvent(e){return m(e)&&(s(this._activePointerId)||this._activePointerId===e.pointerId)}_vertexAddHandler(e){const t=i(this._stagedVertex)?this._coordinateHelper.pointToArray(this._stagedVertex):this.getCoordsFromScreenPoint(this._cursorScreenPoint);i(t)&&this._addVertex(t,e.native)}_drawCompleteHandler(e){this._completeDrawing(e.native)}};function m(e){return"mouse"!==e.pointerType||0===e.button}u=e([o("esri.views.draw.MultipointDrawAction")],u);var g=Object.freeze({__proto__:null,get MultipointDrawAction(){return u}});export{u as M,g as a};
