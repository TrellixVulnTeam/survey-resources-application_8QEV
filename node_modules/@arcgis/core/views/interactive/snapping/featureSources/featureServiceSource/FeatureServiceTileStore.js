/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import"../../../../../core/has.js";import{isNone as t,isSome as s}from"../../../../../core/maybe.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import{property as i}from"../../../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../../../core/accessorSupport/decorators/subclass.js";import"../../../../../core/urlUtils.js";import"../../../../../core/uuid.js";import"../../../../../portal/support/resourceExtension.js";import o from"../../../../../core/Accessor.js";import{create as n,intersects as l,fromExtent as c,area as a}from"../../../../../geometry/support/aaBoundingRect.js";import{getBoundsOptimizedGeometry as h}from"../../../../../layers/graphics/featureConversionUtils.js";import{executeQueryForCount as u}from"../../../../../rest/query/operations/query.js";import{estimateAttributesObjectSize as d,estimateFixedArraySize as f}from"../../../../../core/byteSizeEstimations.js";import{BoundsStore as p}from"../../../../../layers/graphics/data/BoundsStore.js";import{FeatureServiceTileCache as m}from"./FeatureServiceTileCache.js";let g=class extends o{constructor(e){super(e),this.tileInfo=null,this.extent=null,this.maximumByteSize=10485760,this.tileBounds=new p,this.tiles=new m,this.refCounts=new Map,this.tileFeatureCounts=new Map,this.tmpBoundingRect=n()}add(e,t){const s=[];for(const i of t)0===this.referenceFeature(i.objectId)&&s.push(i);this.addTileStorage(e,new Set(t.map((({objectId:e})=>e))),this.byteSizeOfFeatures(t)),this.featureStore.addMany(s),this.tiles.applyByteSizeLimit(this.maximumByteSize,(e=>this.removeTileStorage(e)))}destroy(){this.clear(),this.tileFeatureCounts.clear()}clear(){this.featureStore.clear(),this.tileBounds.clear(),this.tiles.clear(),this.refCounts.clear()}refresh(){this.clear(),this.tileFeatureCounts.clear()}processEdits(e,t,s){return this.processEditsDelete(e.deletedFeatures.concat(e.updatedFeatures)),this.processEditsRefetch(e.addedFeatures.concat(e.updatedFeatures),t,s)}addTileStorage(e,t,s){this.tiles.set(e.id,new y(e,t,s)),this.tileBounds.set(e.id,e.extent),this.tileFeatureCounts.set(e.id,t.size)}remove({id:e}){const t=this.tiles.get(e);t&&this.removeTileStorage(t)}removeTileStorage(e){const t=[];for(const i of e.objectIds)1===this.unreferenceFeature(i)&&t.push(i);this.featureStore.removeManyById(t);const s=e.data.id;this.tiles.delete(s),this.tileBounds.delete(s)}processEditsDelete(e){this.featureStore.removeManyById(e);for(const[,t]of this.tiles){for(const s of e)t.objectIds.delete(s);this.tileFeatureCounts.set(t.data.id,t.objectIds.size)}for(const t of e)this.refCounts.delete(t)}async processEditsRefetch(e,t,s){const i=(await t(e,s)).features,{hasZ:r,hasM:o}=this.featureStore;for(const n of i){const e=h(this.tmpBoundingRect,n.geometry,r,o);this.tileBounds.forEachInBounds(e,(e=>{const t=this.tiles.get(e);this.featureStore.add(n),t.objectIds.has(n.objectId)||(t.objectIds.add(n.objectId),this.referenceFeature(n.objectId),this.tileFeatureCounts.set(t.data.id,t.objectIds.size))}))}}process(e,i=(()=>!0)){if(t(this.tileInfo)||!e.extent||s(this.extent)&&!l(c(this.extent,this.tmpBoundingRect),e.extent))return new S(e);if(this.tiles.has(e.id))return new S(e);const r=this.createTileTree(e,this.tileInfo);return this.simplify(r,i,null,0,1),this.collectMissingTiles(e,r,this.tileInfo)}get debugInfo(){return Array.from(this.tiles.values()).map((({data:e})=>({data:e,featureCount:this.tileFeatureCounts.get(e.id)||0})))}getFeatureCount(e){const t=this.tileFeatureCounts.get(e.id);return null!=t?t:0}async fetchCount(e,t,s,i){const r=this.tileFeatureCounts.get(e.id);if(null!=r)return r;const o=await u(t,s,i);return this.tileFeatureCounts.set(e.id,o.data.count),o.data.count}createTileTree(e,t){const s=new v(e.level,e.row,e.col);return t.updateTileInfo(s,1),this.tileBounds.forEachInBounds(e.extent,(i=>{const r=this.tiles.get(i).data;this.tilesAreRelated(e,r)&&this.populateChildren(s,r,t,this.tileFeatureCounts.get(r.id)||0)})),s}tilesAreRelated(e,t){if(!e||!t)return!1;if(e.level===t.level)return e.row===t.row&&e.col===t.col;const s=e.level<t.level,i=s?e:t,r=s?t:e,o=1<<r.level-i.level;return Math.floor(r.row/o)===i.row&&Math.floor(r.col/o)===i.col}populateChildren(e,t,i,r){const o=t.level-e.level-1;if(o<0)return void(e.isLeaf=!0);const n=t.row>>o,l=t.col>>o,c=e.row<<1,a=l-(e.col<<1)+(n-c<<1),h=e.children[a];if(s(h))this.populateChildren(h,t,i,r);else{const s=new v(e.level+1,n,l);i.updateTileInfo(s,1),e.children[a]=s,this.populateChildren(s,t,i,r)}}simplify(e,t,i,r,o){const n=o*o;if(e.isLeaf)return t(this.getFeatureCount(e),o)?0:(this.remove(e),s(i)&&(i.children[r]=null),n);const l=o/2,c=l*l;let a=0;for(let h=0;h<e.children.length;h++){const i=e.children[h];a+=s(i)?this.simplify(i,t,e,h,l):c}return 0===a?this.mergeChildren(e):1-a/n<j&&(this.purge(e),s(i)&&(i.children[r]=null),a=n),a}mergeChildren(e){const t=new Set;let s=0;this.forEachLeaf(e,(e=>{const i=this.tiles.get(e.id);if(i){s+=i.byteSize;for(const e of i.objectIds)t.has(e)||(t.add(e),this.referenceFeature(e));this.remove(e)}})),this.addTileStorage(e,t,s),e.isLeaf=!0,e.children[0]=e.children[1]=e.children[2]=e.children[3]=null,this.tileFeatureCounts.set(e.id,t.size)}forEachLeaf(e,s){for(const i of e.children)t(i)||(i.isLeaf?s(i):this.forEachLeaf(i,s))}purge(e){if(!t(e))if(e.isLeaf)this.remove(e);else for(let t=0;t<e.children.length;t++){const s=e.children[t];this.purge(s),e.children[t]=null}}collectMissingTiles(e,t,s){const i=new C(s,e,this.extent);return this.collectMissingTilesRecurse(t,i,1),i.info}collectMissingTilesRecurse(e,s,i){if(e.isLeaf)return;if(!e.hasChildren)return void s.addMissing(e.level,e.row,e.col,i);const r=i/2;for(let o=0;o<e.children.length;o++){const i=e.children[o];t(i)?s.addMissing(e.level+1,(e.row<<1)+((2&o)>>1),(e.col<<1)+(1&o),r):this.collectMissingTilesRecurse(i,s,r)}}referenceFeature(e){const t=(this.refCounts.get(e)||0)+1;return this.refCounts.set(e,t),1===t?0:2}unreferenceFeature(e){const t=(this.refCounts.get(e)||0)-1;return 0===t?(this.refCounts.delete(e),1):(t>0&&this.refCounts.set(e,t),2)}byteSizeOfFeatures(e){let t=0;for(const s of e)t+=this.byteSizeOfFeature(s);return t}byteSizeOfFeature(e){return 32+this.byteSizeOfGeometry(e.geometry)+d(e.attributes)}byteSizeOfGeometry(e){if(!e)return 0;const t=f(e.lengths,4);return 32+f(e.coords,8)+t}get test(){return{tiles:Array.from(this.tiles.values()).map((e=>`${e.data.id}:[${Array.from(e.objectIds)}]`)),featureReferences:Array.from(this.refCounts.keys()).map((e=>`${e}:${this.refCounts.get(e)}`))}}};e([i({constructOnly:!0})],g.prototype,"featureStore",void 0),e([i()],g.prototype,"tileInfo",void 0),e([i()],g.prototype,"extent",void 0),e([i()],g.prototype,"maximumByteSize",void 0),g=e([r("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTileStore")],g);class y{constructor(e,t,s){this.data=e,this.objectIds=t,this.byteSize=s}}class v{constructor(e,t,s){this.level=e,this.row=t,this.col=s,this.isLeaf=!1,this.extent=null,this.children=[null,null,null,null]}get hasChildren(){return!this.isLeaf&&(s(this.children[0])||s(this.children[1])||s(this.children[2])||s(this.children[3]))}}class S{constructor(e,t=[]){this.missingTiles=t,this.fullArea=0,this.coveredArea=0,this.fullArea=a(e.extent),this.coveredArea=this.fullArea}prepend(e){this.missingTiles=e.missingTiles.concat(this.missingTiles),this.coveredArea+=e.coveredArea,this.fullArea+=e.fullArea}}class C{constructor(e,t,i){this.tileInfo=e,this.extent=null,this.info=new S(t),s(i)&&(this.extent=c(i))}addMissing(e,t,i,r){const o={id:null,level:e,row:t,col:i};this.tileInfo.updateTileInfo(o,1),!s(o.extent)||s(this.extent)&&!l(this.extent,o.extent)||(this.info.missingTiles.push({data:o,resolution:r}),this.info.coveredArea-=a(o.extent))}}const j=.18751;export{g as FeatureServiceTileStore,S as ProcessResult};
