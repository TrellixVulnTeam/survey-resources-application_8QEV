/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{isSome as t,isNone as r}from"../../../../core/maybe.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{removeUnordered as i}from"../../../../core/arrayUtils.js";import{eachAlwaysValues as a,createTask as n}from"../../../../core/promiseUtils.js";import p from"../../../../core/Accessor.js";import d from"../../../../geometry/Point.js";import c from"../../../../geometry/Polygon.js";import{featureGeometryTypeKebabDictionary as l}from"../../../../geometry/support/typeUtils.js";import{initializeProjection as u,canProjectWithoutEngine as h,project as m}from"../../../../geometry/projection.js";import y from"../../../../layers/graphics/OptimizedFeature.js";import{convertFromGeometry as g}from"../../../../layers/graphics/featureConversionUtils.js";import{HandleOwnerMixin as f}from"../../../../core/HandleOwner.js";import{sortCandidatesInPlace as S}from"../snappingUtils.js";import{normalizeCentralMeridianSync as j}from"../../../../geometry/support/normalizeUtilsSync.js";import w from"../../../../layers/graphics/data/FeatureStore.js";import v from"../../../../layers/graphics/data/QueryEngine.js";import{convertSnappingCandidate as k}from"./queryEngineUtils.js";let O=class extends(f(p)){constructor(e){super(e),this.availability=1,this.sources={multipoint:null,point:null,polygon:null,polyline:null},this.loadedWkids=new Set,this.loadedWkts=new Set,this.pendingAdds=[]}get updating(){return this.updatingHandles.updating}get layer(){return this.layerSource.layer}destroy(){const e=this.pendingAdds;this.pendingAdds.length=0;for(const t of e)t.task.abort();this.mapSources((e=>this.destroySource(e)))}initialize(){this.handles.add([this.layer.on("graphic-update",(e=>this.onGraphicUpdate(e))),this.updatingHandles.addOnCollectionChange(this.layer.graphics,(e=>this.onGraphicsChanged(e)))]),this.addMany(this.layer.graphics.toArray())}async fetchCandidates(e,r){const s=(await a(this.mapSources((s=>s.queryEngine.executeQueryForSnapping({point:e.coordinateHelper.toPoint(e.point,new d).toJSON(),distance:e.distance,types:e.types,query:t(e.filter)?e.filter.createQuery().toJSON():{where:"1=1"}},r).then((({candidates:e})=>e)))))).flat().map((t=>k(t,e.coordinateHelper)));return S(e.point,s),{candidates:s}}refresh(){}onGraphicUpdate(e){switch(e.property){case"geometry":case"visible":this.remove(e.graphic),this.addMany([e.graphic])}}onGraphicsChanged(e){for(const t of e.removed)this.remove(t);this.addMany(e.added)}addMany(e){const t=[],s=new Map;for(const o of e)r(o.geometry)||(this.needsInitializeProjection(o.geometry.spatialReference)?(t.push(o.geometry.spatialReference),s.set(o.uid,o)):this.add(o));this.createPendingAdd(t,s)}createPendingAdd(e,t){if(!e.length)return;const r=n((async r=>{await u(e.map((e=>({source:e,dest:this.spatialReference}))),{signal:r}),this.markLoadedSpatialReferences(e);for(const[,e]of t)this.add(e)}));this.updatingHandles.addPromise(r.promise);const s={task:r,graphics:t},o=()=>i(this.pendingAdds,s);r.promise.then(o,o),this.pendingAdds.push(s)}markLoadedSpatialReferences(e){for(const t of e)null!=t.wkid&&this.loadedWkids.add(t.wkid),null!=t.wkt&&this.loadedWkts.add(t.wkt)}add(e){if(r(e.geometry)||!e.visible)return;let s=e.geometry;if("mesh"===s.type)return;"extent"===s.type&&(s=c.fromExtent(s));const o=this.ensureSource(s.type);if(r(o))return;const i=this.createOptimizedFeature(e.uid,s);t(i)&&o.featureStore.add(i)}needsInitializeProjection(e){return(null==e.wkid||!this.loadedWkids.has(e.wkid))&&((null==e.wkt||!this.loadedWkts.has(e.wkt))&&!h(e,this.spatialReference))}createOptimizedFeature(e,t){const r=m(j(t),this.spatialReference);return r?new y(g(r,!1,!1),{[b]:e},null,e):null}ensureSource(e){const r=this.sources[e];if(t(r))return r;const s=this.createSource(e);return this.sources[e]=s,s}createSource(e){const r=l.toJSON(e),s=new w({geometryType:r,hasZ:!1,hasM:!1});return{featureStore:s,queryEngine:new v({featureStore:s,fields:[{name:b,type:"esriFieldTypeOID",alias:b}],geometryType:r,hasM:!1,hasZ:!1,objectIdField:b,spatialReference:this.spatialReference,scheduler:t(this.view)&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:e}}remove(e){this.mapSources((t=>this.removeFromSource(t,e)));for(const t of this.pendingAdds)t.graphics.delete(e.uid),0===t.graphics.size&&t.task.abort()}removeFromSource(e,t){const r=t.uid;e.featureStore.has(r)&&e.featureStore.removeById(t.uid)}destroySource(e){e.queryEngine.destroy(),this.sources[e.type]=null}mapSources(e){const{point:r,polygon:s,polyline:o,multipoint:i}=this.sources,a=[];return t(r)&&a.push(e(r)),t(s)&&a.push(e(s)),t(o)&&a.push(e(o)),t(i)&&a.push(e(i)),a}};e([s({constructOnly:!0})],O.prototype,"spatialReference",void 0),e([s({constructOnly:!0})],O.prototype,"layerSource",void 0),e([s({constructOnly:!0})],O.prototype,"view",void 0),e([s({readOnly:!0})],O.prototype,"updating",null),e([s({readOnly:!0})],O.prototype,"availability",void 0),O=e([o("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],O);const b="OBJECTID";export{O as GraphicsSnappingSource};
