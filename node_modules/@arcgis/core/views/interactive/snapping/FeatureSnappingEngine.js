/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as r,isNone as t}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{eachAlwaysValues as i,throwIfAborted as a}from"../../../core/promiseUtils.js";import{c as n}from"../../../chunks/vec3f64.js";import c from"../../../core/Handles.js";import{init as u}from"../../../core/watchUtils.js";import{HandleOwner as l}from"../../../core/HandleOwner.js";import{someMap as p}from"../../../core/MapUtils.js";import{sortCandidatesInPlace as d,anyMapPointToRender as h,anyMapPointToScreenPoint as S}from"./snappingUtils.js";import{FeatureSnappingCandidate as f}from"./candidates/FeatureSnappingCandidate.js";let y=class extends l{constructor(e){super(e),this.sourceModules={featureService:{module:null,loader:null},featureCollection:{module:null,loader:null},graphics:{module:null,loader:null}}}get updating(){return p(this.snappingSources,(({snappingSource:e})=>e.updating))||this.updatingHandles.updating}get snappingSources(){var e;const t=this._get("snappingSources")||new Map,o=new Map;if(null!=(e=this.options)&&e.featureSources)for(const s of this.options.featureSources.items){const e=s.layer.uid,i=t.get(e);if(i){t.delete(e),o.set(e,i);continue}if(!s.layer.loaded){this.updatingHandles.addPromise(s.layer.load());continue}const a=this.createSourceInfo(s);r(a)&&o.set(e,a)}for(const[,r]of t)r.destroy();return o}initialize(){var e;(this.updatingHandles.add(this,"snappingSources",(()=>{this.notifyChange("updating")}),1),r(this.view))&&this.handles.add([null==(e=this.view.refreshManager)?void 0:e.on("refresh",(e=>{"interval"===e.trigger&&this.refreshSourceOfLayer(e.layerView.layer)})),this.view.on("layerview-create",(e=>this.updateLayerView(e.layer,e.layerView))),this.view.on("layerview-destroy",(e=>this.updateLayerView(e.layer,null)))])}refreshSourceOfLayer(e){for(const[,{snappingSource:r}]of this.snappingSources)r.layerSource.layer===e&&r.refresh()}updateLayerView(e,r){for(const[,t]of this.snappingSources)t.snappingSource.layerSource.layer===e&&(t.layerView=r)}destroy(){this._set("options",null);for(const[,e]of this.snappingSources)e.destroy()}async fetchCandidates(e,t,o){if(!this.options.effectiveFeatureEnabled)return[];const s=[],n={distance:this.computeScreeenSizeDistanceParameters(e,t),point:e,coordinateHelper:t.coordinateHelper,types:this.types,filter:null};for(const[,{snappingSource:i,layerView:a}]of this.snappingSources)!i.layerSource.enabled||r(a)&&a.suspended||s.push(i.fetchCandidates(n,o).then((({candidates:e})=>e.filter((e=>!this.candidateIsExcluded(i,e,t.excludeFeature))))));const c=(await i(s)).flat();return a(o),d(e,c),c}computeScreeenSizeDistanceParameters(e,r){const o=this.options.distance*("touch"===r.pointer?this.options.touchSensitivityMultiplier:1);return t(this.view)?o:"2d"===this.view.type?o*this.view.resolution:this.computeScreeenSizeDistanceParameters3D(e,o,this.view,r)}computeScreeenSizeDistanceParameters3D(e,r,t,o){const{coordinateHelper:s,elevationInfo:i}=o,a=t.state.camera.computeScreenPixelSizeAt(h(e,s,i,t,m))*t.renderCoordsHelper.unitInMeters/t.mapCoordsHelper.unitInMeters,n=r*a;return{x:n/this.computeScreenMagnitudeOfMapOffset(e,a,0,t,o),y:n/this.computeScreenMagnitudeOfMapOffset(e,0,a,t,o)}}computeScreenMagnitudeOfMapOffset(e,r,t,o,{coordinateHelper:s,elevationInfo:i}){const a=s.clone(e);a[0]+=r,a[1]+=t;const n=S(e,s,i,o),c=S(a,s,i,o),u=c.x-n.x,l=c.y-n.y;return Math.sqrt(u*u+l*l)}get types(){return 3}candidateIsExcluded(e,r,o){if(t(o))return!1;const s=this.getCandidateObjectId(r);if(t(s))return!1;const i=e.layerSource.layer;return"graphics"===i.type?o.uid===s:o.sourceLayer===i&&(!(!o.attributes||!("objectIdField"in i))&&o.attributes[i.objectIdField]===s)}getCandidateObjectId(e){return e instanceof f?e.objectId:null}createSourceInfo(e){const o=this.createFeatureSnappingSourceType(e);if(t(o))return null;if("loading"in o)return this.updatingHandles.addPromise(o.loading.then((()=>{this.destroyed||this.notifyChange("snappingSources")}))),null;const s=r(this.view)?this.view.allLayerViews.find((r=>r.layer===e.layer)):null;return new g(o.source,s)}createFeatureSnappingSourceType(e){switch(e.layer.type){case"feature":case"geojson":case"csv":return this.createFeatureSnappingSourceFeatureLayer(e);case"graphics":return this.createFeatureSnappingSourceGraphicsLayer(e)}return null}createFeatureSnappingSourceFeatureLayer(e){switch(e.layer.source.type){case"feature-layer":{const t=this.getSourceModule("featureService");return r(t.module)?{source:new t.module.FeatureServiceSnappingSource({spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}case"memory":case"csv":case"geojson":{if("mesh"===e.layer.geometryType)return null;const t=this.getSourceModule("featureCollection");return r(t.module)?{source:new t.module.FeatureCollectionSnappingSource({layerSource:e})}:{loading:t.loader}}}return null}createFeatureSnappingSourceGraphicsLayer(e){const t=this.getSourceModule("graphics");return r(t.module)?{source:new t.module.GraphicsSnappingSource({spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}getSourceModule(e){const r=this.sourceModules[e];if(t(r.loader)){const t=this.loadSourceModule(e).then((e=>{r.module=e}));return r.loader=t,{module:r.module,loader:t}}return{module:r.module,loader:r.loader}}loadSourceModule(e){switch(e){case"featureService":return this.updatingHandles.addPromise(import("./featureSources/FeatureServiceSnappingSource.js"));case"featureCollection":return this.updatingHandles.addPromise(import("./featureSources/FeatureCollectionSnappingSource.js"));case"graphics":return this.updatingHandles.addPromise(import("./featureSources/GraphicsSnappingSource.js"))}return null}};e([o({constructOnly:!0})],y.prototype,"spatialReference",void 0),e([o({constructOnly:!0})],y.prototype,"view",void 0),e([o()],y.prototype,"options",void 0),e([o({readOnly:!0})],y.prototype,"updating",null),e([o({readOnly:!0})],y.prototype,"snappingSources",null),y=e([s("esri.views.interactive.snapping.FeatureSnappingEngine")],y);class g{constructor(e,r){this.snappingSource=e,this.layerView=r,this.handles=new c;const t=this.snappingSource.layerSource.layer;if("refresh"in t){const r=t;this.handles.add(r.on("refresh",(()=>e.refresh())))}this.handles.add([u(e,"updating",(r=>e.layerSource.updating=r),!0),u(e,"availability",(r=>e.layerSource.availability=r),!0)])}destroy(){this.snappingSource.destroy(),this.handles.destroy()}}const m=n();export{y as FeatureSnappingEngine};
