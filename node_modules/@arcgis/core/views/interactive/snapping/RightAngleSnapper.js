/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{unwrap as t}from"../../../core/maybe.js";import{sign as e}from"../../../core/mathUtils.js";import{a as i,f as r}from"../../../chunks/vec2f64.js";import{d as o,g as s,q as n,p}from"../../../chunks/vec2.js";import{anyMapPointToScreenPoint as h,squareDistance as a}from"./snappingUtils.js";import{SnappingAlgorithm as c}from"./SnappingAlgorithm.js";import{RayConstraint as g}from"./SnappingConstraint.js";import{RightAngleSnappingCandidate as f}from"./candidates/RightAngleSnappingCandidate.js";class l extends c{constructor(){super(...arguments),this._tmp=i()}snapNewVertex(t,e){const i=e.geometry.editGeometry.components[0],r=i.vertices.length,o=[];if(r<2)return o;const s=h(t,e.coordinateHelper,e.elevationInfo,this.view),n=i.vertices[r-1];this._checkForSnappingCandidate(o,n.left,n.pos,t,n.left.left.pos,n.pos,e,t,s);const p=i.vertices[0];return this._checkForSnappingCandidate(o,p.right,p.pos,t,p.right.right.pos,p.pos,e,t,s),o}snapExistingVertex(e,i){const r=[],o=t(i.vertexHandle),s=o.component,n=s.vertices.length;if(n<3)return r;const p=h(e,i.coordinateHelper,i.elevationInfo,this.view),a=o.left,c=o.right,g=s.vertices[0],f=s.vertices[n-1];if(!a)return this._checkForSnappingCandidate(r,g.right.right.right,g.right.right.pos,e,g.right.right.right.right.pos,g.right.right.pos,i,e,p),r;if(!c)return this._checkForSnappingCandidate(r,f.left.left.left,f.left.left.pos,e,f.left.left.left.left.pos,f.left.left.pos,i,e,p),r;if(a&&a.left.left){const t=a.left.left;this._checkForSnappingCandidate(r,t,a.left.pos,e,t.left.pos,a.left.pos,i,e,p)}if(c&&c.right.right){const t=c.right.right;this._checkForSnappingCandidate(r,t,c.right.pos,e,t.right.pos,c.right.pos,i,e,p)}return r}_checkForSnappingCandidate(t,c,l,d,m,v,u,_,S){if(!this.edgeExceedsShortLineThreshold(c,u))return;o(this._tmp,c.right.pos,c.left.pos);const x=r(this._tmp[1],-this._tmp[0]),k=s(x,o(this._tmp,d,l))/n(x),C=u.coordinateHelper,j=C.fromXYZ(p(i(),v,x,k),C.getZ(_,0));a(S,h(j,C,u.elevationInfo,this.view))<this.squaredProximityTreshold(u.pointer)&&t.push(new f({coordinateHelper:C,targetPoint:j,constraint:new g(C,v,p(C.createNew(),v,x,e(k))),previousVertex:m,centerVertex:v}))}}export{l as RightAngleSnapper};
