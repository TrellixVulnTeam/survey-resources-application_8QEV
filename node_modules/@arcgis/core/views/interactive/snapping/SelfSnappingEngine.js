/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as s}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import r from"../../../core/Accessor.js";import e from"../../../core/Collection.js";import{sortCandidatesInPlace as i}from"./snappingUtils.js";import{LineSnapper as p}from"./LineSnapper.js";import{ParallelLineSnapper as n}from"./ParallelLineSnapper.js";import{RightAngleSnapper as c}from"./RightAngleSnapper.js";import{RightAngleTriangleSnapper as a}from"./RightAngleTriangleSnapper.js";let m=class extends r{constructor(s){super(s),this.updating=!1,this._snappers=new e}initialize(){this._snappers.push(new n(this.view,this.options),new p(this.view,this.options),new c(this.view,this.options),new a(this.view,this.options))}set options(s){this._set("options",s);for(const o of this._snappers)o.options=s}async fetchCandidates(s,o){if(!this.options.effectiveSelfEnabled)return[];const t=[];for(const r of this._snappers.items)t.push(...r.snap(s,o));return i(s,t),t}};s([o({readOnly:!0})],m.prototype,"updating",void 0),s([o({constructOnly:!0})],m.prototype,"view",void 0),s([o()],m.prototype,"options",null),m=s([t("esri.views.interactive.snapping.SelfSnappingEngine")],m);export{m as SelfSnappingEngine};
