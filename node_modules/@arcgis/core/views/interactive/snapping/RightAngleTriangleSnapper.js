/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{unwrap as e}from"../../../core/maybe.js";import{a as t}from"../../../chunks/vec2f64.js";import{m as o,i as r}from"../../../chunks/vec2.js";import{anyMapPointToScreenPoint as s,squareDistance as i}from"./snappingUtils.js";import{SnappingAlgorithm as n}from"./SnappingAlgorithm.js";import{projectPointToCircle as p}from"../../support/geometry2dUtils.js";import{RightAngleTriangleSnappingCandidate as a}from"./candidates/RightAngleTriangleSnappingCandidate.js";class m extends n{snapNewVertex(e,t){const o=t.geometry.editGeometry.components[0],r=[],s=o.vertices.length;if("polygon"!==t.geometry.type||s<2)return r;const i=o.vertices[0],n=o.vertices[s-1];return this._processCandidateProposal(i.pos,n.pos,e,t,r),r}snapExistingVertex(t,o){const r=[],s=e(o.vertexHandle),i=s.component;return i.edges.length<2?r:"polyline"!==o.geometry.type||0!==s.index&&s.index!==i.vertices.length-1?(this._processCandidateProposal(s.left.left.pos,s.right.right.pos,t,o,r),r):r}_processCandidateProposal(e,n,m,l,c){if(!this.exceedsShortLineThreshold(e,n,l))return;const d=o(t(),e,n,.5),g=.5*r(e,n),h=p(t(),m,d,g),f=l.coordinateHelper,v=f.fromXYZ(h,f.getZ(m,0)),y=s(m,f,l.elevationInfo,this.view);i(y,s(v,f,l.elevationInfo,this.view))<this.squaredProximityTreshold(l.pointer)&&c.push(new a({coordinateHelper:f,targetPoint:v,point1:e,point2:n}))}}export{m as RightAngleTriangleSnapper};
