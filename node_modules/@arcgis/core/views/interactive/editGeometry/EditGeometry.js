/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as t,isNone as e}from"../../../core/maybe.js";import s from"../../../geometry/Polygon.js";import r from"../../../geometry/Polyline.js";import"../../../geometry.js";import n from"../../../core/Evented.js";import{createCoordinateHelper as i}from"../coordinateHelper.js";class o{constructor(t){this.left=null,this.right=null,this.type="vertex",this.index=null,this.component=t}get pos(){return this._pos}set pos(t){this._pos=t,this.component.unnormalizeVertexPositions()}}class h{constructor(t,e,s){this.type="edge",this.component=t,this.left=e,this.right=s,e.right=this,s.left=this}}class c{constructor(t){this.vertices=[],this.edges=[],this.data=t}unnormalizeVertexPositions(){this.vertices.length<=1||this.data.coordinateHelper.unnormalize(this.vertices)}updateVertexIndex(t,e){if(0===this.vertices.length)return;const s=this.vertices[0];let r=null,n=t,i=e;do{r=n,r.index=i++,n=r.right?r.right.right:null}while(null!=n&&n!==s);r.left&&r!==this.vertices[this.vertices.length-1]&&this.swapVertices(this.vertices.indexOf(r),this.vertices.length-1)}getFirstVertex(){return 0===this.vertices.length?null:this.vertices[0]}getLastVertex(){return 0===this.vertices.length?null:this.vertices[this.vertices.length-1]}swapVertices(t,e){const s=this.vertices[t];this.vertices[t]=this.vertices[e],this.vertices[e]=s}iterateVertices(e){if(0===this.vertices.length)return;const s=this.vertices[0];let r=s;do{e(r,r.index),r=t(r.right)?r.right.right:null}while(r!==s&&null!=r)}}class l extends n{constructor(t){super(),this.coordinateHelper=t,this.undoStack=[],this.redoStack=[],this.components=[]}apply(t,s=1){0!==s&&!e(this.lastOperation)&&this.lastOperation.accumulate(t)||(t.apply(),this.undoStack.push(t),this.redoStack=[])}undo(){if(this.undoStack.length>0){const t=this.undoStack.pop();return t.undo(),this.redoStack.push(t),t}return null}get canUndo(){return this.undoStack.length>0}get lastOperation(){return this.undoStack.length>0?this.undoStack[this.undoStack.length-1]:null}redo(){if(this.redoStack.length>0){const t=this.redoStack.pop();return t.apply(),this.undoStack.push(t),t}return null}get canRedo(){return this.redoStack.length>0}toPoint(){return 0===this.components.length||0===this.components[0].vertices.length?null:this.coordinateHelper.createPoint(this.components[0].vertices[0].pos)}toPolyline(){const t=[],e=this.coordinateHelper.toArray;return this.components.forEach(((s,r)=>{const n=[];let i=s.vertices.find((t=>null==t.left));const o=i;do{n.push(e(i.pos)),i=i.right?i.right.right:null}while(i&&i!==o);t.push(n)})),new r({paths:t,spatialReference:this.coordinateHelper.spatialReference})}toPolygon(){const e=[],r=this.coordinateHelper.toArray;return this.components.forEach(((s,n)=>{const i=[],o=s.vertices[0];let h=o;const c=h;do{i.push(r(h.pos)),h=t(h.right)?h.right.right:null}while(h&&h!==c);i.push(r(o.pos)),e.push(i)})),new s({rings:e,spatialReference:this.coordinateHelper.spatialReference})}static fromGeometry(t,e){const s=i(t.hasZ,t.hasM,t.spatialReference,e),r=new l(s);switch(t.type){case"polygon":{const e=t.rings;for(let t=0;t<e.length;++t){const n=e[t],i=new c(r),l=n.length-1;for(let t=0;t<l;++t){const e=s.fromArray(n[t]),r=new o(i);i.vertices.push(r),r.pos=e,r.index=t}const p=i.vertices.length-1;for(let t=0;t<p;++t){const e=i.vertices[t],s=i.vertices[t+1],r=new h(i,e,s);i.edges.push(r)}const a=new h(i,i.vertices[i.vertices.length-1],i.vertices[0]);i.edges.push(a),r.components.push(i)}}break;case"polyline":for(const e of t.paths){const t=new c(r),n=e.length;for(let r=0;r<n;++r){const n=s.fromArray(e[r]),i=new o(t);t.vertices.push(i),i.pos=n,i.index=r}const i=t.vertices.length-1;for(let e=0;e<i;++e){const s=t.vertices[e],r=t.vertices[e+1],n=new h(t,s,r);t.edges.push(n)}r.components.push(t)}break;case"point":{const e=new c(r),s=new o(e);s.index=0,s.pos=r.coordinateHelper.fromPoint(t),e.vertices.push(s),r.components.push(e)}}return r}}export{c as Component,h as Edge,l as EditGeometry,o as Vertex};
