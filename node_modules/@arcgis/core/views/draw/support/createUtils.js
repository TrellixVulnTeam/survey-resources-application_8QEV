/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{clone as e}from"../../../core/lang.js";import{isSome as t,filterNones as o,isNone as n}from"../../../core/maybe.js";import{equals as r}from"../../../core/arrayUtils.js";import{isValid as a}from"../../../geometry/support/spatialReferenceUtils.js";import s from"../../../geometry/Point.js";import i from"../../../geometry/Multipoint.js";import{unnormalizeGeometryOnDatelineCrossing as l,isClockwise as y,unnormalizeVerticesOnDatelineCrossing as c}from"../../../geometry/support/coordsUtils.js";import p from"../../../geometry/Polygon.js";import x from"../../../geometry/Polyline.js";import"../../../geometry.js";import{getMetersPerUnitForSR as m}from"../../../core/unitUtils.js";import u from"../../../geometry/Circle.js";import{simplify as f,distance as h}from"../../../geometry/geometryEngine.js";import{makeSurfacePoint as M}from"./surfaceCoordinateSystems.js";function g(e,o,n=null){return t(n)?[e,o,n]:[e,o]}function d(e,t){const o=new s({x:e[0],y:e[1],spatialReference:t});return e.length>2&&(o.z=e[2]),o}function R(e,t){return new i({points:e,spatialReference:t})}function j(e,t,o){const n=new x({paths:e,spatialReference:t});return o&&l(n),n}function b(t,o,n,s=!0){const i=e(t);i.forEach((e=>{const t=e[0],o=e[e.length-1];r(t,o)&&1!==e.length||e.push(e[0])}));let c=new p({rings:i,spatialReference:o});return c.rings.forEach((e=>{y(e,!1,!1)||e.reverse()})),n&&l(c),s&&c.isSelfIntersecting&&a(o)&&(c=f(c)),c}function T(e,t,n){const r=t.mapToLocalMultiple(e),a=[],s={x:r[0].x,y:r[0].y},i={x:r[1].x,y:r[1].y},l=Math.round(i.x-s.x),y=Math.round(i.y-s.y),c=Math.max(Math.abs(l),Math.abs(y));if(n){const e={x:s.x+c,y:s.y+c},t={x:s.x-c,y:s.y-c};a.push(M(e.x,t.y),M(t.x,t.y),M(t.x,e.y),M(e.x,e.y))}else{const e={x:l>0?s.x+c:s.x-c,y:y>0?s.y+c:s.y-c};a.push(M(s.x,s.y),M(e.x,s.y),M(e.x,e.y),M(s.x,e.y))}return b([o(a.map((e=>t.localToMap(e))))],t.spatialReference,t.doUnnormalization,!0)}function U(e,t,n){let r=t.mapToLocalMultiple(e);if(1===r.length){const e=48,t=r[0];r=[M(t.x-e,t.y+e),M(t.x+e,t.y-e),M(t.x+e,t.y-e),M(t.x-e,t.y+e)]}const a=[],s={x:r[0].x,y:r[0].y},i={x:r[1].x,y:r[1].y};if(n){const e=Math.round(i.x-s.x),t=Math.round(i.y-s.y);a.push(M(s.x-e,s.y-t),M(i.x,s.y-t),M(i.x,i.y),M(s.x-e,i.y))}else a.push(M(s.x,s.y),M(i.x,s.y),M(i.x,i.y),M(s.x,i.y));return b([o(a.map((e=>t.localToMap(e))))],t.spatialReference,t.doUnnormalization,!0)}function w(e,t,o,r){const s=t.mapToLocalMultiple(e);let i=null,l=null;if(o)i=s[0],l=s[1];else{const e=s[0],t=s[1],o=Math.round(t.x-e.x),n=Math.round(t.y-e.y),r=Math.max(Math.abs(o),Math.abs(n));i=M(o>0?e.x+r/2:e.x-r/2,n>0?e.y+r/2:e.y-r/2),l=M(Math.abs(o)>Math.abs(n)?i.x-r/2:i.x,Math.abs(o)>Math.abs(n)?i.y:i.y-r/2)}const y=t.localToMap(i),p=t.localToMap(l);if(n(y)||n(p))return null;t.doUnnormalization&&c([[y,p]],t.spatialReference);const x=d(y,t.spatialReference),f=d(p,t.spatialReference),g=m(t.spatialReference);let R=0;if(a(t.spatialReference))R=g*h(x,f,null);else{const e=i.x-l.x,t=i.y-l.y;R=g*Math.sqrt(e*e+t*t)*(r||1)}const j=new u({center:x,radius:R,radiusUnit:"meters",spatialReference:t.spatialReference});return b(j.rings,j.spatialReference,!1)}function z(e,t,n){const r=t.mapToLocalMultiple(e),a=r[0],s=r[1],i=Math.round(s.x-a.x),l=Math.round(s.y-a.y),y=M(n?a.x:a.x+i/2,n?a.y:a.y+l/2),c=n?i:i/2,p=n?l:l/2,x=60,m=[],u=2*Math.PI/x;for(let o=0;o<x;o++){const e=Math.cos(o*u),t=Math.sin(o*u),n=M(c*e+y.x,p*t+y.y);m.push(n)}return m.push(m[0]),b([o(m.map((e=>t.localToMap(e))))],t.spatialReference,t.doUnnormalization,!1)}export{w as createCircle,z as createEllipse,R as createMultipoint,d as createPoint,b as createPolygon,j as createPolyline,U as createRectangle,T as createSquare,g as makeMapPoint};
