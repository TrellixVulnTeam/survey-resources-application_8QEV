/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import{subclass as t}from"../../core/accessorSupport/decorators/subclass.js";import s from"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import p from"../../geometry/Point.js";import{combinedViewLayerTimeExtentProperty as i}from"../../layers/support/commonProperties.js";import a from"../../tasks/support/Query.js";import{getFetchPopupTemplate as u}from"./support/popupUtils.js";const n=n=>{let c=class extends n{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(e,o){const{layer:t}=this;if(!e)throw new s("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t});const{popupEnabled:i}=t,n=u(t,o);if(!i||!r(n))throw new s("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:i,popupTemplate:n});const c=await n.getRequiredFields(),m=new a;m.geometry=e,m.outFields=c,m.outSpatialReference=e.spatialReference;const l=this.view.resolution,y="2d"===this.view.type?new p(l,l,this.view.spatialReference):new p(.5*l,.5*l,this.view.spatialReference),{returnTopmostRaster:d,showNoDataRecords:w}=n.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},h={returnDomainValues:!0,returnTopmostRaster:d,pixelSize:y,showNoDataRecords:w};return t.queryVisibleRasters(m,h).then((e=>e))}canResume(){var e;return!!super.canResume()&&(null==(e=this.timeExtent)||!e.isEmpty)}};return e([o()],c.prototype,"layer",void 0),e([o()],c.prototype,"suspended",void 0),e([o(i)],c.prototype,"timeExtent",void 0),e([o()],c.prototype,"view",void 0),c=e([t("esri.views.layers.ImageryLayerView")],c),c};export default n;export{n as ImageryLayerView};
