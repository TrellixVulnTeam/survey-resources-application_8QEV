/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import s from"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{eachAlways as a}from"../../core/promiseUtils.js";import{loadArcade as p}from"../../support/arcadeOnDemand.js";import{combinedViewLayerTimeExtentProperty as i}from"../../layers/support/commonProperties.js";import{ExportImageParameters as m}from"../../layers/support/ExportImageParameters.js";import{calculateTolerance as l}from"../../renderers/support/clickToleranceUtils.js";import{getRequiredFields as u,getFetchPopupTemplate as n}from"./support/popupUtils.js";const c=c=>{let y=class extends c{initialize(){this.exportImageParameters=new m({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeatures(e,t){const{layer:o}=this;if(!e)return Promise.reject(new s("mapimagelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:o}));const p=this.get("view.scale"),i=[],m=async e=>{const o=0===e.minScale||p<=e.minScale,s=0===e.maxScale||p>=e.maxScale;if(e.visible&&o&&s)if(e.sublayers)e.sublayers.forEach(m);else if(e.popupEnabled){const o=n(e,{...t,defaultPopupTemplateEnabled:!1});r(o)&&i.unshift({sublayer:e,popupTemplate:o})}},c=o.sublayers.toArray().reverse().map(m);await Promise.all(c);const y=i.map((async({sublayer:o,popupTemplate:s})=>{await o.load().catch((()=>{}));const a=o.createQuery(),p=r(t)?t.event:null,i=l({renderer:o.renderer,event:p}),m=this.createFetchPopupFeaturesQueryGeometry(e,i);a.geometry=m,a.outFields=await u(o,s);const n=await this._loadArcadeModules(s);n&&n.arcadeUtils.hasGeometryOperations(s)||(a.maxAllowableOffset=m.width/i);return(await o.queryFeatures(a)).features}));return(await a(y)).reduce(((e,r)=>r.value?[...e,...r.value]:e),[]).filter((e=>null!=e))}canResume(){var e;return!!super.canResume()&&(null==(e=this.timeExtent)||!e.isEmpty)}_loadArcadeModules(e){if(e.get("expressionInfos.length"))return p()}};return e([t()],y.prototype,"exportImageParameters",void 0),e([t({readOnly:!0})],y.prototype,"exportImageVersion",null),e([t()],y.prototype,"layer",void 0),e([t()],y.prototype,"suspended",void 0),e([t(i)],y.prototype,"timeExtent",void 0),y=e([o("esri.views.layers.MapImageLayerView")],y),y};export default c;export{c as MapImageLayerView};
