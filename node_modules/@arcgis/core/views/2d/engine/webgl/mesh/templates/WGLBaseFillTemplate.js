/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isNone as e}from"../../../../../../core/maybe.js";import{deltaDecodeGeometry as t,convertFromGeometry as r}from"../../../../../../layers/graphics/featureConversionUtils.js";import{i1616to32 as i}from"../../number.js";import{WGLGeometryType as s}from"../../enums.js";import{FillMaterialKey as o}from"../../materialKey/MaterialKey.js";import{triangulate as n,triangulateLibtess as m,clipMarshall as a}from"./templateUtils.js";const l=1e3,c=1,y=y=>class extends y{constructor(...e){super(...e),this.forceLibtess=!1,this.geometryType=s.FILL}_write(e,t,r){const i="esriGeometryPoint"===t.geometryType,s=o.load(this._materialKey);e.recordStart(t.getDisplayId(),this._materialKey,this.geometryType,s.dotDensity,i),this._writeGeometry(e,t,s,r,i),e.recordEnd()}_writeGeometry(t,r,i,s,o){const a=this._getGeometry(r,s,o);if(e(a))return;const c=t.indexCount();if(!(a.lengths[0]>l)&&!this.forceLibtess&&n(t,a)){return void(!(c===t.indexCount())&&this._writeVertices(t,r,a.coords,a.lengths,i))}const y=m(t,a);!(c===t.indexCount())&&this._writeVertices(t,r,y,[y.length/2],i)}_writeVertices(e,t,r,s,o){const n=t.getDisplayId();let m=0;for(const a of s){const s=a+m;for(let a=m;a<s;a++){const s=r[2*a],m=r[2*a+1],l=i(c*s,c*m);e.vertexBounds(s,m,0,0),e.vertexWrite(l),e.vertexWrite(n),o.dotDensity?e.vertexWriteF32(1/Math.abs(t.readGeometryArea())):(e.vertexWrite(this.fillColor),e.vertexWrite(this.tl),e.vertexWrite(this.br),e.vertexWrite(this.aux1),e.vertexWrite(this.aux2),e.vertexWrite(this.aux3))}m+=a}}_getGeometry(e,i,s){const o=i?t(r(i),2):e.readUnquantizedGeometry();if(!o)return null;return a(o,s?256:128)}};export default y;
