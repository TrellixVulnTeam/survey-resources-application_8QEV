/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{pt2px as t}from"../../../../../../core/screenUtils.js";import{getXAnchorDirection as e,getYAnchorDirection as i}from"../../alignmentUtils.js";import{TextMaterialKey as s}from"../../materialKey/MaterialKey.js";import{premultiplyAlphaRGBA as o}from"../../color.js";import{isFunction as a}from"./util.js";import n from"./WGLBaseTextTemplate.js";import r from"./WGLDynamicMeshTemplate.js";import{codepoints as l}from"../../../../layers/features/textUtils.js";const h=5,c=24;function m(t,e,i,s){return"string"==typeof t.text?t.text:"function"==typeof t.text?t.text(e,i,s):""}class _ extends(n(r)){constructor(e){super(e),this._horizontalAlignment="center",this._verticalAlignment="middle",this._textToGlyphs=new Map;const i=e.scaleFactor||1;if(this._cimTextLayer=e,a(e.color)){const t=(t,i,s)=>o(e.color(t,i,s));this._dynamicPropertyMap.set("_color",t)}else this._color=o(e.color);if(a(e.color)){const t=(t,i,s)=>o(e.outlineColor(t,i,s));this._dynamicPropertyMap.set("_haloColor",t)}else this._haloColor=o(e.outlineColor);let n;a(e.size)||(n=Math.min(Math.round(t(e.size*e.sizeRatio)),127));const r=(i,s,o)=>a(e.size)?Math.min(Math.round(t(e.size(i,s,o)*e.sizeRatio)),127):n;if(this._dynamicPropertyMap.set("_size",r),a(e.outlineSize)){const i=(i,s,o)=>Math.min(Math.floor(h*t(e.outlineSize(i,s,o)*e.sizeRatio)),127);this._dynamicPropertyMap.set("_haloSize",i)}else this._haloSize=Math.min(Math.floor(h*t(e.outlineSize*e.sizeRatio)),127);let l;a(e.offsetX)||(l=Math.round(t(e.offsetX*e.sizeRatio)));const c=(i,s,o)=>a(e.offsetX)?Math.round(t(e.offsetX(i,s,o)*e.sizeRatio)):l;let m;this._dynamicPropertyMap.set("_xOffset",c),a(e.offsetY)||(m=Math.round(t(e.offsetY*e.sizeRatio)));const _=(i,s,o)=>a(e.offsetY)?Math.round(t(e.offsetY(i,s,o)*e.sizeRatio)):m;this._dynamicPropertyMap.set("_yOffset",_),a(e.angle)?this._dynamicPropertyMap.set("_angle",e.angle):this._angle=e.angle,a(e.horizontalAlignment)?this._dynamicPropertyMap.set("_horizontalAlignment",e.horizontalAlignment):this._horizontalAlignment=e.horizontalAlignment,a(e.verticalAlignment)?this._dynamicPropertyMap.set("_verticalAlignment",e.verticalAlignment):this._verticalAlignment=e.verticalAlignment,this._scaleFactor=i,a(e.text)?this._dynamicPropertyMap.set("_text",e.text):this._text=e.text;const f=Math.min(Math.round(t(e.referenceSize*e.sizeRatio)),127);this._referenceSize=Math.round(Math.sqrt(256*f)),this._materialKey=e.materialKey;const y=s.load(this._materialKey);y.sdf=!0,this._bitset=(1===e.alignment?1:0)|(e.colorLocked?1:0)<<1,this._materialKey=y.data,this._decoration="none",this._lineHeight=1,this._lineWidth=512,this._textPlacement=e.markerPlacement,this._effects=e.effects,this._isCIM=!0}static fromCIMText(t){return new _(t)}async analyze(t,e,i,s){const o=e.readLegacyFeature(),a=m(this._cimTextLayer,o,i,s),n=await t.getMosaicItem(this._cimTextLayer.cim,l(a));return this._textToGlyphs.set(a,n.glyphMosaicItems),n}bindFeature(t,s,o){const a=t.readLegacyFeature();if(this._dynamicPropertyMap.forEach(((t,e)=>{this[e]=t(a,s,o)})),!this._text||0===this._text.length)return void(this._shapingInfo=null);this._size*=this._scaleFactor,this._scale=this._size/c,this._xOffset*=this._scaleFactor,this._yOffset*=this._scaleFactor,this._xAlignD=e(this._horizontalAlignment||"center"),this._yAlignD=i(this._verticalAlignment||"baseline");const n=this._textToGlyphs.get(this._text);this.bindTextInfo(n,!1)}}export default _;
