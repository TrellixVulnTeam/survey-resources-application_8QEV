/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{nextHighestPowerOfTwo as t}from"../../../../../../core/mathUtils.js";import{pt2px as e}from"../../../../../../core/screenUtils.js";import{SPRITE_PADDING as s}from"../../definitions.js";import{i8888to32 as i,i1616to32 as r}from"../../number.js";import{FillMaterialKey as o}from"../../materialKey/MaterialKey.js";import{premultiplyAlphaRGBA as a}from"../../color.js";import{radToByte as l}from"../../GeometryUtils.js";import{ok as n}from"../../util/Result.js";import{isFunction as c}from"./util.js";import f from"./WGLBaseFillTemplate.js";import h from"./WGLDynamicMeshTemplate.js";const m=128;class p extends(f(h)){constructor(t){var s;if(super(t),c(t.color)){const e=(e,s,i)=>{const r=t.color(e,s,i);return r&&a(r)||0};this._dynamicPropertyMap.set("_fillColor",e)}else{const e=t.color;this.fillColor=e&&a(e)||0}let i=0;c(t.height)||(i=t.height||0);const r="CIMMarkerPlacementInsidePolygon"===(null==(s=t.cim.placement)?void 0:s.type)&&t.cim.placement.shiftOddRows?2:1,n=(e,s,o)=>c(t.height)?t.height(e,s,o)*r:i*r;this._dynamicPropertyMap.set("_height",n);let f=0;c(t.offsetX)||(f=e(t.offsetX||0)+m,f>255&&(f=255));const h=(s,i,r)=>{if(c(t.offsetX)){let o=e(t.offsetX(s,i,r))+m;return o>255&&(o=255),o}return f};this._dynamicPropertyMap.set("_offsetX",h);let p=1;c(t.scaleX)||(p=t.scaleX||1);const y=(e,s,i)=>c(t.scaleX)?t.scaleX(e,s,i):p;this._dynamicPropertyMap.set("_scaleX",y);let d=0;c(t.offsetY)||(d=e(-t.offsetY||0)+m,d>255&&(d=255));const _=(s,i,r)=>{if(c(t.offsetY)){let o=e(-t.offsetY(s,i,r))+m;return o>255&&(o=255),o}return d};this._dynamicPropertyMap.set("_offsetY",_);let u=0;c(t.angle)||(u=l(t.angle)||0);const g=(e,s,i)=>c(t.angle)?l(t.angle(e,s,i)):u;this._dynamicPropertyMap.set("_angle",g),this._effects=t.effects,this._cimFillLayer=t,this._fillMaterialKey=o.load(t.materialKey)}static fromCIMFill(t){return new p(t)}bindFeature(o,a,l){const c=o.readLegacyFeature();this._dynamicPropertyMap.forEach(((t,e)=>{this[e]=t(c,a,l)}));const f=this._fillMaterialKey,h=this._materialCache,p=this._cimFillLayer;this.aux3=i(0,0,this._angle,p.colorLocked?1:0);const y=(0,p.materialHash)(c,a,l),d=h.get(y);let _=null;if(d&&n(d.spriteMosaicItem)&&(_=d.spriteMosaicItem),_){const{rect:o,width:a,height:l}=_,n=o.x+s,c=o.y+s,h=n+a,p=c+l;let y=t(e(this._height));y>255?y=255:y<=0&&(y=t(p-c));let d=t(e(this._height/l*a||0));d>255?d=255:d<=0&&(d=t(h-n));const u=this._scaleX,g=1;this.tl=r(n,c),this.br=r(h,p),this.aux1=i(d,y,this._offsetX,this._offsetY),this.aux2=r(m*u,m*g),f.sdf=_.sdf,f.pattern=!0,f.textureBinding=_.textureBinding}else this.tl=0,this.br=0,this.aux1=0,this.aux2=0,f.sdf=!1,f.pattern=!1,f.textureBinding=0;this._materialKey=f.data}}export default p;
