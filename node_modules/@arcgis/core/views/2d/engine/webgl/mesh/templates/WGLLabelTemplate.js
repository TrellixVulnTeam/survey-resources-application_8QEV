/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{unwrap as e,isNone as t}from"../../../../../../core/maybe.js";import i from"../../../../../../core/Logger.js";import o from"../../../../../../core/Error.js";import{clamp as n,log2 as r}from"../../../../../../core/mathUtils.js";import{pt2px as s}from"../../../../../../core/screenUtils.js";import{TEXT_PLACEMENT_PADDING as a}from"../../definitions.js";import{getAlignmentFromPlacement as h,getXDirection as l,getYDirection as m}from"../../alignmentUtils.js";import{i8888to32 as c}from"../../number.js";import{WGLGeometryType as f}from"../../enums.js";import{isMapAligned as _}from"./meshUtils.js";import{LabelMaterialKey as p}from"../../materialKey/MaterialKey.js";import{premultiplyAlphaRGBAArray as g}from"../../color.js";import{smoothPaths as d,pathDivide as u}from"./segmentUtils.js";import x from"./WGLTextTemplate.js";const y=i.getLogger("esri.views.2d.engine.webgl.WGLLabelTemplate"),b=(e,t="mapview-labeling")=>y.error(new o(t,e)),L=1,S=128,v=0,w=16,P=4;function M(e,t){const i=!!e.minScale&&t.scaleToZoom(e.minScale)||0;return n(i,0,25.5)}function Z(e,t){const i=!!e.maxScale&&t.scaleToZoom(e.maxScale)||255;return n(i,0,25.5)}function z(e){const t=new Map;return i=>(t.has(i)||t.set(i,e(i)),t.get(i))}const G=z((e=>{let t=0;if(0===e)return 1/0;for(;!(e%2);)t++,e/=2;return t})),O=e=>Math.floor(127*e+127),j=e=>Math.floor(10*e),A=e=>Math.round(e*(254/360));class I extends x{constructor(e,t,i,o){super(e,i.font.size,i.haloSize||0,i.color&&g(i.color)||0,i.haloColor&&g(i.haloColor)||0,i.horizontalAlignment,i.verticalAlignment,_(t.labelPlacement)?1:0,i.font.decoration,!1,i.angle||0,i.xoffset,i.yoffset,i.lineWidth,i.lineHeight,null,null),this._outLineLabelAngle=0,this._refPlacementPadding=0,this._refPlacementDirX=0,this._refPlacementDirY=0,this._refOffsetX=0,this._refOffsetY=0,this._zoomLevel=0,this.geometryType=f.LABEL;const n=M(t,o),r=Z(t,o),l=t.labelPlacement,[m,c]=h(l);this._xAlignD=m,this._yAlignD=c,this._minZoom=n,this._maxZoom=r,this._refPlacementPadding=s(i.haloSize)+a;const d=p.load(e);d.sdf=!0,this._materialKey=d.data}static fromLabelClass(e,t){if("center-along"===e.labelPlacement){const t=e.symbol;t.xoffset=0,t.yoffset=0,t.angle=0,t.font.decoration="none"}return new I(e.materialKey,e,e.symbol,t)}get _shapedBox(){return e(this._shapingInfo).bounds}setZoomLevel(e){this._zoomLevel=e}bindReferenceTemplate(e){let i=l(this._xAlignD),o=m(this._yAlignD);if(this._refOffsetX=0,this._refOffsetY=0,t(e))return void(this._refSymbolAndPlacementOffset=c(0,0,O(i),O(o)));if("circle"===e.boundsType&&(i||o)){const e=Math.sqrt(i*i+o*o);i/=e,o/=e}const n=Math.max(e.height,e.width),r=this._refPlacementPadding*P;this._refSymbolAndPlacementOffset=c(r,n,O(i),O(o)),this._referenceSize=n,this._refPlacementDirX=i,this._refPlacementDirY=o,this._refOffsetX=e.xOffset,this._refOffsetY=e.yOffset}_write(e,i){if(t(this._shapingInfo))return;const o=this._shapingInfo,n=i.getDisplayId(),r="esriGeometryPolygon"===i.geometryType?i.readLegacyCentroid():i.readLegacyGeometry();if(r)switch(this.current={out:e,inId:n,inShaping:o,zoomLevel:this._zoomLevel},i.geometryType){case"esriGeometryPolyline":this._placeLineLabels(r);break;case"esriGeometryPoint":case"esriGeometryPolygon":this._placePointLabels(r);break;default:b("mapview-labeling",`Geometry of type ${i.geometryType} is not supported`)}}_isVisible(e,t){const i=j(this.current.zoomLevel);return j(e)<=i&&i<=j(t)}_placePointLabels(e){const{out:t,inId:i,inShaping:o}=this.current;this._writeGlyphs(t,i,e,o)}_placeLineLabels(e){const t=d(e.paths,this.current.inShaping.bounds.width),i=this._placeSubdivGlyphs.bind(this),o=(this._shapedBox.width+S)/(1<<L);for(const n of t)u(n,o,i)}_placeSubdivGlyphs(e,t,i,o){const n=G(t),s=this._shapedBox.width/(1<<L),a=w/(1<<L),h=Math.min(i,o-i),l=r(h/(a+s/2)),m=0===t?l:Math.min(n,l),c=Math.max(this._minZoom,this.current.zoomLevel+L-m),f=this.current.zoomLevel-c,_=this._shapedBox.width/2*2**f;this.current.inShaping.isMultiline?0===t&&this._placeStraight(e,c):this._placeCurved(e,c,_)}_placeStraight(e,t){const{out:i,inId:o,inShaping:n}=this.current;this._writeGlyphs(i,o,e,n,t)}_placeCurved(e,t,i){const{out:o,inId:n}=this.current;o.metricStart(n,t,e.x,e.y,0,0,0,0);const r=e.clone(),s=e.angle*(180/Math.PI)%360,a=(e.angle*(180/Math.PI)+180)%360;this._outLineLabelAngle=A(s),this._placeFirst(r,t,1),this._placeBack(e,r,t,i,1),this._placeForward(e,r,t,i,1),this._outLineLabelAngle=A(a),this._placeFirst(r,t,0),this._placeBack(e,r,t,i,0),this._placeForward(e,r,t,i,0),o.metricEnd()}_placeBack(e,t,i,o,n){const r=e.clone();let s=e.backwardLength+v;for(;r.prev()&&!(s>=o);)this._placeOnSegment(r,t,s,i,-1,n),s+=r.length+v}_placeForward(e,t,i,o,n){const r=e.clone();let s=e.remainingLength+v;for(;r.next()&&!(s>=o);)this._placeOnSegment(r,t,s,i,1,n),s+=r.length+v}_placeFirst(e,t,i){const o=e,n=this.current.inShaping,s=n.glyphs,a=this.current.zoomLevel,{out:h,inId:l}=this.current;for(const m of s){const s=m.x>n.bounds.x?i:1-i,c=s*e.remainingLength+(1-s)*e.backwardLength,f=Math.abs(m.x+m.width/2-n.bounds.x),_=Math.max(0,a+r(f/(c+v))),p=Math.max(t,_);if(m.maxZoom=25,m.angle=e.angle+(1-i)*Math.PI,m.minZoom=p,!(o.x<0||o.x>=512||o.y<0||o.y>=512)&&(this._writeGlyph(h,l,o.x,o.y,m),i&&this._isVisible(m.minZoom,m.maxZoom))){const e=m.bounds;h.metricBoxWrite(e.center[0],e.center[1],e.width,e.height)}}}_placeOnSegment(e,t,i,o,n,s){const a=this.current.inShaping.glyphs,{out:h,inId:l}=this.current,m=this.current.inShaping,c=this.current.zoomLevel,f=e.dx/e.length,_=e.dy/e.length,p={x:e.x+i*-n*f,y:e.y+i*-n*_};for(const g of a){const a=g.x>m.bounds.x?s:1-s;if(!(a&&1===n||!a&&-1===n))continue;const f=Math.abs(g.x+g.width/2-m.bounds.x),_=Math.max(0,c+r(f/i)-.1),d=Math.max(o,c+r(f/(i+e.length+v)));if(0!==_&&(g.angle=e.angle+(1-s)*Math.PI,g.minZoom=d,g.maxZoom=_,!(p.x<0||p.x>=512||p.y<0||p.y>=512)&&(this._writeGlyph(h,l,p.x,p.y,g),s&&this._isVisible(g.minZoom,g.maxZoom)))){const i=g.bounds,o=e.x-t.x,n=e.y-t.y;h.metricBoxWrite(i.center[0]+o,i.center[1]+n,i.width,i.height)}}}_writeGlyphs(e,t,i,o,n=this._minZoom){if(i.x<0||i.x>=512||i.y<0||i.y>=512)return;const r=i.x+this._refOffsetX,s=i.y-this._refOffsetY;for(const f of o.glyphs)f.minZoom=n,f.maxZoom=this._maxZoom,this._writeGlyph(e,t,r,s,f);const a=p.load(this._materialKey),h=this._refPlacementDirX,l=this._refPlacementDirY,m=a.vvSizeFieldStops||a.vvSizeMinMaxValue||a.vvSizeScaleStops||a.vvSizeUnitValue,c=o.boundsT;e.metricStart(t,n,r,s,h,l,this._referenceSize,m?1:0),e.metricBoxWrite(c.center[0],c.center[1],c.width,c.height),e.metricEnd()}_writeVertexCommon(e,t,i,o){const n=this._color,r=this._haloColor,s=c(0,0,this._size,this._haloSize),a=Math.max(o.minZoom,this._minZoom),h=Math.min(o.maxZoom,this._maxZoom),l=c(j(a),j(h),this._outLineLabelAngle,0);e.vertexWrite(i),e.vertexWrite(t),e.vertexWrite(n),e.vertexWrite(r),e.vertexWrite(s),e.vertexWrite(this._refSymbolAndPlacementOffset),e.vertexWrite(l)}}export default I;
