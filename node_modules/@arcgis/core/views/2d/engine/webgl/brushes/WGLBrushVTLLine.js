/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isNone as t}from"../../../../../core/maybe.js";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as e}from"../definitions.js";import{c as r}from"../../../../../chunks/vec2f32.js";import{u32to4Xu8 as a}from"../number.js";import{WGLDrawPhase as i}from"../enums.js";import s from"./WGLBrush.js";class n extends s{constructor(){super(...arguments),this._dashArray=r(),this._programOptions={id:!1,pattern:!1}}dispose(){}drawMany(r,s){const{context:n,displayLevel:o,state:l,drawPhase:f,painter:m,styleLayerUID:d}=r,p=r.styleLayer,u=p.lineMaterial,c=m.vectorTilesMaterialManager,y=p.getPaintValue("line-translate",o),_=p.getPaintValue("line-translate-anchor",o),h=p.getPaintValue("line-pattern",o),g=void 0!==h,M=1/r.pixelRatio,U=8,v=f===i.HITTEST,x=this._programOptions;x.id=v,x.pattern=g;const b=c.getMaterialProgram(n,u,x);if(n.bindProgram(b),b.setUniformMatrix3fv("u_displayViewMat3",l.displayViewMat3),b.setUniformMatrix3fv("u_displayMat3",1===_?l.displayMat3:l.displayViewMat3),b.setUniform2fv("u_lineTranslation",y),b.setUniform1f("u_depth",p.z),b.setUniform1f("u_antialiasing",M),v){const t=a(d+1);b.setUniform4fv("u_id",t)}if(g){const t=r.spriteMosaic,a=t.getMosaicItemPosition(h,!0);a&&(t.bind(n,9729,a.page,e),b.setUniform2f("u_pattern_tl",a.tl[0],a.br[1]),b.setUniform2f("u_pattern_br",a.br[0],a.tl[1]),b.setUniform2f("u_spriteSize",U*a.size[0],a.size[1]),b.setUniform1i("u_texture",e))}else{let t=p.getPaintValue("line-dasharray",o);t.length<2&&(t=[1,-1]);const e=U;this._dashArray[0]=e*t[0],this._dashArray[1]=e*t[1],b.setUniform2fv("u_dasharray",this._dashArray)}let P=-1;for(const e of s){if(!e.layerData.has(d))continue;e.key.level!==P&&(P=e.key.level,u.setDataUniforms(b,o,p,P));const r=e.layerData.get(d);r.prepareForRendering(n);const a=r.lineVertexArrayObject;t(a)||(n.bindVAO(a),b.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),n.setStencilFunction(514,e.stencilRef,255),n.drawElements(4,r.lineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*r.lineIndexStart),e.triangleCount+=r.lineIndexCount/3)}}}export{n as WGLBrushVTLLine};
