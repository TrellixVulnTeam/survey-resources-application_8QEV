/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import s from"./GraphicDisplayList.js";import{serializeList as t}from"./util/serializationUtils.js";import i from"./WGLDisplayObject.js";function e(s){const t=[[],[],[],[],[]],i=s;for(const e of i)for(const s of e.displayRecords)t[s.geometryType].push(s);return t}class r{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const s of this.displayObjects)this._displayObjectRegistry.set(s.id,s)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new s;for(const s of this.displayObjects)for(const t of s.displayRecords)this._displayList.addToList(t)}clone(){const s=new r;return this.displayObjects&&(s.displayObjects=this.displayObjects.map((s=>s.clone()))),s}serialize(s){return t(s,this.displayObjects),s}_deserializeObjects(s){const t=s.readInt32(),e=new Array(t),r=new Map;for(let a=0;a<e.length;++a){const t=i.deserialize(s);e[a]=t,r.set(t.id,t)}this.displayObjects=e,this._displayList=null,this._displayObjectRegistry=r}static deserialize(s){const t=new r;return t._deserializeObjects(s),t}}export default r;export{e as groupRecordsByGeometryType};
