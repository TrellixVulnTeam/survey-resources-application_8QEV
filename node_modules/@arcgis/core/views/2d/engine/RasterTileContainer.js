/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{create as e}from"../../../geometry/support/aaBoundingRect.js";import{getWorldWidth as s}from"../viewpointUtils.js";import{WGLDrawPhase as t}from"./webgl/enums.js";import{brushes as i}from"./brushes.js";import r from"./webgl/TileContainer.js";import{RasterTile as o}from"./RasterTile.js";class n extends r{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const s=this._getTileBounds(e);return new o(e,s,this._tileInfoView.tileInfo.size)}destroyTile(){}prepareRenderPasses(e){const s=e.registerRenderPass({name:"bitmap (tile)",brushes:[i.raster],target:()=>this.children.map((e=>e.bitmap)),drawPhase:t.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===t.MAP&&super.doRender(e)}_getTileBounds(t){const i=this._tileInfoView.getTileBounds(e(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:e}=this._tileInfoView,r=s(e.spatialReference);if(r){const{resolution:s}=e.lodAt(t.level),o=r/s%e.size[0],n=o?(e.size[0]-o)*s:0;i[0]-=n*t.world,i[2]-=n*t.world}}return i}}export{n as RasterTileContainer};
