/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../../../../../core/ArrayPool.js";import{earcut as t,deviation as l}from"../../../../../core/libs/earcut/earcut.js";import{Point as i}from"../../webgl/Geometry.js";import r from"../../webgl/mesh/Tesselator.js";import n from"./BaseBucket.js";const s=new r;class o extends n{constructor(e,t,l,i,r,n){super(e,t),this.type=1,this._fillVertexBuffer=l,this._fillIndexBuffer=i,this._outlineVertexBuffer=r,this._outlineIndexBuffer=n}get fillIndexStart(){return this._fillIndexStart}get fillIndexCount(){return this._fillIndexCount}get outlineIndexStart(){return this._outlineIndexStart}get outlineIndexCount(){return this._outlineIndexCount}processFeatures(e){this._fillIndexStart=3*this._fillIndexBuffer.index,this._fillIndexCount=0,this._outlineIndexStart=3*this._outlineIndexBuffer.index,this._outlineIndexCount=0;const t=this.layer,l=this.zoom;e&&e.setExtent(this.layerExtent);let i=void 0===t.getPaintValue("fill-pattern",l)&&t.getPaintValue("fill-antialias",l);if(t.outlineUsesFillColor){if(i&&!t.hasDataDrivenOpacity){const e=t.getPaintValue("fill-opacity",l),r=t.getPaintValue("fill-opacity",l+1);e<1&&r<1&&(i=!1)}if(i&&!t.hasDataDrivenColor){const e=t.getPaintValue("fill-color",l),r=t.getPaintValue("fill-color",l+1);e[3]<1&&r[3]<1&&(i=!1)}}const{fillMaterial:r,outlineMaterial:n,hasDataDrivenFill:s,hasDataDrivenOutline:o}=t;for(const f of this._features){const a=s?r.encodeAttributes(f,l,t):null,u=i&&o?n.encodeAttributes(f,l,t):null,d=f.getGeometry(e),h=null==e?void 0:e.validateTessellation;this._processFeature(d,i,t.outlineUsesFillColor,a,u,h)}}serialize(){let e=10;e+=this.layerUIDs.length,e+=this._fillVertexBuffer.array.length,e+=this._fillIndexBuffer.array.length,e+=this._outlineVertexBuffer.array.length,e+=this._outlineIndexBuffer.array.length;const t=new Uint32Array(e),l=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let r=0;r<this.layerUIDs.length;r++)t[i++]=this.layerUIDs[r];t[i++]=this._fillIndexStart,t[i++]=this._fillIndexCount,t[i++]=this._outlineIndexStart,t[i++]=this._outlineIndexCount,t[i++]=this._fillVertexBuffer.array.length;for(let r=0;r<this._fillVertexBuffer.array.length;r++)l[i++]=this._fillVertexBuffer.array[r];t[i++]=this._fillIndexBuffer.array.length;for(let r=0;r<this._fillIndexBuffer.array.length;r++)t[i++]=this._fillIndexBuffer.array[r];t[i++]=this._outlineVertexBuffer.array.length;for(let r=0;r<this._outlineVertexBuffer.array.length;r++)l[i++]=this._outlineVertexBuffer.array[r];t[i++]=this._outlineIndexBuffer.array.length;for(let r=0;r<this._outlineIndexBuffer.array.length;r++)t[i++]=this._outlineIndexBuffer.array[r];return t.buffer}_processFeature(e,t,l,i,r,n){if(!e)return;const s=e.length,f=!r||0===r.length;if(t&&(!l||f))for(let o=0;o<s;o++)this._processOutline(e[o],r);const a=128;let u;for(let d=0;d<s;d++){const t=o._area(e[d]);t>a?(void 0!==u&&this._processFill(e,u,i,n),u=[d]):t<-a&&void 0!==u&&u.push(d)}void 0!==u&&this._processFill(e,u,i,n)}_processOutline(e,t){const l=this._outlineVertexBuffer,r=this._outlineIndexBuffer,n=r.index;let s,o,f;const a=new i(0,0),u=new i(0,0),d=new i(0,0);let h=-1,x=-1,y=-1,c=-1,_=-1,g=!1;const I=0;let B=e.length;if(B<2)return;const p=e[I];let V=e[B-1];for(;B&&V.isEqual(p);)--B,V=e[B-1];if(!(B-I<2)){for(let i=I;i<B;++i){i===I?(s=e[B-1],o=e[I],f=e[I+1],a.assignSub(o,s),a.normalize(),a.rightPerpendicular()):(s=o,o=f,f=i!==B-1?e[i+1]:e[I],a.assign(u));const n=this._isClipEdge(s,o);-1===c&&(g=n),u.assignSub(f,o),u.normalize(),u.rightPerpendicular();const p=a.x*u.y-a.y*u.x;d.assignAdd(a,u),d.normalize();const V=-d.x*-a.x+-d.y*-a.y;let C=Math.abs(0!==V?1/V:1);C>8&&(C=8),p>=0?(y=l.add(o.x,o.y,a.x,a.y,0,1,t),-1===c&&(c=y),h>=0&&x>=0&&y>=0&&!n&&r.add(h,x,y),x=l.add(o.x,o.y,C*-d.x,C*-d.y,0,-1,t),-1===_&&(_=x),h>=0&&x>=0&&y>=0&&!n&&r.add(h,x,y),h=x,x=y,y=l.add(o.x,o.y,d.x,d.y,0,1,t),h>=0&&x>=0&&y>=0&&!n&&r.add(h,x,y),x=l.add(o.x,o.y,u.x,u.y,0,1,t),h>=0&&x>=0&&y>=0&&!n&&r.add(h,x,y)):(y=l.add(o.x,o.y,C*d.x,C*d.y,0,1,t),-1===c&&(c=y),h>=0&&x>=0&&y>=0&&!n&&r.add(h,x,y),x=l.add(o.x,o.y,-a.x,-a.y,0,-1,t),-1===_&&(_=x),h>=0&&x>=0&&y>=0&&!n&&r.add(h,x,y),h=x,x=y,y=l.add(o.x,o.y,-d.x,-d.y,0,-1,t),h>=0&&x>=0&&y>=0&&!n&&r.add(h,x,y),h=l.add(o.x,o.y,-u.x,-u.y,0,-1,t),h>=0&&x>=0&&y>=0&&!n&&r.add(h,x,y))}h>=0&&x>=0&&c>=0&&!g&&r.add(h,x,c),h>=0&&c>=0&&_>=0&&!g&&r.add(h,_,c),this._outlineIndexCount+=3*(r.index-n)}}_processFill(i,r,n,s){let o;r.length>1&&(o=[]);let a=0;for(const e of r)0!==a&&o.push(a),a+=i[e].length;const u=2*a,d=e.acquire();for(const e of r){const t=i[e],l=t.length;for(let e=0;e<l;++e)d.push(t[e].x,t[e].y)}const h=t(d,o,2);if(s&&l(d,o,2,h)>0){const e=[],t=[];if(f(e,t,i,r),t.length>0){const l=this._fillVertexBuffer.index;let i=0;for(;i<e.length;)this._fillVertexBuffer.add(e[i++],e[i++],n);let r=0;for(;r<t.length;)this._fillIndexBuffer.add(l+t[r+0],l+t[r+1],l+t[r+2]),r+=3;this._fillIndexCount+=t.length}}else{const e=h.length;if(e>0){const t=this._fillVertexBuffer.index;let l=0;for(;l<u;)this._fillVertexBuffer.add(d[l++],d[l++],n);let i=0;for(;i<e;)this._fillIndexBuffer.add(t+h[i++],t+h[i++],t+h[i++]);this._fillIndexCount+=e}}e.release(d)}_isClipEdge(e,t){return e.x===t.x?e.x<=-64||e.x>=4160:e.y===t.y&&(e.y<=-64||e.y>=4160)}static _area(e){let t=0;const l=e.length-1;for(let i=0;i<l;i++)t+=(e[i].x-e[i+1].x)*(e[i].y+e[i+1].y);return t+=(e[l].x-e[0].x)*(e[l].y+e[0].y),.5*t}}function f(e,t,l,i){let r,n;s.beginPolygon(e,t);for(const o of i){const e=l[o];if(!(e.length<3)){s.beginContour();for(let t=0;t<e.length;++t){r=e[t].x,n=e[t].y;const l=[r,n,0];s.addVertex(l,l)}s.endContour()}}s.endPolygon()}export default o;
