/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isNone as t}from"../../../../core/maybe.js";import{polygonCentroid as e}from"../../../../geometry/support/centroid.js";import{isPolygon as s,isPolyline as r}from"../../../../geometry/support/jsonUtils.js";import{create as o}from"../../../../geometry/support/aaBoundingRect.js";import i from"../../../../layers/graphics/OptimizedGeometry.js";import{convertFromPolyline as h,generalizeOptimizedGeometry as l,quantizeOptimizedGeometry as n,convertToPolyline as m}from"../../../../layers/graphics/featureConversionUtils.js";import{quantizePoint as u,quantizeGeometry as a}from"../../../../geometry/support/quantizationUtils.js";import{isMarkerSymbol as g,isTextSymbol as y,getBounds as p}from"./graphicsUtils.js";const c=new i,d=new i,f="esriGeometryPolyline";function b(t){t.coords.length=0,t.lengths.length=0}class j{constructor(){this.bounds=o(),this.graphic=null,this.size=[0,0,0,0]}static acquire(t=null,e,s,r,o,i){let h;return 0===j._pool.length?h=new j:(h=j._pool.pop(),this._set.delete(h)),h.acquire(t,e,s,r,o,i),h}static release(t){t&&!this._set.has(t)&&(t.release(),this._pool.push(t),this._set.add(t))}static getCentroidQuantized(r,o){if(s(r.geometry)){const s=r.symbol;if(t(s))return null;if(g(s.type)||y(s.type)){const t=e(r.geometry);return u(o,{},{x:t[0],y:t[1]},!1,!1)}}return null}acquire(t=null,e,s,r,o,i){t&&this.set(t,e,s,r,o,i)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(t,e,s,r,o,i){this.graphic=t,this.geometry=s,this.symbolResource=e,this.updateBounds(r,o,i)}updateBounds(t,e,s){p(this.bounds,this.size,this.symbolResource,this.geometry,t,e,s)}getGeometryQuantized(t){if(s(this.geometry)){const e=this.geometry.rings;if(1===e.length&&2===e[0].length)return a(t,{paths:[[e[0][0],e[0][1]]]})}else if(r(this.geometry))return b(c),b(d),h(c,this.geometry),l(d,c,this.geometry.hasZ,this.geometry.hasM,f,t.scale[0]),n(c,d,this.geometry.hasZ,this.geometry.hasM,f,t),m(c,this.geometry.hasZ,this.geometry.hasM);return a(t,this.geometry)}}j._pool=[],j._set=new Set;export default j;
