/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import e from"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import{enumeration as i}from"../../../../core/accessorSupport/decorators/enumeration.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{debounce as a,isAbortError as o,after as p}from"../../../../core/promiseUtils.js";import n from"../../../../core/Accessor.js";import c from"../../../../geometry/Extent.js";import{createScreenPoint as h}from"../../../../core/screenUtils.js";import l from"../../../../request.js";import u from"../../../../Graphic.js";import{snapImageToSymbolTile as m}from"../../../../layers/support/rasterFunctions/vectorFieldUtils.js";import d from"../../../../support/GraphicsCollection.js";import{projectExtent as y}from"../../../../layers/support/rasterFunctions/rasterProjectionHelper.js";import{Container as g}from"../../engine/Container.js";import x from"../graphics/GraphicsView2D.js";import w from"../graphics/GraphicContainer.js";const f=e.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let j=class extends n{constructor(){super(...arguments),this.attached=!1,this.container=new g,this.updateRequested=!1,this._graphicsView=null,this._projectFullExtentPromise=null,this.type="Graphics",this._graphics=new d,this._updateGraphics=a((async(t,e)=>{if(!t.stationary)return;const r=t.state,i=new c({xmin:r.extent.xmin,ymin:r.extent.ymin,xmax:r.extent.xmax,ymax:r.extent.ymax,spatialReference:r.spatialReference}),s=t.state.size[0],a=t.state.size[1],o={};o.timeExtent=this.timeExtent,o.requestAsImageElement=!1,o.signal=e,null==this._projectFullExtentPromise&&(this._projectFullExtentPromise=this._getProjectedFullExtent(i.spatialReference));const n="vector-field"===this.layer.renderer.type?this.layer.renderer.symbolTileSize:50,h=await this._projectFullExtentPromise,l=m(i,s,a,n,h),u=await this.layer.fetchImage(l.extent,l.width,l.height,o),d=this.layer.renderer;if("vector-field"===d.type){this._pixelData={extent:l.extent,pixelBlock:u.pixelData.pixelBlock};const e=await d.getGraphicsFromPixelData(u.pixelData,"vector-uv"===this.layer.rasterInfo.dataType);this._graphicsView.update(t),await p(0).then((()=>{this._graphics.set("items",e)}))}}))}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this._updateGraphics(t).catch((t=>{o(t)||f.error(t)}))}hitTest(t,e){const r=this.view.toMap(h(t,e));return Promise.resolve(new u({attributes:{},geometry:r,layer:this.layer}))}attach(){this._graphicsView=new x({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme)}),this.attached=!0}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null}moveStart(){}viewChange(){}moveEnd(){}install(t){this.container.addChild(this._graphicsView.container),t.addChild(this.container)}uninstall(t){this.container.removeChild(this._graphicsView.container),t.removeChild(this.container)}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}async _getProjectedFullExtent(t){try{return await y(this.layer.fullExtent,t)}catch(e){try{const e=(await l(this.layer.url,{query:{option:"footprints",outSR:t.wkid||JSON.stringify(t.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return e?c.fromJSON(e):null}catch{return null}}}};t([r()],j.prototype,"attached",void 0),t([r()],j.prototype,"container",void 0),t([r()],j.prototype,"layer",void 0),t([r()],j.prototype,"timeExtent",void 0),t([r()],j.prototype,"view",void 0),t([r()],j.prototype,"updateRequested",void 0),t([r()],j.prototype,"updating",null),t([i({graphics:"Graphics"})],j.prototype,"type",void 0),j=t([s("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],j);var v=j;export default v;
