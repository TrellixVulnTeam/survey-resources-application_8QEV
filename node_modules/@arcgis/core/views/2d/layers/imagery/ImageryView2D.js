/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import t from"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import{enumeration as i}from"../../../../core/accessorSupport/decorators/enumeration.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{isAbortError as o}from"../../../../core/promiseUtils.js";import a from"../../../../core/Accessor.js";import{createScreenPoint as n}from"../../../../core/screenUtils.js";import p from"../../../../Graphic.js";import{mosaicPixelData as l}from"../../../../layers/support/rasterFunctions/pixelUtils.js";import{Container as c}from"../../engine/Container.js";import h from"../../engine/ImageryBitmapSource.js";import{BitmapContainer as m}from"../../engine/BitmapContainer.js";import d from"../support/ExportStrategy.js";const u=t.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let g=class extends a{constructor(){super(...arguments),this.attached=!1,this.container=new c,this.updateRequested=!1,this.type="Imagery",this._bitmapView=null}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch((e=>{o(e)||u.error(e)}))}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren()}hitTest(e,t){const r=this.view.toMap(n(e,t));return Promise.resolve(new p({attributes:{},geometry:r,layer:this.layer}))}attach(){const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,r=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new m,this.strategy=new d({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:r,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()}),this.attached=!0}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container)}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const r=e.source;r.pixelBlock=t.pixelBlock,r.filter=e=>this.layer.applyFilter(e),this.container.requestRender()}))}))}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.container.children;if(1===e.length&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,r=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),i=l(r,t);return i?{extent:i.extent,pixelBlock:i.pixelBlock}:null}return null}_fetchImage(e,t,r,i){return(i=i||{}).timeExtent=this.timeExtent,i.requestAsImageElement=!0,this.layer.fetchImage(e,t,r,i).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:i.signal}).then((t=>{const r=new h(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return r.filter=e=>this.layer.applyFilter(e),r}))))}};e([r()],g.prototype,"attached",void 0),e([r()],g.prototype,"container",void 0),e([r()],g.prototype,"layer",void 0),e([r()],g.prototype,"strategy",void 0),e([r()],g.prototype,"timeExtent",void 0),e([r()],g.prototype,"view",void 0),e([r()],g.prototype,"updateRequested",void 0),e([r()],g.prototype,"updating",null),e([i({imagery:"Imagery"})],g.prototype,"type",void 0),g=e([s("esri.views.2d.layers.imagery.ImageryView2D")],g);var y=g;export default y;
