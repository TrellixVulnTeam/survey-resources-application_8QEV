/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import i from"../../../core/Collection.js";import{referenceSetter as r}from"../../../core/collectionUtils.js";import{init as o}from"../../../core/watchUtils.js";import a from"../../layers/support/ClipArea.js";import p from"../../layers/support/ClipRect.js";import{Container as h}from"../engine/Container.js";import n from"../../layers/support/Geometry.js";import d from"../../layers/support/Path.js";const c=i.ofType({key:"type",base:a,typeMap:{rect:p,path:d,geometry:n}}),l=i=>{let a=class extends i{constructor(){super(...arguments),this.clips=new c,this.moving=!1,this.attached=!1,this.lastUpdateId=-1,this.updateRequested=!1}initialize(){var t;this.container||(this.container=new h),this.container.fadeTransitionEnabled=!0,this.container.opacity=0,this.container.clips=this.clips,this.handles.add([o(this,"suspended",(t=>{this.container&&(this.container.visible=!t),this.view&&!t&&this.updateRequested&&this.view.requestUpdate()}),!0),o(this,["layer.opacity","container"],(()=>{var t,e;this.container&&(this.container.opacity=null!=(t=null==(e=this.layer)?void 0:e.opacity)?t:1)}),!0),o(this,["layer.blendMode"],(t=>{this.container&&(this.container.blendMode=t)}),!0),o(this,["layer.effect"],(t=>{this.container&&(this.container.effect=t)}),!0),this.clips.on("change",(()=>{this.container.clips=this.clips,this.notifyChange("clips")}))]),null!=(t=this.view)&&t.whenLayerView?this.view.whenLayerView(this.layer).then((t=>{t!==this||this.attached||this.destroyed||(this.attach(),this.requestUpdate(),this.attached=!0)}),(()=>{})):this.when().then((()=>{this.attached||this.destroyed||(this.attach(),this.requestUpdate(),this.attached=!0)}),(()=>{}))}destroy(){this.attached&&(this.detach(),this.attached=!1),this.handles.remove("initialize"),this.updateRequested=!1}get updating(){return!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())}isVisibleAtScale(t){let e=!0;const s=this.layer,i=s.minScale,r=s.maxScale;if(null!=i&&null!=r){let s=!i,o=!r;!s&&t<=i&&(s=!0),!o&&t>=r&&(o=!0),e=s&&o}return e}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}processUpdate(t){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",t),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(t))):this.updateRequested=!1}isUpdating(){return!1}isRendering(){return!1}canResume(){return!!super.canResume()&&this.isVisibleAtScale(this.view.scale)}};return t([e({type:c,set(t){const e=r(t,this._get("clips"),c);this._set("clips",e)}})],a.prototype,"clips",void 0),t([e()],a.prototype,"moving",void 0),t([e()],a.prototype,"attached",void 0),t([e()],a.prototype,"container",void 0),t([e()],a.prototype,"suspended",void 0),t([e({readOnly:!0})],a.prototype,"updateParameters",void 0),t([e()],a.prototype,"updateRequested",void 0),t([e()],a.prototype,"updating",null),t([e()],a.prototype,"view",void 0),a=t([s("esri.views.2d.layers.LayerView2D")],a),a};export{l as LayerView2DMixin};
