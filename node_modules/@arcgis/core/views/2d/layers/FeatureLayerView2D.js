/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/has.js";import{clone as i}from"../../../core/lang.js";import{andThen as r,unwrapOr as s,isSome as a,isNone as n}from"../../../core/maybe.js";import o from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as l}from"../../../core/accessorSupport/decorators/property.js";import{subclass as h}from"../../../core/accessorSupport/decorators/subclass.js";import u from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{flatten as d}from"../../../core/arrayUtils.js";import{debounce as p,isAbortError as c,eachAlwaysValues as f,after as y}from"../../../core/promiseUtils.js";import g from"../../../geometry/Extent.js";import"../../../geometry.js";import m from"../../../core/Collection.js";import _ from"../../../Graphic.js";import v from"../../../AggregateGraphic.js";import{init as R,whenFalseOnce as b}from"../../../core/watchUtils.js";import{isHostedAgolService as x}from"../../../layers/support/arcgisLayerUrl.js";import w from"../../../tasks/support/FeatureSet.js";import S from"../../../tasks/support/Query.js";import{MAX_FILTERS as F}from"../engine/webgl/definitions.js";import U from"../../webgl/capabilities.js";import{RefreshableLayerView as I}from"../../layers/RefreshableLayerView.js";import E from"../../layers/LayerView.js";import{calculateTolerance as C}from"../../../renderers/support/clickToleranceUtils.js";import{createQueryGeometry as j}from"../../support/drapedUtils.js";import{findSizeVV as O,createClusterCountSizeVariable as T,isClusterCompatibleRenderer as P,createClusterRenderer as q}from"./support/clusterUtils.js";import V from"../../layers/effects/EffectList.js";import{computePxBuffer as L}from"./features/support/pixelBuffering.js";import{toJSONGeometryType as N}from"./support/util.js";import{createSchema as H}from"./features/schemaUtils.js";import G from"../../layers/support/FeatureFilter.js";import J from"../../layers/support/FeatureEffect.js";import{FeatureLayerView as k}from"../../layers/FeatureLayerView.js";import{LayerView2DMixin as M}from"./LayerView2D.js";import{createOrReuseTileRenderer as A}from"./features/tileRenderers.js";import z from"./support/FeatureLayerProxy.js";import{TileManager as D}from"../tiling/TileManager.js";const $=2147483648,Q=1,B=e=>(e&$)>>>31===Q;function K(e){return e&&"openPorts"in e}const W=o.getLogger("esri.views.2d.layers.FeatureLayerView2D");let X=class extends(k(I(M(E)))){constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._updatingPipelineConfig=!1,this._onGoingEdits=0,this._isRefreshing=!1,this._visibilityOverrides=new Set,this._effect=null,this._highlightIds=new Map,this._lastPixelBuffer=0,this.filter=null,this.effectLists={included:new V,excluded:new V},this.doRefresh=p((async()=>{this.isUpdating()&&await b(this,"updating"),this._set("_isRefreshing",!0),this._lockGPUUploads();try{await this._proxy.refresh()}catch(e){c(e),0}this._unlockGPUUploads(),this._set("_isRefreshing",!1)})),this._doUpdate=p((async()=>{try{if(this.destroyed||!this._hasRequiredSupport(this.layer))return;this._set("_updatingPipelineConfig",!0),await b(this,"_isRefreshing");const{effect:t,filter:i}=this;await this._updateRequiredFields();const{renderer:r}=this._getEffectiveRenderer();this._set("_effectiveRenderer",r);const s="feature"===this.layer.type?this.layer.historicMoment:null,n="feature"===this.layer.type?this.layer.gdbVersion:null,o={renderer:this.layer.renderer,spatialReference:this.layer.spatialReference,timeExtent:this.layer.timeExtent,definitionExpression:this.layer.definitionExpression,featureReduction:this.layer.featureReduction,fields:this.layer.fields,geometryType:this.layer.geometryType,historicMoment:s,labelsVisible:this.layer.labelsVisible,labelingInfo:this.layer.labelingInfo,availableFields:this.availableFields,effect:this.effect,filter:this.filter,gdbVersion:n,pixelBuffer:0},l=N(this.layer.geometryType),h=await L(r,l,this.layer.featureReduction),u=this._createConfiguration(o,i,t);this._lastPixelBuffer=0===h?0:Math.max(h,this._lastPixelBuffer),u.schema.source.pixelBuffer=this._lastPixelBuffer;const d=this._createTileRendererHash(r);if(d!==this._tileRendererHash){await this._initTileRenderer(r);const e=this._serviceOptions;this.effects.forEach((e=>a(e)&&a(e.filter)&&e.filter.enable())),this.tileRenderer.onConfigUpdate(r);const t={added:this._tileStrategy.tileKeys(),removed:[]},i=this.layer;"stream"!==i.type&&K(i.source)&&(e.source=await i.source.openPorts()),await this._proxy.startup(this.view.featuresTilingScheme,u,e,t),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(r)}else{const t=await this._proxy.update(u);(t.mesh||t.targets.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(t)}catch(e){c(e)||W.error(e)}(t.mesh||t.targets.aggregate)&&this._unlockGPUUploads(),this.effects.forEach((e=>a(e)&&a(e.filter)&&e.filter.enable())),this.tileRenderer.onConfigUpdate(r),this._forceAttributeTextureUpload()}this._tileRendererHash=d,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch(e){}})),this._updateHighlight=p((async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys()))))}destroy(){var e,t;null==(e=this._proxy)||e.destroy(),r(this._updateClusterSizeTask,(e=>e.remove())),null==(t=this.tileRenderer)||t.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",(e=>{this._set("_aggregateValueRanges",e.valueRanges)})),R(this,"effect",(e=>{this.effectLists.included.effect=null==e?void 0:e.includedEffect})),R(this,"effect",(e=>{this.effectLists.excluded.effect=null==e?void 0:e.excludedEffect}))])}async _initProxy(){if("stream"!==this.layer.type&&"ogc-feature"!==this.layer.type&&this.layer.isTable)throw new u("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});this._proxy&&this._proxy.destroy();const e=this._createClientOptions();return this._set("_proxy",new z({client:e})),this._proxy.when()}async _initServiceOptions(){this._set("_serviceOptions",await this._createServiceOptions())}get labelsVisible(){return!this.suspended&&this.layer.labelingInfo&&this.layer.labelsVisible}get effect(){return s(this._effect,null)}set effect(e){const t=this._effect;a(t)&&a(t.filter)&&t.filter.enabled&&a(e)&&a(e.filter)&&e.filter.enable(),this._effect=e,this.notifyChange("effect")}get effects(){return this.effect&&[this.effect]||[]}get queryMode(){return this._serviceOptions.type}get renderingConfigHash(){if(!this.layer)return null;const e=this.availableFields,t=this.layer,i=this.view.floors,{definitionExpression:r,renderer:s,labelingInfo:n}=t,o="feature"===t.type?t.gdbVersion:void 0,l="feature"===t.type&&t.historicMoment?t.historicMoment.getTime():void 0,{timeExtent:h}=this,u="stream"===t.type?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,d=JSON.stringify(this.clips),p=t.featureReduction&&t.featureReduction.toJSON();return JSON.stringify({filterHash:a(this.filter)&&this.filter.toJSON(),effectHash:a(this.effect)&&this.effect.toJSON(),streamFilter:u,gdbVersion:o,definitionExpression:r,historicMoment:l,availableFields:e,renderer:s,labelingInfo:t.labelsVisible&&n,timeExtent:h,floors:i,clipsHash:d,featureReduction:p})}get hasEffects(){return this.effectLists.included.hasEffects||this.effectLists.excluded.hasEffects}highlight(e){let t;return e instanceof _?t=[e.getObjectId()]:"number"==typeof e||"string"==typeof e?t=[e]:m.isCollection(e)?t=e.map((e=>e&&e.getAttribute(this.layer.objectIdField))).toArray():Array.isArray(e)&&e.length>0&&(t="number"==typeof e[0]||"string"==typeof e[0]?e:e.map((e=>e&&e.getAttribute(this.layer.objectIdField)))),t&&t.length?(t=t.filter((e=>null!=e)),this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}hitTest(e,t){return this._hitTest(e,t)}queryStatistics(){return this._proxy.queryStatistics()}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then((e=>{const t=w.fromJSON(e);return t.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),t}))}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then((e=>({count:e.count,extent:g.fromJSON(e.extent)})))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:i,removed:r}=this._tileStrategy.update(e);(i.length||r.length)&&this._proxy.updateTiles({added:i,removed:r}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new D({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add(R(this,"renderingConfigHash",(()=>this._update())),"attach"),"stream"!==this.layer.type&&this.handles.add(this.layer.on("edits",(async e=>{this._set("_onGoingEdits",this._onGoingEdits+1);try{const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some((e=>-1===e.objectId||!e.objectId)),r=t&&this.availableFields.includes(t);if(i&&!r)return void W.error(new u("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`));await this._proxy.onEdits(e)}catch(t){c(t),0}this._set("_onGoingEdits",Math.max(0,this._onGoingEdits-1))})),"attach")}detach(){this.container.removeAllChildren(),this.handles.remove("attach"),this._updatingPipelineConfig=!1,this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}async fetchPopupFeatures(e,t){if(a(t)&&t.clientGraphics.length){const e=t.clientGraphics[0];if(e instanceof v)return[e]}const i=this.validateFetchPopupFeatures(t);if(i)throw i;if(a(t)&&0===t.clientGraphics.length)return[];const r=this.fetchClientPopupFeatures(t);if(!e)return r;const s=this._fetchServicePopupFeatures(e,t);return f([r,s]).then(d)}async _fetchServicePopupFeatures(e,t){if("stream"===this.layer.type||"ogc-feature"===this.layer.type)return[];const i=await this.createPopupQuery(t),{layer:r}=this,{renderer:s}=r,n=a(t)?t.event:null,o=C({renderer:s,event:n});i.geometry=this.createFetchPopupFeaturesQueryGeometry(e,o);const l=new Set,{objectIdField:h}=r,u=a(t)?t.clientGraphics:null;if(u)for(const a of u)l.add(a.attributes[h]);return r.queryFeatures(i).then((e=>e.features.filter((e=>!l.has(e.attributes[h])))))}createFetchPopupFeaturesQueryGeometry(e,t){return j(e,t,this.view)}isUpdating(){return null!=this.layer.renderer&&(null!=this._updatingRequiredFieldsPromise||null==this.tileRenderer||!this._proxy||!this._proxy.isReady||this._pipelineIsUpdating||this._updatingPipelineConfig||this.tileRenderer.updating||this._onGoingEdits>0)}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){if("path"in e&&x(e.path)&&"feature"===this.layer.type&&"point"===this.layer.geometryType&&!this.layer.capabilities.operations.supportsEditing&&t("featurelayer-snapshot-enabled"))try{const e=await this.layer.queryFeatureCount();if(e<=t("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:e};const i=t("featurelayer-snapshot-point-max-threshold"),r=t("featurelayer-snapshot-point-coverage"),s=this.view.extent,a=this.layer.fullExtent,n=null==a?void 0:a.clone().intersection(s),o=(null==n?void 0:n.width)*(null==n?void 0:n.height),l=(null==a?void 0:a.width)*(null==a?void 0:a.height),h=0===l?0:o/l;if(e<=i&&h>=r)return{mode:"snapshot",featureCount:e}}catch(i){W.warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:i})}return{mode:"on-demand"}}async _createServiceOptions(){const e=this.layer;if("stream"===e.type)return null;const{capabilities:t,objectIdField:r}=e,s=e.fields.map((e=>e.toJSON())),a=e.fullExtent&&e.fullExtent.toJSON(),n=N(e.geometryType),o=e.timeInfo&&e.timeInfo.toJSON()||null,l=e.spatialReference?e.spatialReference.toJSON():null,h="feature"===e.type?e.customParameters:null,u="feature"===e.type?e.globalIdField:null;let d;"ogc-feature"===e.type?d=e.source.getFeatureDefinition():K(e.source)?d=await e.source.openPorts():e.parsedUrl&&(d=i(e.parsedUrl),"dynamicDataSource"in e&&e.dynamicDataSource&&(d.query={layer:JSON.stringify({source:e.dynamicDataSource})}));const{mode:p,featureCount:c}=await this._detectQueryMode(d);return{type:p,featureCount:c,globalIdField:u,maxRecordCount:t.query.maxRecordCount,tileMaxRecordCount:t.query.tileMaxRecordCount,capabilities:t,fields:s,fullExtent:a,geometryType:n,objectIdField:r,source:d,timeInfo:o,spatialReference:l,customParameters:h}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=S.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}_createUpdateClusterSizeTask(e,t){return this.watch("_aggregateValueRanges",(async i=>{this._updateClusterEffectiveRendererSizeVariable(e,t,i),this._updatingPipelineConfig||this.tileRenderer.onConfigUpdate(this._effectiveRenderer)}))}async _updateClusterEffectiveRendererSizeVariable(e,t,i){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const r=O(e.visualVariables);if(a(r)&&"cluster_count"===r.field){const s=e.visualVariables.indexOf(r);e.visualVariables[s]=T(t,i);const a=e.clone();a.dynamicClusterSize=!0,this._set("_effectiveRenderer",a)}}}_getEffectiveRenderer(){const e=this.layer.renderer,t=this.layer.featureReduction;if(a(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),t&&"cluster"===t.type&&P(e)){const i=t,s=[],a=q(s,e,i,this._aggregateValueRanges);return r(this._updateClusterSizeTask,(e=>e.remove())),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(a,i),{renderer:a,aggregateFields:s,featureReduction:t}}return{renderer:e,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",(()=>{this.requestUpdate()})),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e){const t=await A(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=t,this._set("tileRenderer",t),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(e),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return`${"heatmap"===e.type?"heatmap":"symbol"}.${"dot-density"===e.type}`}_createFeatureDataHash(e,t,i){const r=e.getAttributeHash(),s=JSON.stringify(t),n=a(i)&&JSON.stringify(i.filter),o=JSON.stringify(this.timeExtent);let l="";return this._visibilityOverrides.forEach((e=>l+=e)),`${r}.${s}.${n}.${o}.${l}`}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=a(e)?e.timeExtent:null,i=a(this.timeExtent)&&a(t)?this.timeExtent.intersection(t):this.timeExtent||t;let r=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const t=a(e)&&e.where;r=this._addFloorFilterClause(t)}if(!this._visibilityOverrides.size&&!i&&!s)return e;const n=a(e)&&e.clone()||new G;return n.hiddenIds=this._visibilityOverrides,n.timeExtent=i,r&&(n.where=r),n}_addFloorFilterClause(e){const t=this.layer;let i=e||"";if("floorInfo"in t&&t.floorInfo){var r;let e=this.view.floors;if(!e||!e.length)return i;null!=(r=t.floorInfo.viewAllLevelIds)&&r.length&&(e=t.floorInfo.viewAllLevelIds);const s=e.filter((e=>""!==e)).map((e=>"'"+e+"'"));s.push("''");const n=t.floorInfo.floorField;let o="("+n+" IN ({ids}) OR "+n+" IS NULL)";if(o=o.replace("{ids}",s.join(", ")),a(i)&&i.includes(n)){let e=new RegExp("AND \\("+n+".*NULL\\)","g");i=i.replace(e,""),e=new RegExp("\\("+n+".*NULL\\)","g"),i=i.replace(e,""),i=i.replace(/\s+/g," ").trim()}i=""!==i?"("+i+") AND "+o:o}return""!==i?i:null}_createConfiguration(e,t,i){const r="feature"===this.layer.type&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s="feature"===this.layer.type?this.layer.gdbVersion:void 0,o=new Array(F),l=this._injectOverrides(t);o[0]=a(l)?l.toJSON():null,o[1]=a(i)&&i.filter?i.filter.toJSON():null;const h=H(e);if(n(h))return null;const u=U();return{definitionExpression:this.layer.definitionExpression,availableFields:this.availableFields,gdbVersion:s,historicMoment:r,devicePixelRatio:window.devicePixelRatio||1,filters:o,schema:h,supportsTextureFloat:u.supportsTextureFloat,maxTextureSize:u.maxTextureSize}}_hasRequiredSupport(e){var t;return!("dot-density"===(null==(t=e.renderer)?void 0:t.type)&&!U().supportsTextureFloat)||(W.error(new u("webgl-missing-extension","Missing WebGL extension OES_Texture_Float which is required for DotDensity")),!1)}_onceTilesUpdated(){return this.requestUpdate(),b(this,"_pipelineIsUpdating",!1)}_lockGPUUploads(){this.tileRenderer&&this.tileRenderer.lockGPUUploads()}_unlockGPUUploads(){this.tileRenderer&&this.tileRenderer.unlockGPUUploads()}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_update(){this.view.timeline.begin(`${this.layer.title} (FeatureLayer) Initial Pipeline Config`);const e=this._doUpdate();this._updatingPromise=e;const t=()=>{e===this._updatingPromise&&this._set("_updatingPipelineConfig",!1),this.view&&this.view.timeline.end(`${this.layer.title} (FeatureLayer) Initial Pipeline Config`)};e.then(t).catch((e=>{c(e)||W.error(e),t()}))}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch((e=>{c(e)||W.error(e)}))}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight().catch((e=>{c(e)||W.error(e)}))}_createHittestResult(e){return e.layer=this.layer,e.sourceLayer=this.layer,a(e.geometry)&&(e.geometry.spatialReference=this.view.spatialReference),e}async _hitTest(e,t){if(this.suspended||!this.tileRenderer)return null;const i=await this.tileRenderer.hitTest(e,t);if(0===i.length)return await y(1),null;const s=i[0];if(!B(s)){const e=await this._proxy.getFeature(s);return r(e,(e=>this._createHittestResult(_.fromJSON(e))))}const o=await this._proxy.getAggregate(s);if(n(o))return null;if(a(o.referenceId)){const e=await this._proxy.getFeature(o.referenceId);return r(e,(e=>this._createHittestResult(_.fromJSON(e))))}return this._createHittestResult(v.fromJSON(o))}};e([l()],X.prototype,"_serviceOptions",void 0),e([l()],X.prototype,"_proxy",void 0),e([l()],X.prototype,"_pipelineIsUpdating",void 0),e([l()],X.prototype,"_updatingPipelineConfig",void 0),e([l()],X.prototype,"_effectiveRenderer",void 0),e([l()],X.prototype,"_aggregateValueRanges",void 0),e([l()],X.prototype,"_onGoingEdits",void 0),e([l()],X.prototype,"_isRefreshing",void 0),e([l()],X.prototype,"labelsVisible",null),e([l({type:G})],X.prototype,"filter",void 0),e([l({type:J})],X.prototype,"effect",null),e([l({readOnly:!0})],X.prototype,"effects",null),e([l({readOnly:!0})],X.prototype,"queryMode",null),e([l()],X.prototype,"renderingConfigHash",null),e([l()],X.prototype,"tileRenderer",void 0),e([l()],X.prototype,"updating",void 0),X=e([h("esri.views.2d.layers.FeatureLayerView2D")],X);var Y=X;export default Y;
