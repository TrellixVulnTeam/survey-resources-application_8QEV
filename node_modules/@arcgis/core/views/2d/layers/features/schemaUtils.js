/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../../../../core/has.js";import{clone as t}from"../../../../core/lang.js";import{isSome as r,unwrapOr as i}from"../../../../core/maybe.js";import n from"../../../../core/Logger.js";import l from"../../../../core/Error.js";import{pt2px as s}from"../../../../core/screenUtils.js";import"../../../../renderers/Renderer.js";import{fromJSON as a}from"../../../../symbols/support/jsonUtils.js";import"../../../../renderers/ClassBreaksRenderer.js";import"../../../../renderers/UniqueValueRenderer.js";import"../../../../renderers/DictionaryRenderer.js";import"../../../../renderers/DotDensityRenderer.js";import"../../../../renderers/HeatmapRenderer.js";import o from"../../../../renderers/SimpleRenderer.js";import"../../../../renderers/support/jsonUtils.js";import{createClusterRenderer as u}from"../support/clusterUtils.js";import{WGLGeometryType as d}from"../../engine/webgl/enums.js";import{createMaterialKey as c,hydrateMaterialKey as f}from"../../engine/webgl/materialKey/MaterialKey.js";import{getVVType as p}from"../../engine/webgl/Utils.js";import{getVVFlags as m}from"../../engine/webgl/util/vvFlagUtils.js";import{getPtMaxVVSize as y}from"./support/pixelBuffering.js";import{simplifyVisualVariables as g}from"./support/rendererUtils.js";import{toJSONGeometryType as b}from"../support/util.js";const h=n.getLogger("esri.views.2d.layers.features.schemaUtils"),x="ValidationError",v={esriGeometryPoint:["above-right","above-center","above-left","center-center","center-left","center-right","below-center","below-left","below-right"],esriGeometryPolygon:["always-horizontal"],esriGeometryPolyline:["center-along"],esriGeometryMultipoint:null};function w(e){return f(e)}function E(e){return e}function I(e){switch(e.type){case"line-marker":var t;return{type:"line-marker",color:null==(t=e.color)?void 0:t.toJSON(),placement:e.placement,style:e.style};default:return a(e.toJSON()).toJSON()}}function S(e,t,i){if(!e)return null;let n=0,l=!1,s=0;switch(r(t)&&(s=y(t),"visualVariables"in t&&(n=m(t.visualVariables||[]),l="dot-density"===t.type)),e.type){case"simple-fill":case"picture-fill":return F(e,n,l,i);case"simple-marker":case"picture-marker":return j(e,n,s,i);case"simple-line":return z(e,n,i);case"text":return V(e,n,s,i);case"label":return N(e,n,i);case"cim":return{type:"cim",rendererKey:n,data:e.data,maxVVSize:s};case"web-style":return{...I(e),type:"web-style",hash:e.hash(),rendererKey:n,maxVVSize:s};default:throw new Error(`symbol not supported ${e.type}`)}}function F(e,t,r,i){const n=c(d.FILL,t,!1,r),l=i?w(n):n,s=e.clone(),a=s.outline;s.outline=null;const o=[],u={materialKey:l,hash:s.hash(),...I(s)};if(o.push(u),a){const e=c(d.LINE,t,!0,!1),r={materialKey:i?w(e):e,hash:a.hash(),...I(a)};o.push(r)}return{type:"composite-symbol",layers:o,hash:o.reduce(((e,t)=>t.hash+e),"")}}function z(e,t,r){const i=c(d.LINE,t,!1,!1),n=r?w(i):i,l=e.clone(),s=l.marker;l.marker=null;const a=[];if(a.push({materialKey:n,hash:l.hash(),...I(l)}),s){var o;const e=c(d.MARKER,t,!1,!1),i=r?w(e):e;s.color=null!=(o=s.color)?o:l.color,a.push({materialKey:i,hash:s.hash(),lineWidth:l.width,...I(s)})}return{type:"composite-symbol",layers:a,hash:a.reduce(((e,t)=>t.hash+e),"")}}function j(e,t,r,i){const n=c(d.MARKER,t,!1,!1),l=i?w(n):n,s=I(e);return{materialKey:l,hash:e.hash(),...s,angle:e.angle,maxVVSize:r}}function V(e,t,r,i){const n=c(d.TEXT,t,!1,!1),l=i?w(n):n,s=I(e);return{materialKey:l,hash:e.hash(),...s,angle:e.angle,maxVVSize:r}}function T(e,t){const r=e.labelPlacement,i=v[t];if(!e.symbol)return h.warn("No LabelClass symbol specified."),!0;if(!i)return h.error(new l("mapview-labeling:unsupported-geometry-type",`Unable to create labels for Feature Layer, ${t} is not supported`)),!0;if(!i.some((e=>e===r))){const n=i[0];r&&h.warn(`Found invalid label placement type ${r} for ${t}. Defaulting to ${n}`),e.labelPlacement=n}return!1}function R(e,r){const i=t(e);return i.some((e=>T(e,r)))?[]:i}function N(e,t,r){const i=c(d.LABEL,t,!1,!1,e.labelPlacement);return{materialKey:r?w(i):i,hash:e.hash(),...e.toJSON(),labelPlacement:e.labelPlacement}}function k(t){return e("esri-2d-update-debug")&&console.debug("Created new schema",K(t,!0)),K(t)}function K(e,t=!1){try{var r,i;const n=C(e,t),l={};n.map((t=>M(l,e,t)));return{source:{definitionExpression:e.definitionExpression,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:null==(r=e.historicMoment)?void 0:r.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:null==(i=e.timeExtent)?void 0:i.toJSON()},attributes:{fields:{},indexCount:0},processors:n,targets:l}}catch(n){if(n.fieldName===x)return h.error(n),null;throw n}}function M(e,t,r){switch(r.target){case"feature":return void L(e,J(t),r);case"aggregate":{const i=t.featureReduction;if("selection"===i.type)throw new l(x,"Mapview does not support `selection` reduction type",i);return L(e,J(t),r),void B(e,i,r)}}}function O(e,t){for(const r in t){const i=t[r];if(i.target!==e.name)continue;const n=e.attributes[r];n?(n.context.mesh=n.context.mesh||i.context.mesh,n.context.storage=n.context.storage||i.context.storage):e.attributes[r]=i}return e}function J(e){var t,r,i,n,l;return[null!=(t=null==(r=e.filter)?void 0:r.toJSON())?t:null,null!=(i=null==(n=e.effect)||null==(l=n.filter)?void 0:l.toJSON())?i:null]}function L(e,t,r){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),O(e.feature,r.attributes.fields),e}function B(e,t,r){return e.aggregate||(e.aggregate={name:"aggregate",input:"feature",filters:null,attributes:{},params:{clusterRadius:s(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(s(t.clusterMaxSize)/64),fields:r.aggregateFields}}),O(e.aggregate,r.attributes.fields),e}function P(e,t){return t.field?U(e,{...t,type:"field",field:t.field}):t.valueExpression?U(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:null,fieldIndex:null}}function U(e,t){switch(t.type){case"expression":{const r=E(t.valueExpression);if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"label-expression":{const r=E(JSON.stringify(t.label));if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"field":{const r=t.field;return"aggregate"===t.target&&e.fields[r]||(e.fields[r]={...t,name:r}),{field:r}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function C(e,t=!1){const r=new Array;let i=0;return r.push($(e,i++,t)),r}function D(e,t,r,i,n,l=!1){const s=U(t,{type:"label-expression",target:i,context:{mesh:!0},resultType:"string",label:{labelExpression:r.labelExpression,labelExpressionInfo:r.labelExpressionInfo?{expression:r.labelExpressionInfo.expression}:null,symbol:!!r.symbol,where:r.where}}),{fieldIndex:a}=s;return{...S(r,e,l),fieldIndex:a,target:i,index:n}}function $(e,t,r=!1){const i={indexCount:0,fields:{}},n="featureReduction"in e&&e.featureReduction,s=n?"aggregate":"feature";switch(e.renderer.type){case"heatmap":{const{blurRadius:t,fieldOffset:r,field:n}=e.renderer;return{type:"heatmap",aggregateFields:[],attributes:i,target:s,storage:null,mesh:{blurRadius:t,fieldOffset:r,field:P(i,{target:s,field:n,resultType:"numeric"}).field}}}default:{const t=[],a="aggregate"===s?u(t,e.renderer,n,null):e.renderer;q(i,t);const d=W(i,s,a,r);let c=null;const f=A(i,s,a),p=b(e.geometryType);let m=e.labelsVisible&&e.labelingInfo||[],y=[];if(n){if("selection"===n.type)throw new l(x,"Mapview does not support `selection` reduction type",n);if(n.symbol){const e=new o({symbol:n.symbol,visualVariables:"visualVariables"in a?a.visualVariables:null});c=W(i,s,e,r)}y=n&&n.labelsVisible&&n.labelingInfo||[]}m=R(m,p),y=R(y,p);let g=0;const h=[...m.map((e=>D(a,i,e,"feature",g++,r))),...y.map((e=>D(a,i,e,"aggregate",g++,r)))];return{type:"symbol",target:s,attributes:i,aggregateFields:t,storage:f,mesh:{matcher:d,labels:h,aggregateMatcher:c}}}}}function q(e,t){const r={mesh:!0,storage:!0};for(const i of t){const{name:t,outStatistic:n}=i,{statisticType:l,onStatisticField:s}=n;let a=null,o=null,u=null;const d="numeric",c="feature";if("onStatisticValueExpression"in n){o=U(e,{type:"expression",target:c,valueExpression:n.onStatisticValueExpression,resultType:d}).fieldIndex}else if("onStatisticNormalizationField"in n){a=U(e,{type:"field",target:c,field:s,resultType:d}).field,u=n.onStatisticNormalizationField}else{a=U(e,{type:"field",target:c,field:s,resultType:d}).field}U(e,{type:"statistic",target:"aggregate",name:t,context:r,inField:a,inNormalizationField:u,inFieldIndex:o,statisticType:l})}}function A(e,t,r){switch(r.type){case"dot-density":return G(e,t,r.attributes);case"simple":case"class-breaks":case"unique-value":return H(e,t,r.visualVariables);case"heatmap":case"dictionary":return null}}function G(e,t,r){if(!r||!r.length)return{type:"dot-density",mapping:[],target:t};return{type:"dot-density",mapping:r.map(((r,i)=>{const{field:n,fieldIndex:l}=P(e,{valueExpression:r.valueExpression,field:r.field,resultType:"numeric",target:t});return{binding:i,field:n,fieldIndex:l}})),target:t}}function H(e,t,r){if(!r||!r.length)return{type:"visual-variable",mapping:[],target:t};const i={storage:!0},n="numeric";return{type:"visual-variable",mapping:g(r).map((r=>{var l;const s=p(r.type),{field:a,fieldIndex:o}=P(e,{target:t,valueExpression:r.valueExpression,field:r.field,context:i,resultType:n});switch(r.type){case"size":return"$view.scale"===r.valueExpression?null:{type:"size",binding:s,field:a,fieldIndex:o,normalizationField:P(e,{target:t,field:r.normalizationField,context:i,resultType:n}).field,valueRepresentation:null!=(l=r.valueRepresentation)?l:null};case"color":return{type:"color",binding:s,field:a,fieldIndex:o,normalizationField:P(e,{target:t,field:r.normalizationField,context:i,resultType:n}).field};case"opacity":return{type:"opacity",binding:s,field:a,fieldIndex:o,normalizationField:P(e,{target:t,field:r.normalizationField,context:i,resultType:n}).field};case"rotation":return{type:"rotation",binding:s,field:a,fieldIndex:o}}})).filter((e=>e)),target:t}}function W(e,t,r,n=!1){const l=i(e,{indexCount:0,fields:{}});switch(r.type){case"simple":case"dot-density":return X(l,r,"dot-density"===r.type,n);case"class-breaks":return Q(l,t,r,n);case"unique-value":return Y(l,t,r,n);case"dictionary":return Z(l,r,n)}}function X(e,t,r,i=!1){const n=t.getSymbols();return{type:"simple",symbol:S(n.length?n[0]:null,t,i),isDotDensity:r}}function Q(e,t,r,i=!1){const n={mesh:!0,use:"renderer.field"},l=r.backgroundFillSymbol,{field:s,fieldIndex:a}=P(e,{target:t,field:r.field,valueExpression:r.valueExpression,resultType:"numeric",context:n}),o=r.normalizationType,u="log"===o?"esriNormalizeByLog":"percent-of-total"===o?"esriNormalizeByPercentOfTotal":"field"===o?"esriNormalizeByField":null,d=r.classBreakInfos.map((e=>({symbol:S(e.symbol,r,i),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:s,fieldIndex:a,backgroundFillSymbol:S(l,r,i),defaultSymbol:S(r.defaultSymbol,r,i),intervals:d,normalizationField:r.normalizationField,normalizationTotal:r.normalizationTotal,normalizationType:u,isMaxInclusive:r.isMaxInclusive}}function Y(e,t,r,i=!1){const n=[],s=r.backgroundFillSymbol,a={target:t,context:{mesh:!0},resultType:"string"};if(r.field&&"string"!=typeof r.field)throw new l(x,"Expected renderer.field to be a string",r);const{field:o,fieldIndex:u}=P(e,{...a,field:r.field,valueExpression:r.valueExpression});for(const l of r.uniqueValueInfos)n.push({value:""+l.value,symbol:S(l.symbol,r,i)});return{type:"map",attributes:e.fields,field:o,fieldIndex:u,field2:P(e,{...a,field:r.field2}).field,field3:P(e,{...a,field:r.field3}).field,fieldDelimiter:r.fieldDelimiter,backgroundFillSymbol:S(s,r),defaultSymbol:S(r.defaultSymbol,r),map:n}}function Z(e,t,r=!1){return{type:"dictionary",renderer:t.toJSON()}}export{q as addAggregateFields,W as createMatcherSchema,k as createSchema,S as createSymbolSchema};
