/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"../../../../../core/has.js";import{isSome as e,isNone as t}from"../../../../../core/maybe.js";import s from"../../../../../core/Logger.js";import r from"../../../../../core/RandomLCG.js";import{throwIfAborted as o,after as i}from"../../../../../core/promiseUtils.js";import{FeatureSetReaderIndirect as a}from"../support/FeatureSetReaderPBFIndirect.js";import{UpdateToken as n}from"../support/UpdateToken.js";import{BaseFeatureSource as d}from"./BaseFeatureSource.js";const h=s.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource");function u(e,t,s){const r=e.getXHydrate(),o=e.getYHydrate(),i=t.getColumnForX(r),a=Math.floor(t.normalizeCol(i));return`${s}/${Math.floor(t.getRowForY(o))}/${a}`}function l(e,s){if(t(e))return null;const r=s.transform,o=e.getQuantizationTransform();if(t(o)){const[t,s]=r.scale,[o,i]=r.translate,a=-o/t,n=1/t,d=i/s,h=1/-s;return e.transform(a,d,n,h)}const[i,a]=o.scale,[n,d]=o.translate,[h,u]=r.scale,[l,c]=r.translate,_=i/h,g=(n-l)/h,p=a/u,m=(-d+c)/u;return e.transform(g,m,_,p)}class c extends d{constructor(e){super(e),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new r(1e3),this._featureCount=e.featureCount,this._store=e.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(e,t){super.update(e,t),this._hasAggregates=e.targets.aggregate}async resend(e=!1){if(await this._downloadPromise,this._invalidated||e)return this._invalidated=!1,this._subscriptions.forEach((e=>e.clear())),this._downloadPromise=this._download(this._featureCount),void await this._downloadPromise;const t=this._queries.map((({query:e,reader:t})=>this._sendPatchQuery(e,t)));await Promise.all(t),this._subscriptions.forEach((e=>{e.requests.done.forEach((e=>this._onMessage(e.message)))}))}async refresh(){await this.resend(!0)}async edit(e){const t=this._signal,s=[...e.addedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),...e.updatedFeatures.filter((e=>!e.error)).map((e=>e.objectId))],r=[...e.deletedFeatures.filter((e=>!e.error)).map((e=>e.objectId)),...s];for(const o of r)this._store.remove(o);const i=this.createQuery();i.objectIds=s;const a=await this._queue.push({query:i,depth:0,signal:t});o({signal:t}),this._store.insert(a),this._send(a),this._invalidateQueries()}_invalidateQueries(){this._invalidated=!0}async _sendPatchQuery(t,s){const r=e(t.outFields)?t.outFields:[],i=this._queryInfo.outFields,a=i.filter((e=>-1===r.indexOf(e)));if(!a.length)return;const n=t.clone(),d=this._signal;n.returnGeometry=!1,n.returnCentroid=!1,n.outFields=a,t.outFields=i;const h=await this._queue.push({query:n,depth:0,signal:d});o({signal:d}),s.joinAttributes(h)}async _fetchDataTile(e){this._downloadPromise||(this._downloadPromise=this._download(this._featureCount));const t=this._store.search(e),s=this._subscriptions.get(e.key.id),r=t.length-1;for(let h=0;h<r;h++){const r=l(t[h],e),o={type:"append",id:e.id,addOrUpdate:r,end:!1,status:n.empty()};s.add({query:null,message:o}),this._hasAggregates||await i(1),this._onMessage(o)}const o=l(r>=0?t[r]:null,e),a=this._didSendEnd,d={type:"append",id:e.id,addOrUpdate:o,end:a,status:n.empty()};s.add({query:null,message:d}),this._onMessage(d)}async _download(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const r=Math.ceil(e/this.pageSize),o=Array.from({length:r},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())).map((e=>this._downloadPage(e,t,s)));await Promise.all(o),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(t){h.error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",t)}this._sendEnd(),this._loading=!1}async _downloadPage(t,s,r){const i=this.pageSize,a={start:t*i,num:i,cacheHint:!0};e(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const n=this.createQuery(a),d=this._signal,h=await this._queue.push({query:n,depth:t,signal:d});o({signal:d}),this._queries.push({query:n,reader:h}),this._store.insert(h),r.add(h.instance);const u=h.getCursor();for(;u.next();)s.set(u.getDisplayId());this._send(h)}_send(s){if(!this._subscriptions.size)return;let r=null;const o=new Map,i=new Set,d=new Map;this._subscriptions.forEach((e=>{var t;const s=e.tile;o.set(s.key.id,null),r=s.tileInfoView,i.add(s.level);const{row:a,col:n}=s.key,h=`${s.level}/${a}/${n}`,u=null!=(t=d.get(h))?t:[];u.push(e),d.set(h,u)}));for(const e of i){const i=r.getLODInfoAt(e),a=s.getCursor();for(;a.next();){const s=u(a,i,e),r=a.getIndex();if(d.has(s))for(const e of d.get(s)){const s=e.tile.id;let i=o.get(s);t(i)&&(i=[],o.set(s,i)),i.push(r)}}}o.forEach(((t,r)=>{if(e(t)){const e=this._subscriptions.get(r),o={type:"append",id:r,addOrUpdate:l(a.from(s,t),e.tile),end:!1,status:n.empty()};e.add({query:null,message:o}),this._onMessage(o)}}))}_sendEnd(){this._subscriptions.forEach((e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:n.empty()};e.add({query:null,message:t}),this._onMessage(t)})),this._didSendEnd=!0}}export{c as SnapshotFeatureSource};
