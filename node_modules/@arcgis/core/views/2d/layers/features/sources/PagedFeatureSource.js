/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../../core/maybe.js";import t from"../../../../../core/Logger.js";import r from"../../../../../core/Error.js";import{isAbortError as a,throwIfAborted as s,throwIfNotAbortError as o}from"../../../../../core/promiseUtils.js";import{BaseFeatureSource as i}from"./BaseFeatureSource.js";const n=t.getLogger("esri.views.2d.layers.features.sources.FeatureSource");class d extends i{constructor(e){super(e)}async _fetchDataTile(e){const t=6,o=20,i=this._subscriptions.get(e.key.id);let d=!1,c=0,u=0;const p=(t,r)=>{u--,s(i);const a=e.id,o=t.reader,n=t.query;if(!o.exceededTransferLimit){if(d=!0,0!==r&&!o.hasFeatures){const e={id:a,addOrUpdate:o,end:0===u,type:"append"};return i.add({message:e,query:n}),void this._onMessage(e)}const e={id:a,addOrUpdate:o,end:0===u,type:"append"};return i.add({message:e,query:n}),void this._onMessage(e)}const c={id:a,addOrUpdate:o,end:d&&0===u,type:"append"};i.add({message:c,query:n}),this._onMessage(c)};let h=0,m=0;for(;!d&&m++<o;){let o;for(let t=0;t<h+1;t++){const t=c++;u++,o=this._fetchDataTilePage(e,t,i).then((e=>e&&p(e,t))).catch((t=>{d=!0,a(t)||(n.error(new r("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t})),this._onMessage({id:e.id,addOrUpdate:null,end:d,type:"append"}))}))}await o,s(i),h=Math.min(h+2,t)}}async _fetchDataTilePage(t,r,a){const i=this._queryInfo,n={start:this.pageSize*r,num:this.pageSize,returnExceededLimitFeatures:!0,quantizationParameters:t.getQuantizationParameters()};e(this.maxRecordCountFactor)&&(n.maxRecordCountFactor=this.maxRecordCountFactor);const d=this._createQuery(t,n);try{const e=a.signal,o=await this._queue.push({tile:t,query:d,signal:e,depth:r});return s(a),o?i!==this._queryInfo?this._fetchDataTilePage(t,r,a):{reader:o,query:d}:null}catch(c){return o(c),null}}}export{d as PagedFeatureSource};
