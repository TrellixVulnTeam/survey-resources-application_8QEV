/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isSome as i,isNone as t}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{queryToObject as o,objectToQuery as l}from"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import r from"../../../geometry/SpatialReference.js";import{canProject as n,project as h}from"../../../geometry/support/webMercatorUtils.js";import p from"../../../geometry/Extent.js";import m from"../../../core/Collection.js";import{version as c}from"../../../kernel.js";import d from"../../../request.js";import y from"../../../core/Handles.js";import{load as u,project as w}from"../../../geometry/projection.js";import{parseUrl as g}from"../../../rest/utils.js";import{GraphicsCollection as _}from"../../../support/GraphicsCollection.js";import{getGraphics as V,fetchService as b,parseKML as f}from"../../../layers/support/kmlUtils.js";import v from"../../layers/LayerView.js";import S from"./graphics/GraphicsView2D.js";import I from"./graphics/GraphicContainer.js";import{Bitmap as x}from"../engine/Bitmap.js";import{BitmapContainer as P}from"../engine/BitmapContainer.js";import{LayerView2DMixin as k}from"./LayerView2D.js";class j{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let C=class extends(k(v)){constructor(){super(...arguments),this._handles=new y,this._bitmapIndex=new Map,this._mapImageContainer=new P,this._kmlVisualData=new j,this.allVisiblePoints=new _,this.allVisiblePolylines=new _,this.allVisiblePolygons=new _,this.allVisibleMapImages=new m}hitTest(e,i){if(this.suspended||!this._pointsView&&!this._polylinesView&&!this._polygonsView)return Promise.resolve(null);const t=[this._pointsView.hitTest(e,i),this._polylinesView.hitTest(e,i),this._polygonsView.hitTest(e,i)];return Promise.all(t).then((e=>e.filter((e=>(e&&(e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new S({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new I(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new S({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new I(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new S({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new I(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(e=>{for(const[i,t]of this._kmlVisualData.allSublayers)t.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1)}this._refreshCollections()})),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating")}))}detach(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&d(e.href,{responseType:"image"}).then((({data:i})=>{let t=p.fromJSON(e.extent);n(t,this.view.spatialReference)&&(t=h(t,this.view.spatialReference));const s=new x(i,"standard");s.x=t.xmin,s.y=t.ymax,s.resolution=t.width/i.naturalWidth,s.rotation=e.rotation,this._mapImageContainer.addChild(s),this._bitmapIndex.set(e,s)}))}async _getViewDependentUrl(e,s){const{viewFormat:a,viewBoundScale:n,httpQuery:h}=e;if(i(a)){if(t(s))throw new Error("Loading this network link requires a view state.");let m;if(await u(),i(n)&&1!==n){const e=new p(s.extent);e.expand(n),m=e}else m=s.extent;m=w(m,r.WGS84);const d=w(m,r.WebMercator),y=m.xmin,_=m.xmax,V=m.ymin,b=m.ymax,f=s.size[0]*s.pixelRatio,v=s.size[1]*s.pixelRatio,S=Math.max(d.width,d.height),I={"[bboxWest]":y.toString(),"[bboxEast]":_.toString(),"[bboxSouth]":V.toString(),"[bboxNorth]":b.toString(),"[lookatLon]":m.center.x.toString(),"[lookatLat]":m.center.y.toString(),"[lookatRange]":S.toString(),"[lookatTilt]":"0","[lookatHeading]":s.rotation.toString(),"[lookatTerrainLon]":m.center.x.toString(),"[lookatTerrainLat]":m.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":m.center.x.toString(),"[cameraLat]":m.center.y.toString(),"[cameraAlt]":S.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":f.toString(),"[vertPixels]":v.toString(),"[terrainEnabled]":"0","[clientVersion]":c,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},x=e=>{for(const i in e)for(const t in I)e[i]=e[i].replace(t,I[t])},P=o(a);x(P);let k={};i(h)&&(k=o(h),x(k));const j=g(e.href);j.query={...j.query,...P,...k};return`${j.path}?${l(P)}`}return e.href}async _fetchService(){const e=new j;await this._loadVisualData(this.layer.url,e),this._kmlVisualData=e,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)))}_isSublayerVisible(e){const i=this._kmlVisualData.allSublayers.get(e);return!!i.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(e,i){return this._fetchParsedKML(e).then((async e=>{for(const t of e.sublayers){i.allSublayers.set(t.id,t);const e=t.points?await V(t.points):[],s=t.polylines?await V(t.polylines):[],a=t.polygons?await V(t.polygons):[],o=t.mapImages||[];if(i.allPoints.push(...e.map((e=>({item:e,sublayerId:t.id})))),i.allPolylines.push(...s.map((e=>({item:e,sublayerId:t.id})))),i.allPolygons.push(...a.map((e=>({item:e,sublayerId:t.id})))),i.allMapImages.push(...o.map((e=>({item:e,sublayerId:t.id})))),t.networkLink){const e=await this._getViewDependentUrl(t.networkLink,this.view.state);await this._loadVisualData(e,i)}}}))}_fetchParsedKML(e){return b(e,this.view.spatialReference,this.layer.refreshInterval).then((e=>f(e.data)))}_removeMapImage(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e))}};e([s()],C.prototype,"_pointsView",void 0),e([s()],C.prototype,"_polylinesView",void 0),e([s()],C.prototype,"_polygonsView",void 0),e([s()],C.prototype,"_fetchingPromise",void 0),e([s()],C.prototype,"updating",void 0),C=e([a("esri.views.2d.layers.KMLLayerView2D")],C);var M=C;export default M;
