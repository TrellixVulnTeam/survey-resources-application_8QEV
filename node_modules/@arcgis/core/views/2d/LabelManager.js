/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import t from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import r from"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import o from"../../core/Accessor.js";import{HandleOwnerMixin as a}from"../../core/HandleOwner.js";import{throttle as l}from"../../core/throttle.js";import{CollisionEngine as p}from"./engine/webgl/collisions/CollisionEngine.js";import{LayerViewSorter as n}from"./engine/webgl/collisions/LayerViewSorter.js";const d=32,u=t.getLogger("esri.views.2d.layers.labels.LabelManager");let c=class extends(a(o)){constructor(e){super(e),this._applyVisibilityPassThrottled=l(this._applyVisibilityPass,d,this),this.lastUpdateId=-1,this.updateRequested=!1,this.view=null}initialize(){this.collisionEngine=new p(this.view.featuresTilingScheme),this._layerViewSorter=new n(((e,t)=>{this.collisionEngine.registerLayerView(e,t),this.requestUpdate()}),(e=>{this.collisionEngine.unregisterLayerView(e),this.requestUpdate()})),this.handles.add(this.view.allLayerViews.on("change",(e=>{this._layerViewSorter.update(e)})))}destroy(){this._layerViewSorter.destroy(),this._layerViewSorter=null,this.collisionEngine=null,this._applyVisibilityPassThrottled.remove(),this._applyVisibilityPassThrottled=null}get updating(){return this.updateRequested}update(e){this._applyVisibilityPassThrottled(e)}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}processUpdate(e){this._set("updateParameters",e),this.updateRequested&&(this.updateRequested=!1,this.update(e))}_applyVisibilityPass(e){try{const t=this.view.featuresTilingScheme.getClosestInfoForScale(e.state.scale).level;this.collisionEngine.run(e,t)}catch(t){u.error(new r("mapview-labeling","Encountered an error during label decluttering",t))}}};e([s()],c.prototype,"updateRequested",void 0),e([s({readOnly:!0})],c.prototype,"updateParameters",void 0),e([s()],c.prototype,"updating",null),e([s()],c.prototype,"view",void 0),c=e([i("esri.views.2d.layers.labels.LabelManager")],c);var h=c;export default h;
