/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"../../../core/has.js";import{isSome as e,isNone as t}from"../../../core/maybe.js";import"../../../core/mathUtils.js";import{c as r}from"../../../chunks/vec3f64.js";import{s,f as i}from"../../../chunks/vec3.js";import"../../../chunks/builtins.js";import{glLayout as o}from"./buffer/glUtil.js";import{newLayout as u}from"./buffer/InterleavedLayout.js";import f from"../../webgl/BufferObject.js";import n from"../../webgl/VertexArrayObject.js";import"../../webgl/FramebufferObject.js";import{LaserlinePathTechnique as a}from"../webgl-engine/shaders/LaserlinePathTechnique.js";class c{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=r(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const t=new Float64Array(3*e.length);let r=0;for(const s of e)t[r++]=s[0],t[r++]=s[1],t[r++]=s[2];this.buffers=[t]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const e=this._buffers[0],t=3*Math.floor(e.length/3/2);s(this._origin,e[t+0],e[t+1],e[t+2])}else s(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(t){const r=this.ensureVAO(t);e(r)&&(t.bindVAO(r),t.drawArrays(4,0,this._count))}dispose(){e(this._vao)&&this._vao.dispose()}ensureVAO(e){return t(this._buffers)?null:(t(this._vao)&&(this._vao=this.createVAO(e,this._buffers)),this.ensureVertexData(this._vao,this._buffers),this._vao)}createVAO(e,t){const r=this.createDataBuffer(t);return this._dirty=!1,new n(e,a.attributeLocations,{data:o(d)},{data:f.createVertex(e,35044,r)})}ensureVertexData(e,t){if(!this._dirty)return;const r=this.createDataBuffer(t);e.vertexBuffers.data.setData(r),this._dirty=!1}numberOfRenderVertices(e){return 3*(2*(e.length/3-1))}createDataBuffer(e){const t=e.reduce(((e,t)=>e+this.numberOfRenderVertices(t)),0);this._count=t;const r=d.createBuffer(t),o=this._origin;let u=0,f=0;for(const n of e){for(let e=0;e<n.length;e+=3){const t=s(l,n[e+0],n[e+1],n[e+2]);0===e?f=this._renderCoordsHelper.getAltitude(t):this._renderCoordsHelper.setAltitude(f,t);const a=this._renderCoordsHelper.worldUpAtPosition(t,h),c=u+2*e,d=i(l,t,o);if(e<n.length-3){r.up.setVec(c,a),r.up.setVec(c+3,a),r.up.setVec(c+5,a);for(let e=0;e<6;e++)r.start.setVec(c+e,d);r.extrude.setValues(c+0,0,-1),r.extrude.setValues(c+1,1,-1),r.extrude.setValues(c+2,1,1),r.extrude.setValues(c+3,0,-1),r.extrude.setValues(c+4,1,1),r.extrude.setValues(c+5,0,1)}if(e>0){r.up.setVec(c-2,a),r.up.setVec(c-4,a),r.up.setVec(c-5,a);for(let e=-6;e<0;e++)r.end.setVec(c+e,d)}}u+=this.numberOfRenderVertices(n)}return r.buffer}}const h=r(),l=r(),d=u().vec3f("start").vec3f("end").vec3f("up").vec2f("extrude");export{c as LaserlinePathData};
