/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{asinClamped as t,acosClamped as n,clamp as i}from"../../../core/mathUtils.js";import{c as o}from"../../../chunks/vec3f64.js";import{s,d as r,n as a,c,l as h,a as e,b as u,e as f,f as M}from"../../../chunks/vec3.js";function m(t,n){return t>n?Math.cos(n):Math.cos(t)}function l(t,n,i){return 2*Math.atan(i*Math.tan(.5*t)/n)}function d(t,n,i){return 2*Math.atan(n*Math.tan(.5*t)/i)}function z(t){const n=t[0]*t[0]+t[4]*t[4]+t[8]*t[8],i=t[1]*t[1]+t[5]*t[5]+t[9]*t[9],o=t[2]*t[2]+t[6]*t[6]+t[10]*t[10];return Math.sqrt(Math.max(Math.max(n,i),o))}function b(t,n){const i=Math.sqrt(n[0]*n[0]+n[4]*n[4]+n[8]*n[8]),o=Math.sqrt(n[1]*n[1]+n[5]*n[5]+n[9]*n[9]),r=Math.sqrt(n[2]*n[2]+n[6]*n[6]+n[10]*n[10]);return s(t,i,o,r),t}function g(t,n,i){i=i||t;const o=r(t,n);s(i,t[0]-o*n[0],t[1]-o*n[1],t[2]-o*n[2]),a(i,i)}function x(t,n,i){Math.abs(t[0])>Math.abs(t[1])?s(n,0,1,0):s(n,1,0,0),c(i,t,n),a(n,n),c(n,i,t),a(i,i)}function p(t,n){return(t%n+n)%n}function q(n,i){const o=h(n),r=t(n[2]/o),a=Math.atan2(n[1]/o,n[0]/o);return s(i,o,r,a),i}function j(t,n){const i=t[0],o=t[1],r=t[2],a=Math.cos(o);s(n,i*a*Math.cos(r),i*a*Math.sin(r),i*Math.sin(o))}function w(t,n,i){const o=i[0]-n[0],s=i[1]-n[1],r=i[2]-n[2];let a=o*o+s*s+r*r;return a?(a=1/Math.sqrt(a),t[0]=o*a,t[1]=s*a,t[2]=r*a,t):(t[0]=0,t[1]=0,t[2]=0,t)}function I(t,n,i,o,s,r){const a=t+(n-t)*s;return a+(i+(o-i)*s-a)*r}function P(t,n,i,s=o()){const a=h(t),c=h(n),M=r(t,n)/(a*c);if(M<.9999999999999999){const o=Math.acos(M),r=((1-i)*a+i*c)/Math.sin(o),h=r/a*Math.sin((1-i)*o),f=r/c*Math.sin(i*o);return e(G,t,h),e(H,n,f),u(s,G,H)}return f(s,t,n,i)}function _(t,n,i,s=o(),c=o()){const m=h(t),l=h(n),d=r(t,n)/(m*l);if(d<.9999999999999999){const o=Math.acos(d),r=Math.sin(o),a=Math.sin(i*o),h=Math.sin((1-i)*o),f=(1-i)*m+i*l;{const i=f/r,o=i/l*a;e(G,t,i/m*h),e(H,n,o),u(s,G,H)}{const s=1/m*(-Math.cos((1-i)*o)*o*f+h*(-m+l));e(G,t,s);const M=1/l*(Math.cos(i*o)*o*f+a*(-m+l));e(H,n,M),u(c,G,H),e(c,c,1/r)}return c}return f(s,t,n,i),M(c,n,t),a(c,c),c}function k(t,i,o){t=a(G,t),i=a(H,i);const s=n(r(t,i));if(o){const n=c(E,t,i);if(r(n,o)<0)return-s}return s}function v(t){const n=t.length;return function(i){if(i<=t[0][0])return t[0][1];if(i>=t[n-1][0])return t[n-1][1];let o=1;for(;i>t[o][0];)o++;const s=t[o-1][0],r=t[o][0],a=(r-i)/(r-s);return a*t[o-1][1]+(1-a)*t[o][1]}}class D{constructor(t,n){this.min=t,this.max=n,this.range=n-t}ndiff(t,n=0){return Math.ceil((t-n)/this.range)*this.range+n}_normalize(t,n,i,o=0,s=!1){return(i-=o)<t?i+=this.ndiff(t-i):i>n&&(i-=this.ndiff(i-n)),s&&i===n&&(i=t),i+o}normalize(t,n=0,i=!1){return this._normalize(this.min,this.max,t,n,i)}clamp(t,n=0){return i(t-n,this.min,this.max)+n}monotonic(t,n,i){return t<n?n:n+this.ndiff(t-n,i)}minimalMonotonic(t,n,i){return this._normalize(t,t+this.range,n,i)}center(t,n,i){return n=this.monotonic(t,n,i),this.normalize((t+n)/2,i)}diff(t,n,i){return this.monotonic(t,n,i)-t}shortestSignedDiff(t,n){t=this.normalize(t);const i=(n=this.normalize(n))-t,o=n<t?this.minimalMonotonic(t,n)-t:n-this.minimalMonotonic(n,t);return Math.abs(i)<Math.abs(o)?i:o}contains(t,n,i){return n=this.minimalMonotonic(t,n),(i=this.minimalMonotonic(t,i))>t&&i<n}}function F(t,n,i,o){M(S,n,t),M(U,i,t),c(o,S,U),a(o,o),o[3]=-r(t,o)}const S=o(),U=o();function y(t){for(const n in t){const i=t[n];i instanceof Function&&(t[n]=i.bind(t))}return t}const A=y(new D(0,2*Math.PI)),B=y(new D(-Math.PI,Math.PI)),C=y(new D(0,360)),E=o(),G=o(),H=o();export{D as Cyclical,k as angle,I as bilerp,q as cartesianToSpherical,m as cosCapped,A as cyclical2PI,C as cyclicalDeg,B as cyclicalPI,w as directionFromTo,l as fovx2fovy,d as fovy2fovx,g as makeOrthonormal,v as makePiecewiseLinearFunction,z as maxScale,p as moduloPositive,F as planeFromPoints,b as scaleFromMatrix,P as slerp,_ as slerpTangent,j as sphericalToCartesian,x as tangentFrame};
