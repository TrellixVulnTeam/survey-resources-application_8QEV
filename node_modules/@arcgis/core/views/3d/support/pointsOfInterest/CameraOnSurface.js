/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as e}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{createAbortController as o,isAbortError as i}from"../../../../core/promiseUtils.js";import s from"../../../../geometry/Point.js";import{c as n}from"../../../../chunks/vec3f64.js";import{k as a,g as d,m as p}from"../../../../chunks/vec3.js";import{on as c}from"../../../../core/watchUtils.js";import{distanceToScale as l}from"../cameraUtils.js";import{PropertiesPool as h}from"../PropertiesPool.js";import{PointOfInterest as u}from"./PointOfInterest.js";const m=Array;let y=class extends u{constructor(t){super(t),this._dirty=!1,this._propertiesPool=new h({location:s,renderLocation:m},this),this._estimatedSurfaceAltitude=0,this._pendingElevationQueryController=null,this.cameraName="camera",this.renderLocation=n(),this.tmpPoint=new s}initialize(){if(this.scheduler&&this.handles.add(this.scheduler.registerTask(this.task,(()=>this._update()),(()=>this._needsUpdate()))),this._update(),this.map){const t=()=>this._setDirty();this.handles.add(c(this.map,"ground.layers","change",t,t,t))}}destroy(){this._cancelPendingRequest(),this._propertiesPool.destroy(),this._propertiesPool=null}get _camera(){return this.state[this.cameraName]}get location(){const t=this._propertiesPool.get("location");return this.renderCoordsHelper.fromRenderCoords(this.renderLocation,t,this.state.spatialReference),t}get scale(){const t=this._camera,e=a(t.eye,this.renderLocation),r={renderCoordsHelper:this.renderCoordsHelper,state:{camera:t}};return l(r,e,0)}get updating(){return this._dirty||null!=this._pendingElevationQueryController}updateRenderLocation(){this._setDirty(),this._updateRenderLocation()}update(){this._update(),this._updateRenderLocation()}_setDirty(){this._dirty||(this._dirty=!0,this.notifyChange("updating"))}_needsUpdate(){return!this._pendingElevationQueryController&&this._dirty}_cancelPendingRequest(){const t=this._pendingElevationQueryController;t&&(this._pendingElevationQueryController=null,t.abort(),this.notifyChange("updating"))}_update(){if(this._cancelPendingRequest(),this._dirty=!1,this.notifyChange("updating"),!this.map||!this.map.ground)return void this._updateSurfaceAltitude(0);this.renderCoordsHelper.fromRenderCoords(this._camera.eye,this.tmpPoint,this.state.spatialReference);let t=o();this.map.ground.queryElevation(this.tmpPoint,{signal:t.signal,cache:this.cache}).then((t=>this._updateSurfaceAltitude(t.geometry.z))).catch((t=>{i(t)||this._updateSurfaceAltitude(0)})).catch((()=>{})).then((()=>{this._pendingElevationQueryController===t&&(this._pendingElevationQueryController=null,this.notifyChange("updating")),t=null})),this._pendingElevationQueryController=t}_updateSurfaceAltitude(t){this._estimatedSurfaceAltitude!==t&&(this._estimatedSurfaceAltitude=t,this._updateRenderLocation())}_updateRenderLocation(){d(_,this._camera.eye),this.renderCoordsHelper.setAltitude(this._estimatedSurfaceAltitude,_),p(this._get("renderLocation"),_)||this._set("renderLocation",d(this._propertiesPool.get("renderLocation"),_))}};t([e({constructOnly:!0})],y.prototype,"scheduler",void 0),t([e({constructOnly:!0})],y.prototype,"cache",void 0),t([e({constructOnly:!0})],y.prototype,"task",void 0),t([e({constructOnly:!0})],y.prototype,"cameraName",void 0),t([e({readOnly:!0})],y.prototype,"location",null),t([e({constructOnly:!0})],y.prototype,"map",void 0),t([e({readOnly:!0})],y.prototype,"renderLocation",void 0),t([e({readOnly:!0})],y.prototype,"scale",null),t([e({readOnly:!0})],y.prototype,"updating",null),y=t([r("esri.views.3d.support.CameraOnSurface")],y);const _=n();var g=y;export default g;export{y as CameraOnSurface};
