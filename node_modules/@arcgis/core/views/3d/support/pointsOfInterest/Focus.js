/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as t}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import o from"../../../../geometry/Point.js";import{clamp as s}from"../../../../core/mathUtils.js";import{createRenderScreenPointArray3 as n}from"../../../../core/screenUtils.js";import{c as i}from"../../../../chunks/vec3f64.js";import{d as c,g as a,e as p,x as d,f as l,n as u}from"../../../../chunks/vec3.js";import{ray as m}from"../geometryUtils.js";import{PropertiesPool as f}from"../PropertiesPool.js";import{PointOfInterest as h}from"./PointOfInterest.js";const y=Array;let g=class extends h{constructor(e){super(e),this._propertiesPool=new f({location:o,renderLocation:y},this)}destroy(){this._propertiesPool.destroy(),this._propertiesPool=null}get location(){const e=this._propertiesPool.get("location");return this.renderCoordsHelper.fromRenderCoords(this.renderLocation,e,this.state.spatialReference),e}get renderLocation(){const e=this.centerOnSurface.renderLocation,r=this.renderCoordsHelper,t=this.calculateScreenHorizontalEdgeOnSurface(O),o=this.state.camera;r.worldUpAtPosition(e,j);const n=Math.max(0,(Math.acos(c(j,o.viewForward))-.5*Math.PI)*(o.aboveGround?1:-1)),i=this._propertiesPool.get("renderLocation");if(Number.isNaN(n))a(i,e);else{const r=1-s(n/(.5*Math.PI),0,1);p(i,e,t,r*r*r)}const l=this._get("renderLocation");return l&&d(l,i)?l:i}calculateScreenHorizontalEdgeOnSurface(e){const r=this.state.camera,t=r.getRenderCenter(n());if(t[1]=r.aboveGround?r.padding[2]:r.fullHeight-r.padding[0],this.estimateSurfaceIntersectionAtRenderPoint(t,e))return e;const o=this.renderCoordsHelper.getAltitude(this.centerOnSurface.renderLocation);if(r.unprojectFromRenderScreen(t,S)){l(S,S,r.eye);const t=u(S,S);if(this.renderCoordsHelper.intersectManifold(m.wrap(r.eye,t),o,e))return e}return a(e,r.eye),this.renderCoordsHelper.setAltitude(o,e),e}update(){}updateRenderLocation(){}};e([r({constructOnly:!0})],g.prototype,"centerOnSurface",void 0),e([r({constructOnly:!0})],g.prototype,"estimateSurfaceIntersectionAtRenderPoint",void 0),e([r({readOnly:!0})],g.prototype,"location",null),e([r({readOnly:!0})],g.prototype,"renderLocation",null),e([r({readOnly:!0,aliasOf:"centerOnSurface.updating"})],g.prototype,"updating",void 0),g=e([t("esri.views.3d.support.CenterOnSurface")],g);const j=i(),S=i(),O=i();var P=g;export default P;export{g as Focus};
