/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{unwrap as t,isNone as r}from"../../../../core/maybe.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as n}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import i from"../../../../core/Accessor.js";import{c as o}from"../../../../chunks/vec3f64.js";import{b as a,m as c,g as u}from"../../../../chunks/vec3.js";import h from"../../../../core/Handles.js";import{init as d}from"../../../../core/watchUtils.js";import{Task as p}from"../../../support/Scheduler.js";import{c as f,f as l}from"../../../../chunks/ray.js";import{TERRAIN_ID as m}from"../../webgl-engine/lib/intersectorUtils.js";import{Intersector as _}from"../../webgl-engine/lib/Intersector.js";import y from"../debugFlags.js";import{PropertiesPool as C}from"../PropertiesPool.js";import{GraphicsHandle as O}from"../debugUtils.js";import A from"./CameraOnSurface.js";import w from"./CenterOnSurface.js";import{ContentGeometryUpdates as g}from"./ContentGeometryUpdates.js";import S from"./Focus.js";import{StableSurfaceCenter as I}from"./StableSurfaceCenter.js";import v from"./SurfaceGeometryUpdates.js";let b=class extends i{constructor(e){super(e),this._handles=new h,this._tmpRay=f(),this._centerRayDirty=!0,this._surfaceAltitudeAtCenter=0,this._surfaceAltitudeAtCenterDirty=!0,this._contentAltitudeAtCenter=0,this._contentAltitudeAtCenterDirty=!0,this._propertiesPool=new C({renderPointOfView:R},this),this.renderPointOfView=o(),this._pois=new Array,this._debugCenters=new Map}initialize(){var e;const{state:r,basemapTerrain:s,renderCoordsHelper:n,map:i}=this.view;this._surfaceIntersector=new _(r.mode),r.isGlobal?this._surfaceIntersector.options.backfacesTerrain=!1:this._surfaceIntersector.options.backfacesTerrain=!0,this._surfaceIntersector.options.invisibleTerrain=!1,this._contentIntersector=new _(r.mode);const o=()=>this._estimateSurfaceAltitudeAtCenter(),a=this.view.resourceController.scheduler,c=t(null==(e=this.view.basemapTerrain)?void 0:e.elevationQueryCache),u={state:r,scheduler:a,surface:s,renderCoordsHelper:n};this._set("centerOnSurfaceInfrequent",new w({...u,task:p.POINT_OF_INTEREST_INFREQUENT,estimateSurfaceAltitudeAtCenter:o})),this._set("centerOnSurfaceFrequent",new w({...u,task:p.POINT_OF_INTEREST_FREQUENT,estimateSurfaceAltitudeAtCenter:o})),this._set("centerOnContent",new w({...u,task:p.POINT_OF_INTEREST_FREQUENT,estimateSurfaceAltitudeAtCenter:()=>this._estimateContentAltitudeAtCenter()})),this._set("cameraOnSurface",new A({...u,cache:c,task:p.POINT_OF_INTEREST_INFREQUENT,map:i})),this._set("contentCameraOnSurface",new A({...u,cache:c,task:p.POINT_OF_INTEREST_INFREQUENT,map:i,cameraName:"contentCamera"})),this._set("surfaceGeometryUpdates",new v({...u,centerOnSurfaces:[this.centerOnSurfaceFrequent,this.centerOnContent,this.centerOnSurfaceInfrequent]})),this._set("contentGeometryUpdates",new g({contentLayerViews:this.view.allLayerViews,renderCoordsHelper:n})),this._set("surfaceOrigin",new I({cache:c,view:this.view})),this._set("focus",new S({state:r,surface:s,renderCoordsHelper:n,centerOnSurface:this.centerOnSurfaceFrequent,estimateSurfaceIntersectionAtRenderPoint:(e,t)=>this._estimateSurfaceIntersectionAtRenderPoint(e,t)})),this._pois.push(this.centerOnContent,this.centerOnSurfaceFrequent,this.centerOnSurfaceInfrequent,this.cameraOnSurface,this.contentCameraOnSurface,this.focus);const h=this.view.graphics;this._debugCenters.set(this.centerOnContent,new O(h,"red","CenterOnContent")),this._debugCenters.set(this.centerOnSurfaceFrequent,new O(h,"red","CenterOnSurface")),this._debugCenters.set(this.cameraOnSurface,new O(h,"blue","CameraOnSurface")),this._debugCenters.set(this.contentCameraOnSurface,new O(h,"blue","CameraOfInterestOnSurface")),this._debugCenters.set(this.focus,new O(h,"green","Focus")),this._handles.add([r.watch("camera",(e=>this._cameraChanged(e)),!0),s.watch("extent",(()=>this._updateCenterPointsOfInterest())),this.surfaceGeometryUpdates.events.on("request-update",(()=>this._updateCenterPointsOfInterest())),this.contentGeometryUpdates.events.on("request-update",(()=>this._updateCenterOnContent())),d(y,"SHOW_POI",(e=>this._setDebug(e)))]),this._cameraChanged(this.view.state.camera);for(const t of this._pois)t.update()}destroy(){this._setDebug(!1),this._handles.destroy(),this._propertiesPool.destroy();for(const e of this._pois)e.destroy();this.surfaceOrigin.destroy()}get updating(){var e;return!!(null!=(e=this.surfaceGeometryUpdates)&&e.updating||this._pois.some((e=>e.updating)))}get centerRay(){return this._centerRayDirty&&(this._centerRay=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(this.view.state.camera,this._tmpRay),this._centerRayDirty=!1),this._centerRay}_estimateContentAltitudeAtCenter(){if(!this._contentAltitudeAtCenterDirty)return this._contentAltitudeAtCenter;this._contentAltitudeAtCenterDirty=!1;const e=this.centerRay;return r(e)||(this.view.sceneIntersectionHelper.intersectRay(e,this._contentIntersector,T,P)?this._contentAltitudeAtCenter=this.view.renderCoordsHelper.getAltitude(T):this._contentAltitudeAtCenter=this._estimateSurfaceAltitudeAtCenter()),this._contentAltitudeAtCenter}_estimateSurfaceAltitudeAtCenter(){if(!this.view.basemapTerrain)return 0;if(!this._surfaceAltitudeAtCenterDirty)return this._surfaceAltitudeAtCenter;this._surfaceAltitudeAtCenterDirty=!1;const e=this.centerRay;if(r(e))return this._surfaceAltitudeAtCenter;const t=e.origin,s=a(T,e.origin,e.direction);return this._surfaceIntersector.resetWithRay(e),this._surfaceIntersector.intersect(null,null,this.view.state.camera),this.view.basemapTerrain.intersect(this._surfaceIntersector,null,t,s),this._surfaceIntersector.results.min.getIntersectionPoint(T)&&(this._surfaceAltitudeAtCenter=this.view.renderCoordsHelper.getAltitude(T)),this._surfaceAltitudeAtCenter}_estimateSurfaceIntersectionAtRenderPoint(e,t){const s=l(this.view.state.camera,e,j);if(r(s))return null;const n=s.origin,i=a(T,s.origin,s.direction);return this._surfaceIntersector.resetWithRay(s),this._surfaceIntersector.intersect(null,null,this.view.state.camera),this.view.basemapTerrain.intersect(this._surfaceIntersector,null,n,i),this._surfaceIntersector.results.min.getIntersectionPoint(t)?t:null}_cameraChanged(e){this._updateCenterPointsOfInterest();const t=e.eye;c(this.renderPointOfView,t)||this._set("renderPointOfView",u(this._propertiesPool.get("renderPointOfView"),t))}_updateCenterPointsOfInterest(){this._centerRayDirty=!0,this._surfaceAltitudeAtCenterDirty=!0,this._contentAltitudeAtCenterDirty=!0;for(const e of this._pois)e.updateRenderLocation()}_updateCenterOnContent(){this._contentAltitudeAtCenterDirty=!0,this.centerOnContent.updateRenderLocation()}_setDebug(e){if(!e)return this._debugCenters.forEach((e=>e.remove())),void this._handles.remove("debug");for(const t of this._pois)this._handles.add(d(t,"renderLocation",(e=>this._debugCenters.get(t).showPoint(e,t.renderCoordsHelper.spatialReference))),"debug")}get test(){return{update:()=>{this.surfaceGeometryUpdates.update();for(const e of this._pois)e.update()},surfaceGeometryUpdates:this.surfaceGeometryUpdates}}};e([s({readOnly:!0})],b.prototype,"centerOnContent",void 0),e([s({readOnly:!0})],b.prototype,"centerOnSurfaceFrequent",void 0),e([s({readOnly:!0})],b.prototype,"centerOnSurfaceInfrequent",void 0),e([s({readOnly:!0})],b.prototype,"cameraOnSurface",void 0),e([s({readOnly:!0})],b.prototype,"contentCameraOnSurface",void 0),e([s({readOnly:!0})],b.prototype,"focus",void 0),e([s({readOnly:!0})],b.prototype,"renderPointOfView",void 0),e([s({readOnly:!0})],b.prototype,"surfaceOrigin",void 0),e([s({readOnly:!0})],b.prototype,"contentGeometryUpdates",void 0),e([s({readOnly:!0})],b.prototype,"surfaceGeometryUpdates",void 0),e([s({constructOnly:!0})],b.prototype,"view",void 0),e([s({readOnly:!0})],b.prototype,"updating",null),b=e([n("esri.views.3d.support.PointsOfInterest")],b);const R=Array,T=o(),j=f(),P={exclude:new Set([m])};var E=b;export default E;export{b as PointsOfInterest};
