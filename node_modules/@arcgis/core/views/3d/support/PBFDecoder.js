/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../../../geometry/SpatialReference.js";import r from"../../../Graphic.js";import{Task as s}from"../../support/Scheduler.js";import t from"../../../layers/support/Field.js";import{WorkerHandle as o}from"../../../core/workers/WorkerHandle.js";class a{constructor(e){this._handle=new i(e),this._frameTask=e.registerTask(s.REMOTE_CLIENT,(e=>this._frameTask.processQueue(e)),(()=>!1))}destroy(){this._frameTask.remove(),this._handle.destroy()}invoke(s,o){return s.buffer&&0!==s.buffer.byteLength?(s.options.sourceSpatialReference&&s.options.sourceSpatialReference instanceof e&&(s.options={...s.options,sourceSpatialReference:s.options.sourceSpatialReference.toJSON()}),this._handle.invoke(s,o).then((s=>this._frameTask.schedule((()=>{if(s.spatialReference=e.fromJSON(s.spatialReference),s.fields)for(let e=0;e<s.fields.length;e++)s.fields[e]=t.fromJSON(s.fields[e]);const o=s.spatialReference;for(const e of s.features)e.uid=r.generateUID(),e.geometry&&(e.geometry.spatialReference=o);return s}))))):Promise.resolve(null)}}class i extends o{constructor(e){super("PBFDecoderWorker","_parseFeatureQuery",e)}getTransferList(e){return[e.buffer]}}export{a as PBFDecoder};
