/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{c as t}from"../../../../chunks/vec3f64.js";import{s as n,d as e,g as o,n as r,c as u}from"../../../../chunks/vec3.js";import{getReferenceEllipsoid as i}from"../../../../geometry/projectionEllipsoid.js";import{c as a}from"../../../../chunks/mat4.js";import{sphere as s,boundedPlane as c}from"../geometryUtils.js";function l(t){const{value:n,operations:e}=t;return{operations:e,value:e.create(n)}}function f(t,n,e){return t.operations.setExtent(t.value,n,e.value),e}function p(t){return{operations:t,value:t.create()}}function v(t,n,e=p(t)){return e.operations=t,t.copy(n,e.value),e}function m(t){return v(s,s.fromValues(0,0,0,i(t).radius))}const d=2**50;function h(){return v(c,c.fromValues([0,0,0],[d,0,0],[0,d,0]))}function j(t,n){return U.operations=t,U.value=n,U}function y(t,n,e){return t.operations.axisAt(t.value,n,2,e)}function A(t,n,e,o){return t.operations.axisAt(t.value,n,e,o)}function x(t,n,e){return t.operations.intersectRay(t.value,n,e)}function g(t,n){return t.operations.intersectRay(t.value,n,null)}function k(t,n,e){return t.operations.closestPoint(t.value,n,e)}function R(t,n,e){return t.operations.intersectRayClosestSilhouette(t.value,n,e)}function S(t,n,e){return t.operations.closestPointOnSilhouette(t.value,n,e)}function E(t,n){return t.operations.distanceToSilhouette(t.value,n)}function P(t,n){return t.operations.altitudeAt(t.value,n)}function V(t,n,e,o){return t.operations.setAltitudeAt(t.value,n,e,o)}function C(t,e,o,r){return e!==r&&a(r,e),n(T,r[12],r[13],r[14]),V(t,T,o,T),r[12]=T[0],r[13]=T[1],r[14]=T[2],r}function O(t,n,e){return t.operations.elevate(t.value,n,e.value)}const T=t(),U={operations:null,value:null};function b(t,n,o,r,u){return u[0]=e(t,n),u[1]=e(t,o),u[2]=e(t,r),u}function q(t,n,e,i,a){o(e,t),o(w,n),r(w,w),u(i,w,e),u(a,i,e)}const w=t();export{P as altitudeAt,A as axisAt,k as closestPoint,S as closestPointOnSilhouette,q as coordinateSystemFromOneAxisAndNormalVector,l as create,p as createFromOperations,m as createGlobal,h as createLocal,E as distanceToSilhouette,O as elevate,v as fromValues,x as intersectRay,R as intersectRayClosestSilhouette,g as intersectsRay,y as normalAt,V as setAltitudeAt,C as setAltitudeOfTransformation,f as setExtent,b as vectorCoordinates,j as wrap};
