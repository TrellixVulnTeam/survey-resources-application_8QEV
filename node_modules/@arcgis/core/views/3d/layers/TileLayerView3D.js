/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{isNone as r}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import i from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{canProjectWithoutEngine as s}from"../../../geometry/projection.js";import{RefreshableLayerView as a}from"../../layers/RefreshableLayerView.js";import{LayerView3D as l}from"./LayerView3D.js";import{TiledLayerView3D as p}from"./TiledLayerView3D.js";import n from"../../layers/LayerView.js";import{createQueryGeometry as m}from"../../support/drapedUtils.js";import{TileLayerView as f}from"../../layers/TileLayerView.js";let c=class extends(a(p(f(l(n))))){get imageFormatIsOpaque(){return"jpg"===this.layer.tileInfo.format}get hasMixedImageFormats(){return"mixed"===this.layer.tileInfo.format}get dataLevelRange(){if(this.tileInfo){const e=this.tileInfo.lods,r=e[0].scale,t=e[e.length-1].scale;return this.levelRangeFromScaleRange(r,t)}return{minLevel:0,maxLevel:0}}initialize(){if("web-tile"===this.layer.type){const e=this.layer.get("fullExtent.spatialReference"),t=this.layer.get("tileInfo.spatialReference");if(r(e)||r(t)||!s(e,t)){const e="defaults"===this.layer.originOf("fullExtent")||r(this.layer.fullExtent)?"SceneView requires fullExtent to be specified by the user on WebTileLayer":"SceneView requires fullExtent to be specified in the same spatial reference as tileInfo on WebTileLayer";this.addResolvingPromise(Promise.reject(new i("layerview:incompatible-fullextent",e)))}}this._addTilingSchemeMatchPromise()}createFetchPopupFeaturesQueryGeometry(e,r){return m(e,r,this.view)}async doRefresh(e){this.suspended||this.emit("data-changed")}};e([t({readOnly:!0})],c.prototype,"imageFormatIsOpaque",null),e([t({readOnly:!0})],c.prototype,"hasMixedImageFormats",null),e([t({aliasOf:"layer.fullExtent"})],c.prototype,"fullExtent",void 0),e([t()],c.prototype,"layer",void 0),e([t({aliasOf:"layer.tileInfo"})],c.prototype,"tileInfo",void 0),e([t({readOnly:!0})],c.prototype,"dataLevelRange",null),c=e([o("esri.views.3d.layers.TileLayerView3D")],c);var y=c;export default y;
