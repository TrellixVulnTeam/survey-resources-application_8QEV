/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/has.js";import{isArrayBuffer as i}from"../../../core/typedArrayUtil.js";import{unwrapOr as s,isSome as r,destroyMaybe as o,isNone as a,applySome as n,unwrap as l}from"../../../core/maybe.js";import d from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as h}from"../../../core/accessorSupport/decorators/property.js";import{subclass as c}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import u from"../../../core/PooledArray.js";import{throwIfAborted as m,createResolver as _}from"../../../core/promiseUtils.js";import{schedule as g}from"../../../core/scheduling.js";import p from"../../../core/Collection.js";import{loadArcade as f}from"../../../support/arcadeOnDemand.js";import{fixFields as b}from"../../../layers/support/fieldUtils.js";import{isPowerOfTwo as y,clamp as v}from"../../../core/mathUtils.js";import M from"../../../Color.js";import I from"../../../symbols/Symbol3D.js";import C from"../../../Graphic.js";import{c as x}from"../../../chunks/vec3f64.js";import{i as O,g as w}from"../../../chunks/vec3.js";import{init as j}from"../../../core/watchUtils.js";import{getMetersPerVerticalUnitForSR as S}from"../../../core/unitUtils.js";import{m as E,n as F}from"../../../chunks/mat4.js";import{projectBuffer as D,getProjectorName as R,localLinearScaleFactors as T,projectVectorToVector as N,projectBoundingSphere as V}from"../../../geometry/projection.js";import{getMetersPerUnit as P}from"../../../symbols/support/unitConversionUtils.js";import{getColor as A,getOpacity as H}from"../../../renderers/visualVariables/support/visualVariableUtils.js";import{someMap as U}from"../../../core/MapUtils.js";import{b as G,a as L}from"../../../chunks/mat4f64.js";import{f as B}from"../../../chunks/mat3.js";import{s as k}from"../../../chunks/vec4.js";import q from"../../../layers/support/SceneModification.js";import{create as z,empty as W,expandWithBuffer as $,intersects as K}from"../../../geometry/support/aaBoundingBox.js";import{areLabelsVisible as J}from"../../../layers/support/layerUtils.js";import{c as Q}from"../../../chunks/mat3f32.js";import{glLayout as X}from"../support/buffer/glUtil.js";import Y from"../support/debugFlags.js";import{defaultMaskAlphaCutoff as Z}from"../webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js";import{overrideColor as ee}from"./graphics/graphicUtils.js";import{loadBasis as te}from"../webgl-engine/lib/BasisUtil.js";import{Texture as ie}from"../webgl-engine/lib/Texture.js";import{projectToBoundingBox as se}from"../support/extentUtils.js";import{updatingProgress as re}from"./support/layerViewUpdatingProperties.js";import{create as oe,clone as ae}from"../support/orientedBoundingBox.js";import{createVertexBufferLayout as ne}from"../webgl-engine/collections/Component/SourceGeometry.js";import{computeGlobalTransformation as le,getLocalOrigin as de}from"./i3s/I3SProjectionUtil.js";import{rendererNeedsTextures as he,getSupportedEncodings as ce,checkSceneLayerValid as ue,checkSceneLayerCompatibleWithView as me,getCacheKeySuffix as _e,whenGraphicAttributes as ge,selectEncoding as pe,computeVisibilityObb as fe,filterInPlace as be,getCachedAttributeValue as ye,intersectBoundingBoxWithMbs as ve,addWraparound as Me,getSymbolInfo as Ie,transparentEdgeMaterial as Ce,getClipAABB as xe,encodingToMimeType as Oe}from"./i3s/I3SUtil.js";import we from"../../../layers/graphics/controllers/I3SOnDemandController.js";import{boundingBoxCornerPoints as je}from"./i3s/I3SGeometryUtil.js";import Se from"./I3SMeshViewLabeler.js";import{I3SMeshWorkerHandle as Ee,toWasmModification as Fe}from"./I3SMeshWorkerHandle.js";import{initialize as De,setModificationsSync as Re,filterObbsForModificationsSync as Te,interpretObbModificationResults as Ne}from"./SceneLayerWorker.js";import Ve from"./i3s/Highlights.js";import{I3SAttributeOverrides as Pe}from"./i3s/I3SAttributeOverrides.js";import{I3SCrossfadeHelper as Ae,NodeCrossfadeMetaData as He}from"./i3s/I3SCrossfadeHelper.js";import Ue from"./i3s/I3SElevationProvider.js";import{I3SIntersectionHandler as Ge}from"./i3s/I3SIntersectionHandler.js";import{IDBCache as Le}from"./i3s/IDBCache.js";import{attributeLookup as Be}from"./support/attributeUtils.js";import{RenderTexture as ke}from"../webgl-engine/core/material/RenderTexture.js";import{getEllipsoidMode as qe}from"../webgl-engine/core/shaderLibrary/util/EllipsoidMode.js";const ze=d.getLogger("esri.views.3d.layers.SceneLayerView3D"),We=[1,1,1,1];class $e extends He{constructor(e,t,i,s,r,o,a){super(),this.node=e,this.featureIds=t,this.objectHandle=i,this.cachedRendererVersion=s,this.attributeInfo=r,this.material=o,this.textures=a,this.cachedEdgeMaterials=new Array,this.cachedSymbology=null}}const Ke=17,Je=104857600,Qe=i=>{let d=class extends i{constructor(){super(...arguments),this._elevationProvider=null,this._intersectionHandler=null,this._nodeId2Meta=new Map,this._nodeId2MetaReloading=new Map,this._i3sWasmLoaded=!1,this._hasLoadedPBRTextures=!1,this._asyncModuleLoading=0,this._addTasks=new Map,this._rendererVersion=0,this._colorVariable=null,this._opacityVariable=null,this._rendererFields=null,this._symbologyFields=null,this._symbologyOverride=null,this._symbologyOverrideFields=null,this._symbolInfos=new Map,this._idbCache=new Le("esri-scenelayer-cache","geometries"),this.holeFilling="auto",this._hasColors=!1,this._hasTextures=!1,this._hasData=!1,this.slicePlaneEnabled=!1,this._modifications=new Array,this._layerUrl="",this._cacheKeySuffix=null,this._arcade=null,this._tmpAttributeOnlyGraphic=new C(null,null,{}),this._crossfadeHelper=new Ae(this)}get lodCrossfadeoutDuration(){return 0}get lodCrossfadeinDuration(){return 0}get lodCrossfadeUncoveredDuration(){return 0}get layerUid(){return this.i3slayer&&this.i3slayer.uid}get sublayerUid(){return null}get hasTexturesOrVertexColors(){return this._hasData?this._hasTextures||this._hasColors?"yes":"probably-not":"unknown"}get rendererTextureUsage(){return he(this._currentRenderer)?this._usePBR()||this._hasLoadedPBRTextures?63:37:this._usePBR()||this._hasLoadedPBRTextures?44:36}get elevationOffset(){const e=null!=this.i3slayer?this.i3slayer.elevationInfo:null;if(null!=e&&"absolute-height"===e.mode){const t=S(this.i3slayer.spatialReference),i=P(e.unit);return s(e.offset,0)*i/t}return 0}get supportedTextureEncodings(){return ce(this.view)}get uncompressedTextureDownsamplingEnabled(){var e;const t=null==(e=this.view)?void 0:e.qualitySettings.sceneService.uncompressedTextureDownsamplingEnabled,i=0==(2&this.supportedTextureEncodings);return t&&i}get _disableAtlasAnisotropy(){var e,t;return!(null!=(e=this.view)&&null!=(t=e._stage)&&t.renderView.has(2))}initialize(){var e;if(this.preLoadBasis(),this.addResolvingPromise(this.i3slayer.indexInfo),this.attributeOverrides=new Pe(this.i3slayer,null==(e=this.view.resourceController)?void 0:e.memoryController),this._worker=new Ee(this.view.resourceController.scheduler),this.addResolvingPromise(this._worker.promise),this._worker.setLegacySchema(this.layerUid,this.i3slayer.store.defaultGeometrySchema),ue(this.i3slayer),me(this.i3slayer,this.view),this._layerUrl=this.i3slayer.parsedUrl.path,this._controller=new we({layerView:this}),this.gpuMemoryEstimate=0,this.texMemoryEstimate=0,this.geoMemoryEstimate=0,this._stage=this.view._stage,this._collection=this._stage.renderView.componentObjectCollection,this._highlights=new Ve({collection:this._collection,forAllFeatures:e=>this._forAllFeatures(e,null,1),forAllFeaturesOfNode:(e,t)=>this._forAllFeaturesOfNode(e,t)}),this._isIntegratedMesh||!this.i3slayer.store.defaultGeometrySchema)this._hasSymbolColors=!1;else{const e=this.i3slayer.store.defaultGeometrySchema.featureAttributes;this._hasSymbolColors=!!(e&&e.faceRange&&e.id)}this._hasVertexColors=null!=this.i3slayer.store.defaultGeometrySchema.vertexAttributes.color&&(null==this.i3slayer.cachedDrawingInfo||!this.i3slayer.cachedDrawingInfo.color),this._isIntegratedMesh||(this._edgeView=this._stage.renderView.ensureEdgeView()),this._memCache=this.view.resourceController.memoryController.getMemCache(this.i3slayer.uid,(e=>this._deleteComponentObject(e))),this._intersectionHandler=new Ge({layerUid:this.layerUid,sublayerUid:this.sublayerUid,collection:this._collection,slicePlaneEnabled:this.slicePlaneEnabled,isGround:this._isIntegratedMesh,forEach:e=>{this._nodeId2Meta.forEach((t=>r(t)&&e(t.node,t.objectHandle))),this._nodeId2MetaReloading.forEach((t=>r(t)&&e(t.node,t.objectHandle)))}}),this._elevationProvider=new Ue({layerView:this,intersectionHandler:this._intersectionHandler}),this._hasLoadedPBRTextures=this._usePBR(),this.updatingHandles.add(this,"view.clippingArea",(()=>this._clippingAreaChanged()),2),this.updatingHandles.add(this,"fullOpacity",(e=>this._opacityChange(e))),this.updatingHandles.add(this,"slicePlaneEnabled",(e=>this._slicePlaneEnabledChange(e))),this.updatingHandles.add(this,"elevationOffset",((e,t)=>{this._reloadAll(t),this._controller.invalidateVisibilityObbs()})),this.updatingHandles.add(this,"filter",(()=>this._filterChange()),2),this.updatingHandles.add(this,"view.qualitySettings.physicallyBasedRenderingEnabled",(()=>this._updatePBR()));const t=()=>{this._reloadAll(),this.clearMemCache()};this.updatingHandles.add(this,"rendererTextureUsage",t),this.updatingHandles.add(this,"uncompressedTextureDownsamplingEnabled",t),this.updatingHandles.add(this,"suspended",(e=>this._suspendedChange(e)),2),this.updatingHandles.add(this.i3slayer,"labelsVisible",(()=>this._labelingChanged()),2),this.updatingHandles.add(this.i3slayer,"labelingInfo",(()=>this._labelingChanged()),2),this.updatingHandles.add(this,"_modifications",(()=>this._modificationsChanged()),2),this.handles.add([j(Y,"I3S_TREE_SHOW_TILES",(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import("./support/I3STreeDebugger.js").then((({I3STreeDebugger:t})=>{!this._treeDebugger&&Y.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}))}))}else e||Y.I3S_TREE_SHOW_TILES||(this._treeDebugger=o(this._treeDebugger))})),j(Y,"I3S_SHOW_MODIFICATIONS",(()=>this._showModifications()))]),this._cacheKeySuffix=_e(this.i3slayer.spatialReference,this.view.renderSpatialReference),this._idbCache.init().catch((e=>ze.warn(`Failed to initialize IndexedDB cache: ${e}`)))}destroy(){this._clearAddTasks(),this.attributeOverrides=o(this.attributeOverrides),this._elevationProvider&&(this._elevationProvider.layerChanged(),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this._intersectionHandler&&(this._stage.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null);const e=this._worker;e&&(e.destroyContext(this.i3slayer.uid).then((()=>e.destroy())),this._worker=null),this._removeAllNodeDataFromStage(),this._memCache=o(this._memCache),this._collection=null,this._stage=null,this._edgeView=null,this._labeler=o(this._labeler),this._treeDebugger=o(this._treeDebugger),this._controller=o(this._controller),this._highlights.destroy(),this._nodeId2Meta.clear(),this._nodeId2MetaReloading.clear(),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null)}memEstimateTextureAdded(e){const t=e.estimatedTexMemRequired;return this.gpuMemoryEstimate+=t,this.texMemoryEstimate+=t,t}memEstimateTextureRemoved(e){const t=e.estimatedTexMemRequired;this.gpuMemoryEstimate-=t,this.texMemoryEstimate-=t}memEstimateGeometryAdded(e){const t=this._collection.getObjectGPUMemoryUsage(e);return this.gpuMemoryEstimate+=t,this.geoMemoryEstimate+=t,t}memEstimateGeometryRemoved(e){const t=this._collection.getObjectGPUMemoryUsage(e);this.gpuMemoryEstimate-=t,this.geoMemoryEstimate-=t}isNodeLoaded(e){return this._nodeId2Meta.has(e)}isNodeReloading(e){return this._nodeId2MetaReloading.has(e)}getUsedMemory(){let e=r(this._labeler)?this._labeler.usedMemory:0;return this._nodeId2Meta.forEach((t=>e+=r(t)?t.node.memory:0)),this._nodeId2MetaReloading.forEach((t=>e+=r(t)?t.node.memory:0)),e}getUnloadedMemory(){return(r(this._controller)?this._controller.unloadedMemoryEstimate:0)+(r(this._labeler)?this._labeler.unloadedMemoryEstimate:0)}ignoresMemoryFactor(){return!1}_labelingChanged(){if(!(J(this.i3slayer)&&this._supportsLabeling))return void(r(this._labeler)&&(this._labeler.destroy(),this._labeler=null));if(r(this._labeler))return;const e=new Se({view:this.view,layer:this.i3slayer,collection:this._collection});this._nodeId2Meta.forEach((t=>r(t)&&this._addMetaToLabeler(e,t))),this._labeler=e}_loadAsyncModule(e){return++this._asyncModuleLoading,e.then((e=>(--this._asyncModuleLoading,e)),(e=>{throw--this._asyncModuleLoading,e}))}_modificationsChanged(){if(!this._i3sWasmLoaded&&this._hasModifications)return this._i3sWasmLoaded=De().then((()=>{this._i3sWasmLoaded=!0,this._modificationsChanged(),this.notifyUpdate()})),void this.notifyUpdate();if(!0!==this._i3sWasmLoaded)return;const e=this.i3slayer.uid,t=this.i3slayer.spatialReference;this._worker.setModifications(e,this._modifications,t);const i=Fe(this._modifications,t);Re({context:e,modifications:i,isGeodetic:t.isGeographic}),this._controller.modificationsChanged();const s=this._hasModifications?new u:null;this._nodeId2Meta.forEach(((e,t)=>{a(e)?this._nodeId2Meta.delete(t):e.node.hasModifications?(this._nodeId2Meta.delete(t),this._nodeId2MetaReloading.set(t,e)):r(s)&&s.push(e.node)})),r(s)&&this._nodeId2MetaReloading.forEach((e=>s.push(e.node))),r(s)&&s.length>0&&(this.updateNodeModificationStatus(s),s.forAll((e=>{if(2!==e.imModificationImpact){const t=this._nodeId2Meta.get(e.index);this._controller.invalidateGeometryVisibility(e.index),this._nodeId2Meta.delete(e.index),r(t)&&this._nodeId2MetaReloading.set(e.index,t)}}))),this.clearMemCache(),this._controller.restartNodeLoading(),this._showModifications()}_showModifications(){if(r(this._modificationGraphics)&&(this.view.graphics.removeMany(this._modificationGraphics),this._modificationGraphics=null),!Y.I3S_SHOW_MODIFICATIONS||0===this._modifications.length)return;const e={clip:[227,227,79,.8],mask:[227,139,79,.8],replace:[139,227,79,.8]},t={type:"simple-fill",outline:{color:[255,255,255],width:1}};this._modificationGraphics=new Array;for(const i of this._modifications){i.geometry.spatialReference=this.i3slayer.spatialReference;const s={...t,color:e[i.type]};this._modificationGraphics.push(new C({geometry:i.geometry,symbol:s}))}this.view.graphics.addMany(this._modificationGraphics)}_addMetaToLabeler(e,t){e.addNodeMeta(t,((e,t)=>this._createAttributes(e,t)))}_suspendedChange(e){e?(this._removeAllNodeDataFromStage(),this.view.elevationProvider&&this.view.elevationProvider.unregister(this._elevationProvider),this._stage.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler)):(this.view.elevationProvider.register(this._elevationContext,this._elevationProvider),this._stage.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler))}getLoadedAttributes(e){const t=this._nodeId2Meta.get(e);if(r(t)&&r(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodeId2Meta.get(e);if(r(t)&&r(t.attributeInfo))return t.attributeInfo.attributeData}setAttributeData(e,t){const i=this._nodeId2Meta.get(e);r(i)&&r(i.attributeInfo)&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const s=this._nodeId2Meta.get(e);r(s)&&(await this.attributeOverrides.apply(s.featureIds,t,i),s.attributeInfo=t,this._attributeValuesChanged(s))}_attributeValuesChanged(e){e.cachedRendererVersion=this._getInvalidRendererVersion(),e.filteredIds=null,r(this._labeler)&&this._labeler.setNodeMetaAttributes(e,((e,t)=>this._createAttributes(e,t))),this._updateEngineObject(e)}clearMemCache(){r(this._memCache)&&this._memCache.clear()}getVisibleNodes(){const e=new Array;return this._nodeId2Meta.forEach((t=>r(t)&&e.push(t.node))),e}getLoadedNodeIndices(e){this._nodeId2Meta.forEach(((t,i)=>e.push(i))),this._nodeId2MetaReloading.forEach(((t,i)=>e.push(i)))}preLoadBasis(){!t("disable-feature:i3s-basis")&&0!=(1&this.supportedTextureEncodings)&&n(this.i3slayer.textureSetDefinitions,(e=>e.some((e=>e.formats.some((e=>"basis"===e.format))))))&&te()}_createTexture(e,t,i,s){if(a(i)||null==i.data)return null;const{data:r,encoding:o}=i,n=t.wrapTextures,l=1&i.usage?"opaque"===t.alphaMode?3:4:3;let d=!0;r instanceof HTMLImageElement&&(d=y(r.width)&&y(r.height));const h=s,c=8!==o&&4!==o,u=(!this.uncompressedTextureDownsamplingEnabled||c)&&d,m={mipmap:u,wrap:h||!n?{s:33071,t:33071}:{s:10497,t:10497},disableAnisotropy:h&&u&&this._disableAtlasAnisotropy,encoding:Oe(o),noUnpackFlip:!0,components:l},_=new ie(r,m);return this._stage.add(_),e.memory+=this.memEstimateTextureAdded(_),_}_getVertexBufferLayout(e,t){const i={hasTexture:st(e.params.material),hasNormals:t.normal,hasRegions:t.uvRegion};return X(ne(this._getGeometryParameters(i)))}_getObjectIdField(){return this.i3slayer.objectIdField||"OBJECTID"}_findGraphicNodeAndIndex(e){const t=Be(this.i3slayer.fieldsIndex,e.attributes,this._getObjectIdField());let i=null;return U(this._nodeId2Meta,(e=>{if(a(e))return!1;const s=e.featureIds.indexOf(t);return-1!==s&&(i={node:e.node,index:s},!0)})),i}_getGraphicIndices(e,t){const i=this._nodeId2Meta.get(e.index);if(a(i))return[];const s=[],r=this._getObjectIdField(),o=this.i3slayer.fieldsIndex;for(const a of t){const e=Be(o,a.attributes,r),t=i.featureIds.indexOf(e);-1!==t&&s.push(t)}return s}whenGraphicBounds(e){const t=this._findGraphicNodeAndIndex(e);if(!t)return Promise.reject();const i=this._nodeId2Meta.get(t.node.index);if(a(i))return Promise.reject();const s=i.objectHandle,r=je(t.index,this._collection,s,new Float64Array(24)),o=this.view.renderSpatialReference,n=this.view.spatialReference;if(D(r,o,0,r,n,0,8)){const e=W();return $(e,r,0,8),Promise.resolve({boundingBox:e,screenSpaceObjects:[]})}}whenGraphicAttributes(e,t){return ge(this.i3slayer,e,this._getObjectIdField(),t,(()=>[...this._nodeId2Meta.values()].filter(r)))}getGraphicFromIntersectorMetadata(e){if(null==e.nodeIndex||null==e.componentIndex)return null;const t=this._nodeId2Meta.get(e.nodeIndex);return a(t)||null==t.featureIds||e.componentIndex>=t.featureIds.length?null:this._createGraphic(e.componentIndex,t)}_getCacheKey(e){return`${this._layerUrl}/v${Ke}/${e.id}${this._cacheKeySuffix}`}_getMemCacheKey(e,t=this.elevationOffset){return e+"#"+t}get _idbCacheEnabled(){return!this._controller.disableIDBCache&&0===this._modifications.length&&0===this.elevationOffset&&null!=this._cacheKeySuffix}loadCachedGPUData(e){return r(this._memCache)?this._memCache.pop(this._getMemCacheKey(e.index)):null}deleteCachedGPUData(e){r(e)&&this._deleteComponentObject(e)}_cacheGPUData(e,t=this.elevationOffset){if(a(this._memCache))return void this._deleteComponentObject(e);const i=this._controller.indexDepth-e.node.level;this._memCache.put(this._getMemCacheKey(e.node.index,t),e,e.node.memory,i)}loadMissingTextures(e,t,i,s){const r=e.filter(((e,i)=>{if(0==(e.usage&this.rendererTextureUsage))return!1;if(a(t))return!0;const s=pe(e.encodings,this.supportedTextureEncodings),r=t[i];return!!(a(r)||null==r.data||s&&r.encoding!==s.encoding)}));return 0===r.length?Promise.resolve(!1):i(r,s).then((i=>{let s=0;for(let r=0;r<e.length;r++)s<i.length&&i[s].id===e[r].id&&(t[r]=i[s],s++);return!0}))}loadCachedNodeData(e,t,i){return this._idbCacheEnabled?this._idbCache.get(this._getCacheKey(e),t).then((s=>null==s?null:s.nodeVersion!==e.version?(this._idbCache.remove(this._getCacheKey(e)),null):(e.geometryObb=s.geometryObb,this.loadMissingTextures(s.requiredTextures,s.textureData,i,t).then((i=>(i&&this._idbCache.initialized&&r(s.textureData)&&(s.byteSize=nt(s.transformedGeometry,s.textureData),s.textureData.every(at)&&lt(e,s)&&this._idbCache.put(this._getCacheKey(e),s).catch((t=>ze.warn(`Failed to update node with textures in IndexedDB cache: ${e.id}: ${t}`)))),m(t),s)))))):Promise.resolve(null)}addNode(e,t,i){return ot(t)?this._addData(e,t.attributeDataInfo,(()=>this._transformNode(e,t,i).then((s=>this._safeReschedule((()=>{if(a(s))return e.hasModifications=!1,this._addCachedNodeData(e,null,i);e.hasModifications=s.transformedGeometry.hasModifications;const{obb:o,componentOffsets:n,featureIds:l,transformedGeometry:d}=s,h=this._controller.crsIndex,c=this.view.renderSpatialReference,u=le(e.mbs,this.elevationOffset,h,c);e.geometryObb=oe([o.center.x,o.center.y,o.center.z],[o.extents.x,o.extents.y,o.extents.z],[o.orientation.x,o.orientation.y,o.orientation.z,o.orientation.w]),O(e.geometryObb.center,e.geometryObb.center,u),t.geometryData.componentOffsets=n,l&&(t.geometryData.featureIds=Array.prototype.slice.call(l));const m={nodeVersion:e.version,geometryData:t.geometryData,requiredTextures:t.requiredTextures,textureData:t.textureData,transformedGeometry:d,globalTrafo:u,geometryObb:e.geometryObb,byteSize:nt(d,t.textureData)};if(this._idbCacheEnabled&&this._idbCache.initialized&&lt(e,m)){const t=r(m.textureData)?m.textureData.map((e=>at(e)?e:null)):null;this._idbCache.put(this._getCacheKey(e),{...m,textureData:t}).catch((t=>ze.warn(`Failed to store node in IndexedDB cache: ${e.id}: ${t}`)))}return this._addCachedNodeData(e,m,i)}),i))))):Promise.reject()}computeVisibilityObb(e){return fe(e,this.view.renderSpatialReference,this._controller.crsIndex,this.i3slayer.spatialReference,this.elevationOffset,this._modifications)}_transformNode(e,t,i){const s=t.geometryData.geometries,r=new Array(s.length);for(let a=0;a<s.length;++a)r[a]=this._getVertexBufferLayout(s[a],t.geometryDescriptor);const o=e.mbs,n=this.elevationOffset,l=this._controller.crsIndex,d=this._controller.crsVertex,h=this.view.renderSpatialReference,c=de(o,n,l),u=le(o,n,l,h),m=R(l,d),_=R(d,h);if(a(m)||a(_))return Promise.resolve(null);const g={context:this.i3slayer.uid,geometryBuffer:t.geometryBuffer,geometryData:t.geometryData,geometryDescriptor:t.geometryDescriptor,layouts:r,localOrigin:c,globalTrafo:u,mbs:o,obb:e.serviceObb,elevationOffset:n,needNormals:!this._isIntegratedMesh&&this._controller.isMeshPyramid,normalReferenceFrame:this.i3slayer.normalReferenceFrame||"none",indexToVertexProjector:m,vertexToRenderProjector:_};return this._worker.invoke(g,i)}get supportsNodeCrossFading(){var e,t;return!(null!=(e=this.view)&&null!=(t=e._stage)&&t.renderView.has(3))}get nodeCrossfadingEnabled(){return this.supportsNodeCrossFading&&(this.lodCrossfadeinDuration>0||this.lodCrossfadeoutDuration>0||this.lodCrossfadeUncoveredDuration>0)}get nodeFadeoutEnabled(){return this.supportsNodeCrossFading&&this.lodCrossfadeoutDuration>0}_setNewNodeOpacity(e){const t=this.nodeCrossfadingEnabled?0:this.fullOpacity;this._setNodeOpacity(e,t)}addCachedGPUData(e,t,i){if(e.geometryObb=ae(this._collection.getComponentObb(t.objectHandle)),!this._controller.isGeometryVisible(e))return void this._cacheGPUData(t);r(this._labeler)&&this._addMetaToLabeler(this._labeler,t);const s=e.index;this._addNodeMeta(s,t),this.updateNodeState(s,i),this._collection.setObjectVisibility(t.objectHandle,!0),this._updateMaterial(t),this._setNewNodeOpacity(t),this._updateEngineObject(t),this._highlights.objectCreated(t),r(this._treeDebugger)&&this._treeDebugger.update()}addCachedNodeData(e,t,i,s){return this._addData(e,i,(()=>this._addCachedNodeData(e,t,s)))}async _addCachedNodeData(e,i,s){if(this.suspended||!this._controller.isGeometryVisible(e))return void this._removeNodeStageData(e.index,this.elevationOffset,this._nodeId2MetaReloading);if(a(i))return void this._addNodeMeta(e.index,null);const o=this._addTasks.get(e.index),{geometryData:n,transformedGeometry:d,globalTrafo:h}=i;await this.attributeOverrides.apply(n.featureIds,o.attributeInfo,s);const c=r(i.textureData)?i.textureData.filter((e=>r(e)&&0!=(e.usage&this.rendererTextureUsage))):[];!t("disable-feature:i3s-basis")&&c.some((e=>r(e)&&1===e.encoding))&&await te(),e.memory=0;const{componentOffsets:u,geometries:m,featureIds:_}=n,g=this._collection,p=m[0],{layout:f,indices:b,interleavedVertexData:y,positionData:v,hasColors:M}=d,I=this._materialParameters(p,f),C=u||new Uint32Array([0,b?b.length:y.byteLength/f[0].stride]),O={vertices:{data:y,count:y.byteLength/f[0].stride,layoutParameters:I.geometryParams},positionData:{positions:v.data,indices:v.indices},indices:b,primitiveType:4,componentOffsets:C},w=p.transformation?G(p.transformation):L();E(w,h,w);const j=F(x(),w),S=B(Q(),w),D=this.view.renderSpatialReference,R=this.view.basemapTerrain.spatialReference,V=x(),P=[1,1,1];T(j,D,P,R),N(j,D,V,R);const A=g.createObject({toMapSpace:[V[0],V[1],P[0],P[1]],geometry:O,obb:l(e.geometryObb),transform:{position:j,rotationScale:S},visible:!1}),H={hasParametersFromSource:!!p.params.material.hasParametersFromSource,isOpaque:"blend"!==p.params.material.alphaMode&&p.params.material.metallicRoughness.baseColorFactor[3]>=1},U=2===I.geometryParams.textureCoordinates,k=c.map((t=>this._createTexture(e,I.material,t,U)));this._configureMaterial(A,p.params.material,k,c),e.memory+=this.memEstimateGeometryAdded(A);const q=new $e(e,_,A,this._getInvalidRendererVersion(),o.attributeInfo,H,k);o.meta=q,!this._hasTextures&&i.requiredTextures.some((({usage:e})=>0!=(19&e)))&&(this._hasTextures=!0),this._hasData=!0,this._hasColors=this._hasColors||M,this._hasTextures=this._hasTextures||!!e.resources.texture,this.notifyChange("hasTexturesOrVertexColors");const z=this.slicePlaneEnabled;return this._addOrUpdateEdgeRendering(q).then((t=>(r(t)&&t.updateObjectVisibility(q.objectHandle,!1),this._safeReschedule((()=>{const i=this._addTasks.get(e.index);if(!i)return;if(r(this._labeler)&&this._addMetaToLabeler(this._labeler,q),this._addNodeMeta(e.index,q),i.meta=null,this.suspended)return void this._removeNodeStageData(e.index,this.elevationOffset);g.setObjectVisibility(A,!0),r(t)&&t.updateObjectVisibility(q.objectHandle,!0),q.attributeInfo=i.attributeInfo;const s=q.cachedRendererVersion!==this._rendererVersion,o=z!==this.slicePlaneEnabled;this._setObjectSymbolColors(q);const a=this._applyFiltersToNode(q);(s||r(t)&&(o||a))&&this._addOrUpdateEdgeRendering(q),this._visibleGeometryChanged(q),this._highlights.objectCreated(q),this._updateMaterial(q),this._setNewNodeOpacity(q),r(this._treeDebugger)&&this._treeDebugger.update()}),s)))).catch((e=>{throw r(o.meta)&&(this._deleteComponentObject(o.meta),o.meta=null),e}))}_addNodeMeta(e,t){if(this._removeNodeStageData(e,this.elevationOffset,this._nodeId2MetaReloading),this._nodeId2Meta.has(e)){ze.error("Removing duplicated node");const t=this._nodeId2Meta.get(e);r(t)&&this._deleteComponentObject(t)}r(t)&&(t.lodCrossfadeProgress=null,this.nodeCrossfadingEnabled&&ct(t.cachedEdgeMaterials,0)),this._nodeId2Meta.set(e,t)}_safeReschedule(e,t){return m(t),this._controller.reschedule(e,t)}_materialParameters(e,t){const i=e.params.material,s=t.some((e=>"uvRegion"===e.name)),r=t.some((e=>"normalCompressed"===e.name)),o=st(i);return{geometryParams:this._getGeometryParameters({hasTexture:o,hasNormals:r,hasRegions:s}),material:i}}_configureMaterial(e,t,i,s){const r=this.rendererTextureUsage,o=e=>rt(s,i,e&r);this._collection.updateMaterial(e,(e=>{const i=t.metallicRoughness.baseColorFactor,s=v(t.metallicRoughness.baseColorFactor[3],0,1);e.baseColor=[i[0],i[1],i[2],s],e.hasParametersFromSource=!!t.hasParametersFromSource,e.usePBR=this._usePBR(),e.mrrFactors=[t.metallicRoughness.metallicFactor,t.metallicRoughness.roughnessFactor,t.hasParametersFromSource?.2:.5],e.emissiveFactor=t.emissiveFactor,e.isIntegratedMesh=this._isIntegratedMesh,e.alphaCutoff="mask"===t.alphaMode?t.alphaCutoff:Z,e.alphaDiscardMode="opaque"===t.alphaMode?1:"mask"===t.alphaMode?2:3;const r=this._stage.renderView.textureRepository,a=o(33);a&&(e.baseColorTexture=new ke(r,a));const n=o(2);n&&(e.metallicRoughnessTexture=new ke(r,n));const l=o(16);l&&(e.emissionTexture=new ke(r,l));const d=o(8);d&&(e.occlusionTexture=new ke(r,d));const h=o(4);h&&(e.normalTexture=new ke(r,h)),e.commonMaterialParameters.slicePlaneEnabled=this.slicePlaneEnabled,e.commonMaterialParameters.doubleSided=t.doubleSided,e.commonMaterialParameters.cullFace=t.cullFace,e.ellipsoidMode=qe(this.view.spatialReference),this._updateMaterialOverlay(e)}))}_getGeometryParameters(e){return{textureCoordinates:e.hasTexture?e.hasRegions?2:1:0,colors:this._hasVertexColors,normals:e.hasNormals&&!this._isIntegratedMesh}}_addData(e,t,i){let s=this._addTasks.get(e.index);return s?s.attributeInfo=t:(s={..._(),attributeInfo:t,meta:null},this._addTasks.set(e.index,s),i().then(s.resolve,s.reject).then((()=>this._addTasks.delete(e.index))).catch((t=>{throw this._addTasks.delete(e.index),t}))),s.promise}_clearAddTasks(){this._addTasks.forEach((e=>{r(e.meta)&&(this._deleteComponentObject(e.meta),e.meta=null)})),this._addTasks.clear()}_clippingAreaChanged(){const e=z();se(this.view.clippingArea,e,this.view.renderSpatialReference)?this._clippingArea=e:this._clippingArea=null,this._filterChange(),this._controller&&this._controller.updateClippingArea(this.view.clippingArea)}_geometryFilterChange(){this._controller.geometryFilterChanged(this.hasGeometryFilter)}get hasGeometryFilter(){return!1}_filterChange(){this._applyFilters(!1)}_applyFilters(e){this._filters=this.getFilters(),e?this._controller&&this._controller.requestUpdate():this._nodeId2Meta.forEach((e=>{r(e)&&this._applyFiltersToNode(e)&&(this._addOrUpdateEdgeRendering(e),this._visibleGeometryChanged(e))}))}getFilters(){const e=[];return this._clippingArea&&e.push(((e,t)=>this._boundingboxFilter(e,t,this._clippingArea))),e}addSqlFilter(e,t,i){if(r(t)){const s=t.fieldNames;e.push(((e,r)=>this._sqlFilter(e,r,t,s,i)))}}_sqlFilter(e,t,i,s,o){const a={},n=this._createLayerGraphic(a),l=this.i3slayer.objectIdField,d=t.featureIds,h=r(t.attributeInfo)&&t.attributeInfo.attributeData;s.every((e=>null!=h[e]||e===l))&&be(e,d,(e=>{a[l]=d[e];for(const i of s)i!==l&&(a[i]=ye(h[i],e));try{return i.testFeature(n)}catch(t){return o(t),!1}}))}_boundingboxNodeTest(e,t){return V(e.node.mbs,this._controller.crsIndex,it,this.view.renderSpatialReference),ve(t,it)}_boundingboxFeatureTest(e,t,i){return K(i,this._collection.getComponentAabb(e.objectHandle,t,Xe))}_boundingboxFilter(e,t,i){const s=this._collection,r=this._boundingboxNodeTest(t,i);if(3===r)return;if(0===r)return void(e.length=0);const o=s.getComponentCount(t.objectHandle);if(o.invisible+o.visible!==t.featureIds.length)return;const a=this._transformAABB(Ye,i,t.objectHandle);be(e,t.featureIds,(e=>this._boundingboxFeatureTest(t,e,a)))}_transformAABB(e,t,i){const s=this._collection.getObjectTransform(i),r=s.position,o=s.rotationScale;return e[0]=(t[0]-r[0])/o[0],e[1]=(t[1]-r[1])/o[4],e[2]=(t[2]-r[2])/o[8],e[3]=(t[3]-r[0])/o[0],e[4]=(t[4]-r[1])/o[4],e[5]=(t[5]-r[2])/o[8],e}_addOrUpdateEdgeRendering(e,t=!0){if(a(this._edgeView))return Promise.resolve(null);const i=e.objectHandle,s=this._edgeView.hasObject(i),{hasEdges:r,perFeatureEdgeMaterials:o}=this._getFilteredEdgeMaterials(e),n={slicePlaneEnabled:this.slicePlaneEnabled};if(r){if(s){if(this.nodeCrossfadingEnabled){ct(o,this.getNodeOpacity(e))}return this._edgeView.updateAllComponentMaterials(i,o,n,t),this._edgeView.updateObjectVisibility(i,!0),Promise.resolve(this._edgeView)}return this._collection.addEdges(i,this._edgeView,o,n).then((()=>this._edgeView))}return s&&this._edgeView.removeObject(i),Promise.resolve(null)}_removeEdgeRendering(e){r(this._edgeView)&&this._edgeView.hasObject(e.objectHandle)&&this._edgeView.removeObject(e.objectHandle)}_applyFiltersToNode(e){return!!this._applyFiltersToNodeComponents(e)&&(r(this._labeler)&&this._labeler.applyFilterChange(e),!0)}_applyFiltersToNodeComponents(e){const t=this._collection,i=0===t.getComponentCount(e.objectHandle).invisible;if(t.setAllComponentVisibilities(e.objectHandle,"all"),0===this._filters.length)return e.filteredIds=null,!i;if(this._updateCachedFilteredIds(e),e.filteredIds===e.featureIds)return!i;const s=this._computeFilteredComponentIndices(e);return t.setAllComponentVisibilities(e.objectHandle,s),!0}_updateCachedFilteredIds(e){null!=e.filteredIds&&e.appliedFilters===this._filters||(e.filteredIds=this._computeFilteredIds(e),e.appliedFilters=this._filters)}_computeFilteredIds(e){const t=e.featureIds.slice();for(const i of this._filters)if(i(t,e),0===t.length)break;return t.length===e.featureIds.length?e.featureIds:t}_computeFilteredComponentIndices(e){const t=new Array;return e.featureIds.forEach(((i,s)=>{e.filteredIds[t.length]===i&&t.push(s)})),t}_removeAllNodeDataFromStage(e=this.elevationOffset){this._nodeId2Meta.forEach(((t,i)=>this._removeNodeStageData(i,e))),this._nodeId2MetaReloading.forEach(((t,i)=>this._removeNodeStageData(i,e,this._nodeId2MetaReloading)))}removeNode(e){const t=this.elevationOffset;this._removeNodeStageData(e,t),this._removeNodeStageData(e,t,this._nodeId2MetaReloading)}_removeNodeStageData(e,t,i=this._nodeId2Meta){const s=i.get(e);a(s)?i.delete(e):(this._collection.setObjectVisibility(s.objectHandle,!1),this._visibleGeometryChanged(s),this._removeEdgeRendering(s),r(this._labeler)&&this._labeler.removeNodeMeta(s),i.delete(e),this._highlights.objectDeleted(s),i===this._nodeId2Meta?(this._cacheGPUData(s,t),this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopNodeFading(s)):this._deleteComponentObject(s),r(this._treeDebugger)&&this._treeDebugger.update())}_deleteComponentObject(e){if(r(this._edgeView)&&this._edgeView.removeObject(e.objectHandle),this.memEstimateGeometryRemoved(e.objectHandle),this._collection.destroyObject(e.objectHandle),e.textures)for(const t of e.textures)this.memEstimateTextureRemoved(t),this._stage.remove(t)}updateNodeState(e,t){const i=this._nodeId2Meta.get(e);r(i)&&this._collection.updateMaterial(i.objectHandle,(e=>e.polygonOffsetEnabled=0===t))}_invalidateAllSymbols(){this._rendererVersion=Me(this._rendererVersion,1),this._controller&&this._controller.requestUpdate()}_getInvalidRendererVersion(){return Me(this._rendererVersion,-1)}async _rendererChange(e){if(this._currentRenderer=e,this.notifyChange("rendererTextureUsage"),this._rendererVersion=Me(this._rendererVersion,1),this._rendererFields=null,this._colorVariable=null,this._opacityVariable=null,this._invalidateAllSymbols(),e&&(this._rendererFields=b(this.i3slayer.fields,await e.getRequiredFields(this.i3slayer.fields))),this._updateSymbologyFields(),!this._arcade&&e&&"arcadeRequired"in e&&e.arcadeRequired&&(this._arcade=await f()),e&&"visualVariables"in e&&e.visualVariables)for(const t of e.visualVariables)"color"===t.type?this._colorVariable=t:"opacity"===t.type?this._opacityVariable=t:ze.warn(`Unsupported visual variable type for 3D Object Scene Services: ${t.type}`);if(e)for(const t of e.getSymbols())"mesh-3d"!==t.type&&ze.error(`Symbols of type '${t.type}' are not supported for 3D Object Scene Services.`);this._controller&&this._controller.requestUpdate()}_getCachedEdgeMaterials(e){return this._hasSymbolColors&&e.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(e),e.cachedEdgeMaterials}_getSymbolColors(e){this._hasSymbolColors&&e.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(e);const t=e.cachedSymbology;return(e,i)=>{const s=5*e;k(i.externalColor,t[s+0]/255,t[s+1]/255,t[s+2]/255,t[s+3]/255),i.externalColorMixMode=15&t[s+4],i.castShadows=0!=(16&t[s+4]),i.pickable=0!=(32&t[s+4])}}_getSymbolInfo(e,t){const i=e&&e.getSymbol(t,{arcade:this._arcade});if(!(i instanceof I))return null;const s=i.id;if(this._symbolInfos.has(s))return this._symbolInfos.get(s);const r=Ie(i);return this._symbolInfos.set(s,r),r}_setSymbologyOverride(e,t){this._symbologyOverride!==e&&(this._symbologyOverride=e,this._symbologyOverrideFields=t,this._invalidateAllSymbols(),this._updateSymbologyFields())}_updateSymbologyFields(){this._symbologyFields=r(this._symbologyOverrideFields)&&this._symbologyOverrideFields.length>0?r(this._rendererFields)&&this._rendererFields.length>0?b(this.i3slayer.fields,[...this._rendererFields,...this._symbologyOverrideFields]):this._symbologyOverrideFields:this._rendererFields}_updateCachedRendererData(e){if(e.cachedRendererVersion=this._rendererVersion,!this._hasSymbolColors)return;const t=this._tmpAttributeOnlyGraphic,i={};t.attributes=i;const s=this._currentRenderer,o=r(e.attributeInfo)&&e.attributeInfo.attributeData,n=null!=e.featureIds?this.i3slayer.objectIdField:null,l=null!=o&&r(this._symbologyFields)&&this._symbologyFields.length>0,d=l?[]:null,h=l?[]:null;if(l&&r(this._symbologyFields))for(const r of this._symbologyFields){const e=o[r];e&&(d.push(r),h.push(e))}e.cachedSymbology||(e.cachedSymbology=new Uint8Array(5*e.featureIds.length));const c={color:et,castShadows:!0,pickable:!0,colorMixMode:1,edgeMaterial:null},u=this.fullOpacity,m=this.nodeCrossfadingEnabled?this.getNodeOpacity(e):u;let _=null,g=2,p=Ce,f=0;for(let b=0;b<e.featureIds.length;b++){if(null!=n&&(i[n]=e.featureIds[b]),l)for(let e=0;e<d.length;e++)i[d[e]]=ye(h[e],b);const o=this._getSymbolInfo(s,t);let u=null,y=null;if(s&&"visualVariables"in s){if(this._colorVariable){const e=A(this._colorVariable,t,{color:tt,arcade:this._arcade});e&&(u=et,u[0]=e.r/255,u[1]=e.g/255,u[2]=e.b/255,this._opacityVariable||null===e.a||(y=e.a))}this._opacityVariable&&(y=H(this._opacityVariable,t,{arcade:this._arcade}))}if(o&&o.material){const e=o.material;u=a(u)||a(y)?ee(u,y,e.color,e.alpha,We,et):ee(u,y,null,null,We,et)}if(a(u)&&(u=et,u[0]=1,u[1]=1,u[2]=1,u[3]=1),c.pickable=!0,c.castShadows=!o||o.castShadows,c.colorMixMode=o&&o.material?o.material.colorMixMode:1,c.edgeMaterial=o?o.edgeMaterial:null,r(this._symbologyOverride)&&(c.color=u,this._symbologyOverride(t,c),u=c.color),r(c.edgeMaterial)){const t=u[3]<=0?0:u[3]>=1&&(e.material.isOpaque||3===c.colorMixMode)?2:1;c.edgeMaterial===_&&t===g||(p={...c.edgeMaterial,opacity:m,objectTransparency:t},_=c.edgeMaterial,g=t),e.cachedEdgeMaterials[b]=p}else e.cachedEdgeMaterials[b]=Ce;e.cachedSymbology[f+0]=Math.round(255*u[0]),e.cachedSymbology[f+1]=Math.round(255*u[1]),e.cachedSymbology[f+2]=Math.round(255*u[2]),e.cachedSymbology[f+3]=Math.round(255*u[3]),e.cachedSymbology[f+4]=c.colorMixMode|+c.castShadows<<4|+c.pickable<<5,f+=5}}_getFilteredEdgeMaterials(e){const t=this._getCachedEdgeMaterials(e);if(this.nodeCrossfadingEnabled||ct(t,this.fullOpacity),a(e.filteredIds)){return{hasEdges:t.some((e=>e!==Ce)),perFeatureEdgeMaterials:t}}let i=0,s=!1;const r=t.map(((t,r)=>e.featureIds[r]!==e.filteredIds[i]?Ce:(s=s||t!==Ce,i++,t)));return{hasEdges:s,perFeatureEdgeMaterials:r}}_setObjectSymbolColors(e){if(!this._hasSymbolColors)return;const t=e.objectHandle,i=this._getSymbolColors(e);this._collection.setComponentData(t,i),this._stage.renderView.setNeedsRender()}_reloadAll(e=this.elevationOffset){this._removeAllNodeDataFromStage(e),null!=this._controller&&this._controller.restartNodeLoading()}_opacityChange(e){this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopAllNodeFading(),this._nodeId2Meta.forEach((t=>{a(t)||(this._collection.updateMaterial(t.objectHandle,(t=>t.objectOpacity=e)),ct(t.cachedEdgeMaterials,e),this._updateEdgeRendering(t))}))}_updateMaterial(e){this._collection.updateMaterial(e.objectHandle,(e=>{e.commonMaterialParameters.slicePlaneEnabled=this.slicePlaneEnabled,e.usePBR=this._usePBR(),this._updateMaterialOverlay(e)}))}_updateMaterialOverlay(e){}_updateEngineObject(e){this._setObjectSymbolColors(e),this._applyFiltersToNode(e),this._addOrUpdateEdgeRendering(e),this._visibleGeometryChanged(e)}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlane=e),r(this._labeler)&&(this._labeler.slicePlaneEnabled=e),this._nodeId2Meta.forEach((t=>{a(t)||(this._collection.updateMaterial(t.objectHandle,(t=>{t.commonMaterialParameters.slicePlaneEnabled=e})),this._updateEdgeRendering(t,!1))}))}_updatePBR(){this._nodeId2Meta.forEach((e=>{a(e)||this._collection.updateMaterial(e.objectHandle,(e=>{e.usePBR=this._usePBR()}))})),this._hasLoadedPBRTextures=!0}_usePBR(){return!this._isIntegratedMesh&&this.view.qualitySettings.physicallyBasedRenderingEnabled}_updateEdgeRendering(e,t=!0){r(this._edgeView)&&this._edgeView.hasObject(e.objectHandle)&&this._addOrUpdateEdgeRendering(e,t)}_forAllNodes(e){this._nodeId2Meta.forEach(e)}_forAllFeatures(e,t,i=0){U(this._nodeId2Meta,(s=>{if(a(s))return!1;if(r(t)){switch(t(s)){case 0:return!0;case 2:return!1}}let o=1;switch(i){case 1:o=this._forAllFeaturesOfNode(s,e);break;case 0:o=this._forVisibleFeaturesOfNode(s,e);break;case 2:o=this._forAllFeaturesOfNodeInClippingArea(s,e)}return 0===o}))}_forAllFeaturesOfNode(e,t){let i=1;const s=e.featureIds;for(let r=0;r<s.length;r++)if(i=t(s[r],r,e),0===i)return i;return i}_forVisibleFeaturesOfNode(e,t){let i=1;const s=e.featureIds;return this._collection.forEachVisibleComponent(e.objectHandle,(r=>(i=t(s[r],r,e),1===i))),i}_forAllFeaturesOfNodeInClippingArea(e,t){if(null==this._clippingArea)return this._forAllFeaturesOfNode(e,t);const i=this._boundingboxNodeTest(e,this._clippingArea);if(0===i)return 1;if(3===i)return this._forAllFeaturesOfNode(e,t);const s=1,r=e.featureIds,o=e.objectHandle,a=xe(this._clippingArea,this._collection.getObjectTransform(o));for(let n=0;n<r.length;n++){if(!this._boundingboxFeatureTest(e,n,a))continue;const i=t(r[n],n,e);if(0===i)return i}return s}_createAttributes(e,t){const i={};null!=t.featureIds&&(i[this._getObjectIdField()]=t.featureIds[e]);const s=r(t.attributeInfo)&&t.attributeInfo.attributeData;if(r(s))for(const r of Object.keys(s))i[r]=ye(s[r],e);return i}_createGraphic(e,t){return this._createLayerGraphic(this._createAttributes(e,t))}highlight(e){const t=this._highlights;if("number"==typeof e||e instanceof C?e=[e]:e instanceof p&&(e=e.toArray()),Array.isArray(e)&&e.length>0){if(e[0]instanceof C){const i=e,s=this.i3slayer.fieldsIndex,r=this._getObjectIdField(),o=i.map((e=>Be(s,e.attributes,r))),{set:a,handle:n}=t.acquireSet();return t.setFeatureIds(a,o),n}if("number"==typeof e[0]){const i=e,{set:s,handle:r}=t.acquireSet();return t.setFeatureIds(s,i),r}}return ht}_visibleGeometryChanged(e){this._elevationProvider&&(this._elevationProvider.objectChanged(e.node),null==this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle=g((()=>{this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle=null}))))}get performanceInfo(){const e={displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null,index:0,nodes:this._nodeId2Meta.size,"Total GPU Memory Estimate":(this.gpuMemoryEstimate/1048576).toFixed(1)+"MB","Geometry Memory Estimate":(this.geoMemoryEstimate/1048576).toFixed(1)+"MB","Texture Memory Estimate":(this.texMemoryEstimate/1048576).toFixed(1)+"MB","Unloaded Memory Estimate":(this.getUnloadedMemory()/1048576).toFixed(1)+"MB",...this._collection?this._collection.performanceInfo:{shown:0,hidden:0}};return r(this._memCache)&&(e.MemCache=Math.round(100*this._memCache.hitRate)+"% hit"),this._controller&&(this._idbCacheEnabled&&(e.IDBCache=Math.round(100*this._idbCache.getHitRate())+"% hit"),this._controller.updateStats(e)),e}get test(){const e=this;return{controller:this._controller,labeler:this._labeler,get visibleObjectIds(){const t=[];return e._forAllFeatures((e=>(t.push(e),1)),null,0),t.sort(((e,t)=>e-t)),t},get numNodes(){return e._nodeId2Meta.size}}}getNodeOpacityByIndex(e){const t=this._nodeId2Meta.get(e);return this.getNodeOpacity(t)}getNodeOpacity(e){return r(e)?this._collection.getMaterial(e.objectHandle).objectOpacity:0}isNodeFullyFadedIn(e){return this._crossfadeHelper.isNodeFullyFadedIn(e)}getNodeCrossfadeMetaData(e){return this._nodeId2Meta.get(e)}markNodeToRemove(e){this._controller&&this._controller.markNodeToRemove(e)}removeMarkedNodes(){this._controller&&this._controller.removeMarkedNodes()}foreachCrossfadeNode(e){this._nodeId2Meta.forEach(((t,i)=>e(i,t)))}fadeNode(e,t,i){if(!this.nodeCrossfadingEnabled)return;const s=this._nodeId2Meta.get(e);r(s)&&this._crossfadeHelper.fadeNode(e,s,t,i)}setNodeOpacityByIndex(e,t){const i=this._nodeId2Meta.get(e);r(i)&&this._setNodeOpacity(i,t)}_setNodeOpacity(e,t){this._collection.updateMaterial(e.objectHandle,(e=>e.objectOpacity=t)),this._setNodeEdgeOpacity(e,t)}_setNodeEdgeOpacity(e,t){if(!r(this._edgeView)||!e.cachedEdgeMaterials)return;ct(e.cachedEdgeMaterials,t);const i=e.objectHandle;this._edgeView.hasObject(i)&&this._edgeView.updateAllComponentOpacities(i,t)}get _hasModifications(){return this._modifications&&this._modifications.length>0}updateNodeModificationStatus(e){const t=e.length;if(!this._hasModifications||t<=0||!0!==this._i3sWasmLoaded)return;const i=this.i3slayer.uid,s=dt(e);if(r(s)){const t={context:i,buffer:s.buffer};Te(t);const r=new Float64Array(s.buffer);e.forAll(((e,t)=>{const i=r[t],s=Ne(i);e.imModificationImpact=s,0!==s&&this._controller.invalidateGeometryVisibility(e.index)}))}}notifyUpdate(){this.notifyChange("updating")}notifyLODUpdate(){this._controller.notifyLODUpdate()}isUpdating(){return!(!this._controller||!this._controller.updating)||!!this._visibleGeometryChangedSchedulerHandle||r(this._labeler)&&this._labeler.updating||this._crossfadeHelper.updating||this._i3sWasmLoaded instanceof Promise||this._asyncModuleLoading>0}computeNodeFiltering(e){e.filterImpact=0}};return e([h()],d.prototype,"_hasLoadedPBRTextures",void 0),e([h()],d.prototype,"_asyncModuleLoading",void 0),e([h()],d.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),e([h()],d.prototype,"view",void 0),e([h()],d.prototype,"i3slayer",void 0),e([h()],d.prototype,"_controller",void 0),e([h()],d.prototype,"_labeler",void 0),e([h()],d.prototype,"updating",void 0),e([h()],d.prototype,"suspended",void 0),e([h()],d.prototype,"holeFilling",void 0),e([h(re)],d.prototype,"updatingProgress",void 0),e([h({readOnly:!0,aliasOf:"_controller.updatingProgress"})],d.prototype,"updatingProgressValue",void 0),e([h({readOnly:!0})],d.prototype,"hasTexturesOrVertexColors",null),e([h({readOnly:!0})],d.prototype,"rendererTextureUsage",null),e([h({readOnly:!0})],d.prototype,"elevationOffset",null),e([h({type:Boolean})],d.prototype,"slicePlaneEnabled",void 0),e([h()],d.prototype,"supportedTextureEncodings",null),e([h()],d.prototype,"uncompressedTextureDownsamplingEnabled",null),e([h({type:[q]})],d.prototype,"_modifications",void 0),d=e([c("esri.views.3d.layers.I3SMeshView3D")],d),d},Xe=z(),Ye=z(),Ze=oe(),et=[0,0,0,0],tt=new M([0,0,0,0]),it=[0,0,0,0];function st(e){const t=e.metallicRoughness;return t&&t.baseColorTextureId>=0||t&&t.metallicRoughnessTextureId>=0||e.normalTextureId>=0||e.emissiveTextureId>=0||e.occlusionTextureId>=0}function rt(e,t,i){if(a(e)||0===i)return null;for(let s=0;s<e.length;s++){const o=e[s];if(r(o)&&0!=(o.usage&i))return t[s].id}return null}function ot(e){return"geometryData"in e}function at(e){return r(e)&&i(e.data)}function nt(e,t){let s=1024+e.interleavedVertexData.byteLength+(e.indices?e.indices.byteLength:0)+e.positionData.data.byteLength+e.positionData.indices.byteLength;if(r(t))for(const o of t)r(o)&&i(o.data)&&(s+=o.data.byteLength);return s}function lt(e,t){return t.byteSize>Je?(ze.warn(`Node is too big to store in IndexedDB cache: ${e.id} (${t.byteSize} bytes)`),!1):t.byteSize>0}function dt(e){if(0===e.length)return null;const t=10*e.length,i=new Float64Array(t);return e.forAll(((e,t)=>{let s=e.serviceObb;a(s)&&(s=Ze,w(s.center,e.mbs),s.halfSize[0]=s.halfSize[1]=s.halfSize[2]=e.mbs[3]);const r=10*t;i[r+0]=s.center[0],i[r+1]=s.center[1],i[r+2]=s.center[2],i[r+3]=s.halfSize[0],i[r+4]=s.halfSize[1],i[r+5]=s.halfSize[2],i[r+6]=s.quaternion[0],i[r+7]=s.quaternion[1],i[r+8]=s.quaternion[2],i[r+9]=s.quaternion[3]})),i}const ht={remove(){},pause(){},resume(){}};function ct(e,t){e.forEach((e=>e.opacity=t))}export{Qe as I3SMeshView3D};
