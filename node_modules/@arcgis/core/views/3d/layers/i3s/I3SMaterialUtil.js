/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e,isNone as a}from"../../../../core/maybe.js";import{clamp as o}from"../../../../core/mathUtils.js";import{defaultMaskAlphaCutoff as r}from"../../webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js";import{PBRSchematicMRRValues as l}from"../../webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{Texture as t}from"../../webgl-engine/lib/Texture.js";function s(o,r){const t=new Map,s=(e,o)=>{if(a(e))return-1;if(t.has(e.id)){const a=t.get(e.id);return a.usage|=o,a.id}const r=t.size;return t.set(e.id,{id:r,usage:o}),r},c=r.pbrMetallicRoughness,u=c&&c.baseColorFactor,d=r.emissiveFactor,m=null==r.normalTexture&&null==r.emissiveTexture&&null==r.occlusionTexture&&(!c||null==c.metallicRoughnessTexture&&1===c.roughnessFactor&&(1===c.metallicFactor||0===c.metallicFactor)),g=m?l[0]:c?c.metallicFactor:1,p=m?l[1]:c?c.roughnessFactor:1,h="mask"===r.alphaMode?33:1,f={baseColorFactor:u?[u[0],u[1],u[2],u[3]]:[1,1,1,1],baseColorTextureId:s(c&&c.baseColorTexture,h),metallicRoughnessTextureId:s(c&&c.metallicRoughnessTexture,2),metallicFactor:g,roughnessFactor:p},b={alphaMode:r.alphaMode,alphaCutoff:r.alphaCutoff,doubleSided:r.doubleSided,cullFace:"none"===r.cullFace?0:"back"===r.cullFace?2:"front"===r.cullFace?1:void 0,normalTextureId:s(r.normalTexture,4),emissiveTextureId:s(r.emissiveTexture,16),occlusionTextureId:s(r.occlusionTexture,8),emissiveFactor:d?[d[0],d[1],d[2]]:[0,0,0],metallicRoughness:f,wrapTextures:!1,hasParametersFromSource:m},x=[];return t.forEach((({usage:a},r)=>{const l=e(o)&&o[r]&&o[r].formats,t=l?i(l.map((({name:e,format:a})=>({name:e,encoding:n[a]})))):[];x.push({id:r,usage:a,encodings:t})})),{material:b,textures:x}}function i(e){return e.sort(((e,a)=>e.encoding-a.encoding))}const n={basis:1,dds:2,png:4,jpg:8,"ktx-etc2":16},c={[t.BASIS_ENCODING]:1,[t.DDS_ENCODING]:2,"image/png":4,"image/jpg":8,"image/jpeg":8,"image/ktx":16};function u(e){const a=e&&e.materialDefinitions?Object.keys(e.materialDefinitions)[0]:null,r=e&&e.textureDefinitions?Object.keys(e.textureDefinitions)[0]:null,l=a&&e.materialDefinitions[a],t=r&&e.textureDefinitions[r],s=d();if(null!=l){const e=l.params;e.diffuse&&(s.metallicRoughness.baseColorFactor=[e.diffuse[0],e.diffuse[1],e.diffuse[2],1]),null!=e.doubleSided&&(s.doubleSided=e.doubleSided,s.cullFace=e.doubleSided?0:2),"none"!==e.cullFace&&"front"!==e.cullFace&&"back"!==e.cullFace||(s.cullFace="none"===e.cullFace?0:"back"===e.cullFace?2:1),e.transparency&&(s.metallicRoughness.baseColorFactor[3]=o(1-e.transparency,0,1)),(e.useVertexColorAlpha||s.metallicRoughness.baseColorFactor[3]<1)&&(s.alphaMode="blend")}const n=[];if(null!=t){const e=0;!t.wrap||"repeat"!==t.wrap[0]&&"repeat"!==t.wrap[1]||(s.wrapTextures=!0);let a=1;"rgba"===t.channels&&(s.alphaMode="blend",a|=32);const o=t.images.length-1,r=t.images[o],l=e=>e&&e.split("/").pop(),u=Array.isArray(t.encoding)?i(t.encoding.map(((e,a)=>({name:l(r.href[a]),encoding:c[e]||0})))):[{name:l(r.href),encoding:c[t.encoding]||0}];n.push({id:e,usage:a,encodings:u}),s.metallicRoughness.baseColorTextureId=e}return{material:s,textures:n}}const d=()=>({alphaMode:"opaque",alphaCutoff:r,doubleSided:!0,cullFace:0,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[.8,.8,.8,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6},wrapTextures:!1,hasParametersFromSource:!0});export{s as getMaterialAndTextures,u as getMaterialAndTexturesFromShared};
