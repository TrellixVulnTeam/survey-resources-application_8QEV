/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{unwrapOr as t}from"../../../../core/maybe.js";import o from"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import i from"../../../../core/Accessor.js";import n from"../../../../core/Evented.js";import{c as a}from"../../../../chunks/vec3f64.js";import{g as l}from"../../../../chunks/vec3.js";import c from"../../../../core/Handles.js";import{getMetersPerVerticalUnitForSR as d}from"../../../../core/unitUtils.js";import{empty as p}from"../../../../geometry/support/aaBoundingRect.js";import{getMetersPerUnit as m}from"../../../../symbols/support/unitConversionUtils.js";import{empty as h,toRect as u,expandWithVec3 as f}from"../../../../geometry/support/aaBoundingBox.js";import{Intersector as v}from"../../webgl-engine/lib/Intersector.js";const y=o.getLogger("esri.views.3d.layers.support.StageLayerElevationProvider"),j=1;let g=class extends(n.EventedMixin(i)){constructor(e){super(e),this.elevationOffset=0,this._layerHandes=new c}initialize(){this.renderCoordsHelper=this.view.renderCoordsHelper,this.intersectLayers=[this.stageLayer],this.intersector=new v(this.view.state.mode),this.intersector.options.store=0;const e=this.computeLayerExtent(this.stageLayer);this.zmin=e[2],this.zmax=e[5];const t=this.stageLayer.events;this._layerHandes.add([t.on("layerObjectAdded",(e=>this.objectChanged(e.object))),t.on("layerObjectRemoved",(e=>this.objectChanged(e.object))),t.on("objectGeometryAdded",(e=>this.objectChanged(e.object))),t.on("objectGeometryRemoved",(e=>this.objectChanged(e.object))),t.on("vertexAttrsUpdated",(e=>this.objectChanged(e.object))),t.on("objectTransformation",(e=>this.objectChanged(e)))])}dispose(){this._layerHandes.destroy()}elevationInfoChanged(){const e=null!=this.layer?this.layer.elevationInfo:null;if(null!=e&&"on-the-ground"!==e.mode){const o=d(this.layer.spatialReference),r=m(e.unit);this.elevationOffset=t(e.offset,0)*r/o}else this.elevationOffset=0}getElevation(e,t,o,r){if(E[0]=e,E[1]=t,E[2]=o,!this.renderCoordsHelper.toRenderCoords(E,r,E))return y.error("could not project point for elevation alignment"),null;const s=this.elevationOffset,i=this.zmin+s,n=this.zmax+s;l(C,E),l(R,E),this.renderCoordsHelper.setAltitude(n,C),this.renderCoordsHelper.setAltitude(i,R);const a=e=>e.metadata&&e.metadata.isElevationSource;return this.intersector.reset(C,R),this.intersector.intersect(this.intersectLayers,null,null,j,null,a),this.intersector.results.min.getIntersectionPoint(E)?this.renderCoordsHelper.getAltitude(E):null}objectChanged(e){var t;if(null==(t=e.metadata)||!t.isElevationSource||!this.spatialReference)return;h(b),e.metadata.lastValidElevationBB.isEmpty()||this.expandExtent(e.metadata.lastValidElevationBB.bbMin,e.metadata.lastValidElevationBB.bbMax,b);const o=e.getBBMin(!1),r=e.getBBMax(!1);this.expandExtent(o,r,b),u(b,x),this.zmin=Math.min(this.zmin,b[2]),this.zmax=Math.max(this.zmax,b[5]),B.extent=x,B.spatialReference=this.spatialReference,this.emit("elevation-change",B),l(e.metadata.lastValidElevationBB.bbMin,o),l(e.metadata.lastValidElevationBB.bbMax,r)}computeLayerExtent(e){return h(b),e.getObjects().forAll((e=>this.expandExtent(e.getBBMin(!1),e.getBBMax(!1),b))),b}expandExtent(e,t,o){for(let r=0;r<8;++r)E[0]=1&r?e[0]:t[0],E[1]=2&r?e[1]:t[1],E[2]=4&r?e[2]:t[2],this.renderCoordsHelper.fromRenderCoords(E,E,this.spatialReference),f(o,E);return o}};e([r({constructOnly:!0})],g.prototype,"layer",void 0),e([r({constructOnly:!0})],g.prototype,"stageLayer",void 0),e([r({constructOnly:!0})],g.prototype,"view",void 0),e([r({readOnly:!0,aliasOf:"view.spatialReference"})],g.prototype,"spatialReference",void 0),g=e([s("esri.views.3d.layers.support.StageLayerElevationProvider")],g);const b=h(),x=p(),B={spatialReference:null,extent:x,context:"scene"},E=a(),C=a(),R=a();export{g as StageLayerElevationProvider};
