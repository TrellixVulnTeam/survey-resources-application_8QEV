/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{createScreenPointArray as e,createRenderScreenPointArray3 as t}from"../../../../core/screenUtils.js";import{c as i}from"../../../../chunks/vec3f64.js";import{a as r,b as s}from"../../../../chunks/vec3.js";import{create as o,fromValues as a,distance as n,empty as c,height as l,expandPointInPlace as h,expand as m,intersection as u,area as p}from"../../../../geometry/support/aaBoundingRect.js";import{triangle as d,plane as f}from"../../support/geometryUtils.js";import S from"../../webgl-engine/lib/Camera.js";import j from"./FeatureTileVisibility3D.js";class b{constructor(e){this.camera=new S,this.focusOnMap=[0,0],this.screenRect=o(),this.tileSize=e.tileSize,this.maxVerticalScreenSize=e.maxVerticalScreenSize,this.renderCoordsHelper=e.renderCoordsHelper,this.tilingScheme=e.tilingScheme,this.visibility=new j(e.renderCoordsHelper)}begin(e,t,i){this.camera.copyFrom(e),this.surfaceElevation=i,this.focusOnMap[0]=t.x,this.focusOnMap[1]=t.y,a(0,0,e.fullWidth,e.fullHeight,this.screenRect),this.visibility.begin(this.camera,i)}end(){this.visibility.end()}updateTile(e){e.measures.visibility=this.visibility.calculate(e),e.measures.distance=n(e.extent,this.focusOnMap),0!==e.measures.visibility&&this.updateScreenMeasure(e)}updateScreenMeasure(e){const t=y,i=1<<t,r=e.measures.screenRect;c(r);let s=0;const o=e.lij[0]+t,a=e.lij[1]<<t,n=e.lij[2]<<t,h=this.tileSizeWithBias(e),m=h*h;let u=!1;for(let c=0;c<i;c++){for(let t=0;t<i;t++){if(s+=this.computeScreenArea(e,o,a+c,n+t,r).area,u=s>m&&l(r)>this.maxVerticalScreenSize,u)break}if(u)break}e.measures.shouldSplit=s>m}tileSizeWithBias(e){return 1===e.measures.visibility?this.tileSize*R:this.tileSize}computeScreenArea(e,t,i,r,s){const o=1===e.measures.visibility,a=C.points;this.projectToScreen(t,i,r,o,a),c(g);for(let n=0;n<4;n++)h(g,a[n]);return m(s,g),u(g,this.screenRect,v),C.screenOverlap=p(v)/p(g),C.area=d.areaPoints2d(a[0],a[1],a[2])+d.areaPoints2d(a[0],a[2],a[3]),C}projectToScreen(e,t,i,r,s){this.tilingScheme.ensureMaxLod(e),this.tilingScheme.getExtent(e,t,i,x),this.toRenderCoords(x,0,3,z[0]),this.toRenderCoords(x,2,3,z[1]),this.toRenderCoords(x,2,1,z[2]),this.toRenderCoords(x,0,1,z[3]),r&&(this.projectToPlane(z,this.camera.frustum[4]),this.projectToPlane(z,this.camera.frustum[3]),this.projectToPlane(z,this.camera.frustum[2]));for(let o=0;o<4;o++)this.camera.projectToRenderScreen(z[o],O),this.camera.renderToScreen(O,s[o])}projectToPlane(e,t){for(let r=0;r<4;r++)M[r]=f.signedDistance(t,e[r]);const i=Math.max(M[0],M[1],M[2],M[3]);if(i>0){const o=r(T,f.normal(t),-i);for(let t=0;t<4;t++)s(e[t],e[t],o)}}toRenderCoords(e,t,i,r){return T[0]=e[t],T[1]=e[i],T[2]=this.surfaceElevation,this.renderCoordsHelper.toRenderCoords(T,this.tilingScheme.spatialReference,r),r}}const g=o(),v=o(),y=2,R=5,C={points:[e(),e(),e(),e()],area:0,screenOverlap:0},x=o(),T=i(),z=[i(),i(),i(),i()],M=[0,0,0,0],O=t();export default b;export{b as FeatureTileMeasurements3D};
