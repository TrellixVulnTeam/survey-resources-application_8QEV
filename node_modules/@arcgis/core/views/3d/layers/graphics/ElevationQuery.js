/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import{remove as t}from"../../../../core/arrayUtils.js";import{onAbort as r,createAbortError as s,createAbortController as i}from"../../../../core/promiseUtils.js";import o from"../../../../geometry/Multipoint.js";import"../../../../geometry.js";import{Task as n}from"../../../support/Scheduler.js";class a{constructor(e,t){this.spatialReference=e,this.view=t}getElevation(e,t,r){return this.view.elevationProvider.getElevation(e,t,0,this.spatialReference,r)}async queryElevation(e,t,r,s,i){return this.view.elevationProvider.queryElevation(e,t,0,this.spatialReference,i,r,s)}}class l{constructor(e,t,r,s){this.spatialReference=t,this._getElevationQueryProvider=r,this._queries=new Array,this._queryOptions={...s,ignoreInvisibleLayers:!0},this._frameTask=e.registerTask(n.ELEVATION_QUERY,(()=>this._update()),(()=>this._queries.length>0))}destroy(){this._frameTask.remove()}queryElevation(e,i,o,n=0){return new Promise(((a,l)=>{const u={x:e,y:i,minDemResolution:n,result:{resolve:a,reject:l},signal:o};this._queries.push(u),r(o,(()=>{t(this._queries,u),l(s())}))}))}_update(){const t=this._queries;this._queries=[];const n=this._getElevationQueryProvider();if(!n)return void t.forEach((e=>e.result.reject()));const a=t.map((e=>[e.x,e.y])),l=t.reduce(((e,t)=>Math.min(e,t.minDemResolution)),1/0),u=new o({points:a,spatialReference:this.spatialReference}),c=t.length>1&&t.some((e=>!!e.signal))?i():null,h=e(c)?c.signal:t[0].signal;if(e(c)){let e=0;t.forEach((i=>r(i.signal,(()=>{e++,i.result.reject(s()),e===t.length&&c.abort()}))))}const m={...this._queryOptions,minDemResolution:l,signal:h};n.queryElevation(u,m).then((r=>{t.forEach(((t,i)=>{e(t.signal)&&t.signal.aborted?t.result.reject(s()):t.result.resolve(r.geometry.points[i][2])}))})).catch((e=>{t.forEach((t=>t.result.reject(e)))}))}get test(){const e=this;return{update:()=>e._queries.length>0&&e._update()}}}export{l as ElevationQuery,a as ViewElevationProvider};
