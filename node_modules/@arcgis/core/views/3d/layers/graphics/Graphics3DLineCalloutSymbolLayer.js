/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t}from"../../../../core/maybe.js";import r from"../../../../Color.js";import{pt2px as a}from"../../../../core/screenUtils.js";import{Geometry as i}from"../../webgl-engine/lib/Geometry.js";import{materialParametersDefaults as n}from"../../webgl-engine/lib/Material.js";import{computeCentroid as s}from"./graphicUtils.js";import{elevationModeChangeUpdateType as o,SymbolUpdateType as l,needsElevationUpdates2D as c}from"./elevationAlignmentUtils.js";import{perObjectElevationAligner as m}from"./ElevationAligners.js";import{ElevationContext as d}from"./ElevationContext.js";import u from"./Graphics3DObject3DGraphicLayer.js";import{emptySymbolComplexity as h}from"./symbolComplexity.js";import{Graphics3DSymbolLayer as p}from"./Graphics3DSymbolLayer.js";import{createStageObjectForHUD as f,extendPointGraphicElevationContext as v}from"./pointUtils.js";import{LineCalloutMaterial as g}from"../../webgl-engine/materials/LineCalloutMaterial.js";class y extends p{constructor(e,t){super(e,null,t,b),this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},this.ensureDrapedStatus(!1)}async doLoad(){this._material=new g(this.materialParameters),this._context.stage.add(this._material)}destroy(){super.destroy(),this._context.stage.remove(this._material),this._material=null}perInstanceMaterialParameters(e){const t=this.materialParameters;return t.screenOffset=e.screenOffset||[0,0],t.centerOffsetUnits=e.centerOffsetUnits||"world",t}get materialParameters(){const t=this.symbol,i=t.callout,s=e(i.color)?r.toUnitRGBA(i.color):[0,0,0,0];s[3]*=this._getLayerOpacity();const o=a(i.size||0);let l=null;if(t.verticalOffset){const{screenLength:e,minWorldLength:r,maxWorldLength:i}=t.verticalOffset;l={screenLength:a(e),minWorldLength:r||0,maxWorldLength:null!=i?i:1/0}}const c=e(i.border)&&e(i.border.color)?r.toUnitRGBA(i.border.color):null,m="object"===t.symbolLayers.getItemAt(0).type,d=!m,u=m?0:void 0,h="label-3d"===t.type;return{color:s,size:o,verticalOffset:l,screenSizePerspective:this._context.screenSizePerspectiveEnabled?this._context.sharedResources.screenSizePerspectiveSettings:null,screenOffset:[0,0],centerOffsetUnits:"world",borderColor:c,occlusionTest:d,shaderPolygonOffset:u,depthHUDAlignStart:h,slicePlaneEnabled:this._context.slicePlaneEnabled,renderOccluded:n.renderOccluded}}_defaultElevationInfoNoZ(){return _}createGraphics3DGraphic(e){const r=e.renderingInfo,a=e.graphic,i=this.setGraphicElevationContext(a,new d,r.elevationOffset||0),n=r.symbol,o="on-the-ground"===this._elevationContext.mode&&("cim"===n.type||!n.symbolLayers.some((e=>"object"===e.type||"text"===e.type)));if("label-3d"!==n.type&&o)return null;const l=s(a.geometry);return t(l)?null:this._createAs3DShape(l,i,r,a.uid)}layerOpacityChanged(){return t(this._material)||this._material.setParameterValues(this.materialParameters),!0}layerElevationInfoChanged(t,r,a){const i=this._elevationContext.mode,n=o(y.elevationModeChangeTypes,a,i);return n!==l.UPDATE||t.forEach((t=>{const a=r(t);e(a)&&this.updateGraphicElevationContext(t.graphic,a)})),n}slicePlaneEnabledChanged(){return t(this._material)||this._material.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return!0}pixelRatioChanged(){return!0}setGraphicElevationContext(e,t,r=0){const a=super.setGraphicElevationContext(e,t);return a.addOffsetRenderUnits(r),a}updateGraphicElevationContext(e,t){this.setGraphicElevationContext(e,t.elevationContext,t.metadata.elevationOffset),t.needsElevationUpdates=c(t.elevationContext.mode)}updateGeometry(e,t){return!1}computeComplexity(){return{primitivesPerFeature:2,primitivesPerCoordinate:0,drawCallsPerFeature:0,estimated:!1,memory:h.memory}}createVertexData(e){const{translation:t,centerOffset:r}=e;return[["position",t?{size:3,data:[t[0],t[1],t[2]],exclusive:!0}:{size:3,data:[0,0,0],exclusive:!0}],["normal",{size:3,data:[0,0,1],exclusive:!0}],["auxpos1",r?{size:4,data:[r[0],r[1],r[2],r[3]],exclusive:!0}:{size:4,data:[0,0,0,1],exclusive:!0}]]}_getOrCreateMaterial(r){const a=this.perInstanceMaterialParameters(r),i=g.uniqueMaterialIdentifier(a);if(e(this._material)&&i===this._material.uniqueMaterialIdentifier)return{material:this._material,isUnique:!1};if(r.materialCollection){let e=r.materialCollection.get(i);return t(e)&&(e=new g(a),r.materialCollection.add(i,e)),{material:e,isUnique:!1}}return{material:new g(a),isUnique:!0}}_createAs3DShape(e,t,r,a){const n=[new i(this.createVertexData(r),C,1)],s=this._getOrCreateMaterial(r),o=f(this._context,e,n,[s.material],null,null,t,this._context.layer.uid,a);if(null===o)return null;const l=m,d=new u(this,o.object,n,s.isUnique?[s.material]:null,null,l,t);return d.metadata={elevationOffset:r.elevationOffset||0},d.alignedSampledElevation=o.sampledElevation,d.needsElevationUpdates=c(t.mode),v(d,e,this._context.elevationProvider),d}}y.elevationModeChangeTypes={definedChanged:l.UPDATE,staysOnTheGround:l.UPDATE,onTheGroundChanged:l.RECREATE};const x=new Uint16Array([0]),C=[["position",x],["normal",x],["auxpos1",x]],_={mode:"relative-to-ground",offset:0},b={ignoreDrivers:!0,renderPriority:0,renderPriorityStep:1};export default y;export{y as Graphics3DLineCalloutSymbolLayer};
