/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{get as e,isSome as t,isNone as s}from"../../../../core/maybe.js";import r from"../../../../core/Error.js";import{d as n,c as a}from"../../../../chunks/vec3f64.js";import{g as o,n as i,s as l,f as c,c as h,i as p}from"../../../../chunks/vec3.js";import{a as m}from"../../../../chunks/mat4.js";import{computeLinearTransformation as d}from"../../../../geometry/projection.js";import{a as u}from"../../../../chunks/mat3f64.js";import{I as f,a as g}from"../../../../chunks/mat4f64.js";import{earcut as y}from"../../../../core/libs/earcut/earcut.js";import{n as _}from"../../../../chunks/mat3.js";import{BufferViewVec3f64 as E}from"../../support/buffer/BufferView.js";import{t as b,a as x}from"../../../../chunks/vec32.js";import{create as v,empty as P,expandWithBuffer as w,intersectsClippingArea as A}from"../../../../geometry/support/aaBoundingBox.js";import{SamplePosition as j}from"../../support/ElevationProvider.js";import{Geometry as L}from"../../webgl-engine/lib/Geometry.js";import{Object3D as S}from"../../webgl-engine/lib/Object3D.js";import B from"../../support/debugFlags.js";import{validateSymbolLayerSize as C,computeCentroid as M}from"./graphicUtils.js";import{needsElevationUpdates3D as R,evaluateElevationAlignmentAtPoint as z}from"./elevationAlignmentUtils.js";import{ElevationContext as G}from"./ElevationContext.js";import D from"./Graphics3DObject3DGraphicLayer.js";import{createMaterial as I}from"../support/edgeUtils.js";import{Graphics3DSymbolLayer as T}from"./Graphics3DSymbolLayer.js";import{getDriverAxisSizeValue as U}from"../../../../renderers/support/renderingInfoUtils.js";import{geometryAsPolygon as V,geometryToRenderInfo as O}from"./polygonUtils.js";import{DefaultMaterial as k}from"../../webgl-engine/materials/DefaultMaterial.js";const F=["polygon","extent"];class N extends T{constructor(e,t,s,r){super(e,t,s,r),this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const e=C(this._getSymbolSize());if(e)throw new r("graphics3dextrudesymbollayer:invalid-size",e)}const t=e(this.symbolLayer,"material","color"),s=this._getCombinedOpacityAndColor(t),a=n(s),o=s[3],i={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0,diffuse:a,ambient:a,opacity:o,transparent:o<1||this.needsDrivenTransparentPass,vertexColors:!0,slicePlaneEnabled:this._context.slicePlaneEnabled,castShadows:this.symbolLayer.castShadows,offsetTransparentBackfaces:!0};this._material=new k(i),this._bottomMaterial=new k({...i,cullFace:2}),this._context.stage.add(this._material),this._context.stage.add(this._bottomMaterial)}destroy(){super.destroy(),this._material&&(this._context.stage.remove(this._material),this._context.stage.remove(this._bottomMaterial))}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,F,this.symbolLayer.type))return null;const s=this._getVertexOpacityAndColor(e.renderingInfo,255),r=this.setGraphicElevationContext(t,new G);return this._createAs3DShape(t,e.renderingInfo,s,r,t.uid)}layerOpacityChanged(s,r){const n=e(this.symbolLayer,"material","color"),a=this._getCombinedOpacity(n),o=a<1||this.needsDrivenTransparentPass;this._material.setParameterValues({opacity:a,transparent:o}),this._bottomMaterial.setParameterValues({opacity:a,transparent:o});const i=this._getLayerOpacity();return s.forEach((e=>{const s=r(e);t(s)&&s.layerOpacityChanged(i,this._context.isAsync)})),!0}layerElevationInfoChanged(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,R)}slicePlaneEnabledChanged(e,s){return this._material.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),this._bottomMaterial.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled}),e.forEach((e=>{const r=s(e);t(r)&&r.slicePlaneEnabledChanged(this._context.slicePlaneEnabled,this._context.isAsync)})),!0}physicalBasedRenderingChanged(){return this._material.setParameterValues({usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0}),this._bottomMaterial.setParameterValues({usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0}),!0}pixelRatioChanged(){return!0}_getExtrusionSize(e){let t;var s;e.size&&this._drivenProperties.size?t=null!=(s=U(e.size,2))?s:0:t=this._getSymbolSize();return t/=this._context.renderCoordsHelper.unitInMeters,t}_getSymbolSize(){var e;return null!=(e=this.symbolLayer.size)?e:1}_createAs3DShape(e,r,n,o,i){const l=V(e.geometry);if(s(l))return null;const c=O(l,this._context.elevationProvider,this._context.renderCoordsHelper,o);if(this._logGeometryCreationWarnings(c,l.rings,"rings","ExtrudeSymbol3DLayer"),0===l.rings.length||!l.rings.some((e=>e.length>0)))return null;const h=M(l);if(s(h))return null;const p=new Array,j=new Array,L=new Array,B=v(),C=g(),z=a(),G=1===this._context.renderCoordsHelper.viewingMode;G||this._context.renderCoordsHelper.worldUpAtPosition(null,z),d(l.spatialReference,[h.x,h.y,0],C,this._context.renderCoordsHelper.spatialReference);const T=g();m(T,C);const U=u();_(U,T);const{polygons:k,mapPosition:F,position:N}=c,Y=N.length/3,W=new Float64Array(3*Y*6),q=new Float64Array(3*Y*6),J=new Float64Array(3*Y*6),K=new Float64Array(1*Y*6);let Q=0;for(let t=0;t<k.length;++t){const e=k[t],s=e.count;if(this._context.clippingExtent&&(P(B),w(B,e.mapPosition),!A(B,this._context.clippingExtent)))continue;const a=y(e.mapPosition,e.holeIndices,3);if(0===a.length)continue;const o=3*s*2+a.length,i=new Uint32Array(o),l=new Uint32Array(a.length),c=6*s,h=3*W.BYTES_PER_ELEMENT,m=new E(W.buffer,Q*h,h,(Q+c)*h),d=3*q.BYTES_PER_ELEMENT,u=new E(q.buffer,Q*d,d,(Q+c)*d),g=new Float64Array(J.buffer,3*Q*J.BYTES_PER_ELEMENT,3*c),_=new Float64Array(K.buffer,1*Q*K.BYTES_PER_ELEMENT,1*c),v=this._getExtrusionSize(r);H(N,F,a,e,m.typedBuffer,g,u.typedBuffer,_,0,i,l,v,z,G),b(m,m,T),x(u,u,U),Q+=6*s;const S=this._createExtrudeGeometry(i,i.length-l.length,{positions:m.typedBuffer,elevation:g,normals:u.typedBuffer,heights:_},n);p.push(S),j.push(this._material),L.push(f);const C=this._createExtrudeGeometry(l,0,{positions:m.typedBuffer,elevation:g,normals:u.typedBuffer,heights:_},n);p.push(C),j.push(this._bottomMaterial),L.push(f)}if(0===p.length)return null;const X=new S({geometries:p,materials:j,transformations:L,metadata:{layerUid:this._context.layer.uid,graphicUid:i,isElevationSource:!0}});X.transformation=C;const Z=se,$=I(this.symbolLayer,{opacity:this._getLayerOpacity()}),ee=t($)?{baseMaterial:this._material,edgeMaterials:[$],properties:{mergeGeometries:!0,slicePlaneEnabled:this._context.slicePlaneEnabled}}:null,te=new D(this,X,p,null,null,Z,o,ee);return te.alignedSampledElevation=c.sampledElevation,te.needsElevationUpdates=R(o.mode),te}_createExtrudeGeometry(e,t,s,r){const n=new Uint32Array(e.length),a=[["position",{size:3,data:s.positions,exclusive:!0}],["normal",{size:3,data:s.normals,exclusive:!0}],["color",{size:4,data:r,exclusive:!0}],["size",{size:1,data:s.heights,exclusive:!0}]],o=[["position",e],["normal",e],["color",n]];return s.elevation&&(a.push(["mapPos",{size:3,data:s.elevation}]),o.push(["mapPos",e])),new L(a,o,0,t)}}function H(e,t,s,r,n,a,o,i,l,c,h,p,m,d){const u=s.length/3;let f=0,g=2*r.count;Y(e,t,r.index,r.count,s,0,u,n,a,o,i,l,c,h,g,p,m,d),l+=2*r.count,g=0,J(n,a,i,o,f,r.pathLengths[0],r.count,l,c,g,p),l+=4*r.pathLengths[0],g+=2*r.pathLengths[0],f+=r.pathLengths[0];for(let y=1;y<r.pathLengths.length;++y)J(n,a,i,o,f,r.pathLengths[y],r.count,l,c,g,p),l+=4*r.pathLengths[y],g+=2*r.pathLengths[y],f+=r.pathLengths[y]}function Y(e,t,s,r,n,a,l,c,h,p,m,d,u,f,g,y,_,E){o(ne,_);const b=y>0?1:-1;let x=3*s,v=d,P=3*v,w=d+r,A=3*w;for(let o=0;o<r;++o)E&&(ne[0]=e[x+0],ne[1]=e[x+1],ne[2]=e[x+2],i(ne,ne)),c[P+0]=e[x+0],c[P+1]=e[x+1],c[P+2]=e[x+2],h[P+0]=t[x+0],h[P+1]=t[x+1],h[P+2]=t[x+2],p[P+0]=-b*ne[0],p[P+1]=-b*ne[1],p[P+2]=-b*ne[2],m[v]=0,c[A+0]=e[x+0]+y*ne[0],c[A+1]=e[x+1]+y*ne[1],c[A+2]=e[x+2]+y*ne[2],h[A+0]=t[x+0],h[A+1]=t[x+1],h[A+2]=t[x+2],p[A+0]=b*ne[0],p[A+1]=b*ne[1],p[A+2]=b*ne[2],m[w]=y,P+=3,A+=3,x+=3,v+=1,w+=1;x=3*a,P=0,A=3*g;const j=y<0?oe:ae,L=y<0?ae:oe;for(let o=0;o<l;++o)f[P+0]=n[x+j[0]],f[P+1]=n[x+j[1]],f[P+2]=n[x+j[2]],u[A+0]=n[x+L[0]]+r,u[A+1]=n[x+L[1]]+r,u[A+2]=n[x+L[2]]+r,P+=3,A+=3,x+=3}function W(e,t,s,r,n,a,o){r[a]=r[o],o*=3,e[(a*=3)+0]=e[o+0],e[a+1]=e[o+1],e[a+2]=e[o+2],t[a+0]=t[o+0],t[a+1]=t[o+1],t[a+2]=t[o+2],s[a+0]=n[0],s[a+1]=n[1],s[a+2]=n[2]}const q=a();function J(e,t,s,r,n,a,o,i,l,c,h){let p=n,m=n+1,d=n+o,u=n+o+1,f=i,g=i+1,y=i+2*a,_=i+2*a+1;h<0&&(p=n+o+1,u=n),c*=3;for(let E=0;E<a;++E)E===a-1&&(h>0?(m=n,u=n+o):(m=n,p=n+o)),ee(e,p,m,d,q),W(e,t,r,s,q,f,p),W(e,t,r,s,q,g,m),W(e,t,r,s,q,y,d),W(e,t,r,s,q,_,u),l[c++]=f,l[c++]=y,l[c++]=_,l[c++]=f,l[c++]=_,l[c++]=g,p++,m++,d++,u++,f+=2,g+=2,y+=2,_+=2}const K=a(),Q=a(),X=a(),Z=a(),$=a();function ee(e,t,s,r,n){t*=3,s*=3,r*=3,l(K,e[t++],e[t++],e[t++]),l(Q,e[s++],e[s++],e[s++]),l(X,e[r++],e[r++],e[r++]),c(Z,Q,K),c($,X,K),h(n,$,Z),i(n,n)}const te=a();function se(e,t,s,r){const n=e.stageObject,a=n.geometryRecords,o=a.length,i="absolute-height"!==t.mode;let c=0;const h=n.transformation,d=m(g(),h);for(let m=0;m<o;m+=2){const e=a[m].geometry,o=e.getMutableAttribute("position").data,u=e.vertexAttributes.get("size").data,f=e.vertexAttributes.get("mapPos").data,g=new j(f),y=o.length/3;let _=0,E=!1,b=0;const x=s.spatialReference;for(let n=0;n<y;n++){te[0]=o[_],te[1]=o[_+1],te[2]=o[_+2];const e=z(g,s,t,r,i?le:null);i&&(b+=le.sampledElevation),B.DISABLE_ELEVATION_ALIGNERS_ITERATIVE_UPDATES?(l(re,g.array[g.offset+0],g.array[g.offset+1],e+u[_/3]),r.toRenderCoords(re,x,re),p(re,re,d)):(l(re,o[_+0],o[_+1],o[_+2]),p(re,re,h),r.setAltitude(e+u[_/3],re),p(re,re,d)),o[_]=re[0],o[_+1]=re[1],o[_+2]=re[2];const n=ie/r.unitInMeters;(Math.abs(te[0]-o[_])>=n||Math.abs(te[1]-o[_+1])>=n||Math.abs(te[2]-o[_+2])>=n)&&(E=!0),g.offset+=3,_+=3}E&&(e.invalidateBoundingInfo(),n.geometryVertexAttrsUpdated(m),a[m+1].geometry.invalidateBoundingInfo(),n.geometryVertexAttrsUpdated(m+1)),c+=b/y}return c/o}const re=a(),ne=a(),ae=[0,2,1],oe=[0,1,2],ie=.01,le={verticalDistanceToGround:0,sampledElevation:0};export default N;export{N as Graphics3DExtrudeSymbolLayer};
