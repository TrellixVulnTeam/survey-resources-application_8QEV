/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import{isSome as e,get as t}from"../../../../core/maybe.js";import r from"../../../../Color.js";import{Z as a,O as s,c as o}from"../../../../chunks/vec3f64.js";import{b as i,a as n,d as l,n as u,f as c,c as m,i as h,t as p}from"../../../../chunks/vec3.js";import{a as f}from"../../../../chunks/mat4.js";import{projectBuffer as d,computeLinearTransformation as g,canProjectWithoutEngine as x}from"../../../../geometry/projection.js";import{a as _}from"../../../../chunks/mat3f64.js";import{b,a as v}from"../../../../chunks/mat4f64.js";import{O as y}from"../../../../chunks/vec4f64.js";import C from"../../../../geometry/support/MeshMaterialMetallicRoughness.js";import T from"../../../../geometry/support/MeshComponent.js";import{f as w,t as M}from"../../../../chunks/mat3.js";import{projectNormalToECEF as A,projectTangentToECEF as P}from"../../../../geometry/support/meshUtils/projection.js";import{empty as R,expandWithBuffer as j,intersectsClippingArea as B,create as E}from"../../../../geometry/support/aaBoundingBox.js";import{generateDefaultIndexArray as F}from"../../webgl-engine/lib/geometryDataUtils.js";import{Geometry as O}from"../../webgl-engine/lib/Geometry.js";import{Object3D as I}from"../../webgl-engine/lib/Object3D.js";import N from"../../support/debugFlags.js";import{needsElevationUpdates3D as S}from"./elevationAlignmentUtils.js";import{perObjectElevationAligner as V}from"./ElevationAligners.js";import{ElevationContext as U}from"./ElevationContext.js";import G from"./Graphics3DObject3DGraphicLayer.js";import{createMaterial as L}from"../support/edgeUtils.js";import{Graphics3DSymbolLayer as $}from"./Graphics3DSymbolLayer.js";import{DefaultMaterial as D}from"../../webgl-engine/materials/DefaultMaterial.js";import{Texture as z}from"../../webgl-engine/lib/Texture.js";import{parseColorMixMode as k,encodeSymbolColor as H}from"../support/symbolColorUtils.js";import{NativeLineMaterial as W}from"../../webgl-engine/materials/NativeLineMaterial.js";const q=["mesh"];class Y extends ${constructor(e,t,r,a){super(e,t,r,a),this._materials=new Map,this._textures=new Map,this.ensureDrapedStatus(!1)}async doLoad(){N.DRAW_MESH_GEOMETRY_NORMALS&&(this._debugVertexNormalMaterial=new W({color:[1,0,1,1]}),this._debugFaceNormalMaterial=new W({color:[0,1,1,1]}))}destroy(){super.destroy(),this._context.stage.removeMany(Array.from(this._materials.values(),(e=>e.material))),this._context.stage.removeMany(Array.from(this._textures.values())),this._materials.clear(),this._textures.clear()}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,q,"fill on mesh-3d"))return null;const r=this.setGraphicElevationContext(t,new U),a=e.renderingInfo;return this._createAs3DShape(t,a,r,t.uid)}layerOpacityChanged(t,r){const a=this._getLayerOpacity();return this._materials.forEach((e=>{e.material.setParameterValues({layerOpacity:a});const t=e.material.params;this._setMaterialTransparentParameter(t,e),e.material.setParameterValues({transparent:t.transparent})})),t.forEach((t=>{const s=r(t);e(s)&&s.layerOpacityChanged(a,this._context.isAsync)})),!0}layerElevationInfoChanged(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,S)}slicePlaneEnabledChanged(t,r){return this._materials.forEach((e=>{e.material.setParameterValues({slicePlaneEnabled:this._context.slicePlaneEnabled})})),t.forEach((t=>{const a=r(t);e(a)&&a.slicePlaneEnabledChanged(this._context.slicePlaneEnabled,this._context.isAsync)})),!0}physicalBasedRenderingChanged(){const e=this._usePBR();return this._materials.forEach((t=>t.material.setParameterValues({usePBR:e}))),!0}pixelRatioChanged(){return!0}_requiresSymbolVertexColors(){return this._drivenProperties.color||this._drivenProperties.opacity}_colorOrTextureUid(e){return e?e instanceof r?e.toHex():e.contentHash:"-"}_materialPropertiesDefault(e,t){const r=this._requiresSymbolVertexColors(),a=!!e.vertexAttributes.color,s=!!e.vertexAttributes.tangent;return{hasSymbolVertexColors:r,hasVertexColors:a,hasVertexTangents:s,uid:`vc:${a},vt:${s},vct${t},svc:${r}`}}_materialProperties(e,t,r){const a=this._materialPropertiesDefault(e,r);if(!t.material)return a;const{color:s,colorTexture:o,normalTexture:i,doubleSided:n,alphaCutoff:l,alphaMode:u}=t.material,c=this._colorOrTextureUid(s),m=this._colorOrTextureUid(o),h=this._colorOrTextureUid(i);if(a.color=s,a.colorTexture=o,a.normalTexture=i,a.uid=`${a.uid},cmuid:${c},ctmuid:${m},ntmuid:${h},ds:${n},ac:${l},am:${u}`,t.material instanceof C){const{metallic:e,roughness:r,metallicRoughnessTexture:s,emissiveColor:o,emissiveTexture:i,occlusionTexture:n}=t.material,l=this._colorOrTextureUid(s),u=this._colorOrTextureUid(o),c=this._colorOrTextureUid(i),m=this._colorOrTextureUid(n);a.metallic=e,a.roughness=r,a.metallicRoughnessTexture=s,a.emissiveColor=o,a.emissiveTexture=i,a.occlusionTexture=n,a.uid=`${a.uid},mrm:${e},mrr:${r},mrt:${l},emuid:${u},etmuid:${c},otmuid:${m}`}return a}_setInternalColorValueParameters(e,t){t.diffuse=r.toUnitRGB(e),t.opacity=e.a}_getLoadableTextureResource(e){return e.data?e.data:e.url}_getInternalTextureId(e){const t=this._getLoadableTextureResource(e);if(!t)return;const r=e.contentHash;let a=this._textures.get(r);return a||(a=new z(t,{mipmap:!0,wrap:this._castTextureWrap(e.wrap),noUnpackFlip:!0,preMultiplyAlpha:!0}),this._textures.set(r,a),this._context.stage.add(a)),a.id}_castTextureWrap(e="repeat"){if("string"==typeof e){const t=this._castTextureWrapIndividual(e);return{s:t,t}}return{s:this._castTextureWrapIndividual(e.horizontal),t:this._castTextureWrapIndividual(e.vertical)}}_castTextureWrapIndividual(e){switch(e){case"clamp":return 33071;case"mirror":return 33648;case"repeat":default:return 10497}}_setInternalMaterialParameters(e,t){e.color&&this._setInternalColorValueParameters(e.color,t),e.colorTexture&&(t.textureId=this._getInternalTextureId(e.colorTexture)),e.normalTexture&&(t.normalTextureId=this._getInternalTextureId(e.normalTexture)),e.emissiveColor&&(t.emissiveFactor=r.toUnitRGB(e.emissiveColor)),e.emissiveTexture&&(t.emissiveTextureId=this._getInternalTextureId(e.emissiveTexture)),e.occlusionTexture&&(t.occlusionTextureId=this._getInternalTextureId(e.occlusionTexture)),e.metallicRoughnessTexture&&(t.metallicRoughnessTextureId=this._getInternalTextureId(e.metallicRoughnessTexture))}_setExternalMaterialParameters(t){const a=this._drivenProperties.color;let s=e(this.symbolLayer.material)?this.symbolLayer.material.colorMixMode:null;if(a)t.externalColor=y;else{const a=e(this.symbolLayer.material)?this.symbolLayer.material.color:null;e(a)?t.externalColor=r.toUnitRGBA(a):(s=null,t.externalColor=y)}s&&(t.colorMixMode=s),t.castShadows=!!this.symbolLayer.castShadows}_hasTransparentVertexColors(e){const t=e.vertexAttributes.color;if(!t)return!1;for(let r=3;r<t.length;r+=4)if(255!==t[r])return!0;return!1}_getOrCreateMaterial(e,t){const r=t.material&&t.material.color,o=t.material&&t.material.colorTexture,i=t.material&&"blend"===t.material.alphaMode,n=!(t.material&&"opaque"===t.material.alphaMode)&&(this._hasTransparentVertexColors(e)||r&&r.a<1||o&&o.transparent||i),l=this._materialProperties(e,t,n),u=this._materials.get(l.uid);if(u)return u.material;const c={material:null,isComponentTransparent:n,alphaMode:t.material?t.material.alphaMode:"opaque"},m=null==l.metallicRoughnessTexture&&null==l.metallic&&null==l.roughness,h={usePBR:this._usePBR(),isSchematic:m,vertexColors:l.hasVertexColors,symbolColors:l.hasSymbolVertexColors,vertexTangents:l.hasVertexTangents,ambient:a,diffuse:s,opacity:1,doubleSided:!0,doubleSidedType:"winding-order",cullFace:0,textureAlphaPremultiplied:!0,layerOpacity:this._getLayerOpacity(),slicePlaneEnabled:this._context.slicePlaneEnabled,initTextureTransparent:!0};m||(h.mrrFactors=[null!=l.metallic?l.metallic:1,null!=l.roughness?l.roughness:1,.5]),t.material&&(h.doubleSided=t.material.doubleSided,h.cullFace=t.material.doubleSided?0:2,h.textureAlphaCutoff=t.material.alphaCutoff),this._setInternalMaterialParameters(l,h),this._setExternalMaterialParameters(h),this._setMaterialTransparentParameter(h,c);const p=new D(h);return c.material=p,this._materials.set(l.uid,c),this._context.stage.add(p),p}_usePBR(){return this._context.physicalBasedRenderingEnabled}_setMaterialTransparentParameter(e,t){e.transparent=this.needsDrivenTransparentPass||t.isComponentTransparent||e.layerOpacity<1||e.opacity<1||e.externalColor&&e.externalColor[3]<1,"auto"===t.alphaMode?e.textureAlphaMode=e.transparent?3:1:e.textureAlphaMode="opaque"===t.alphaMode?1:"mask"===t.alphaMode?2:0}_addDebugNormals(e,t,r,a){const s=t.length,o=e.spatialReference.isGeographic?20015077/180:1,l=.1*Math.max(e.extent.width*o,e.extent.height*o,e.extent.zmax-e.extent.zmin),u=[],c=[],m=[],h=[];for(let d=0;d<s;d++){const e=t[d],r=e.vertexAttributes.get("position"),a=e.vertexAttributes.get("normal"),s=e.indices.get("position"),o=e.indices.get("normal"),p=r.data,f=a.data;for(let t=0;t<s.length;t++){const e=3*s[t],r=3*o[t];for(let t=0;t<3;t++)u.push(p[e+t]);for(let t=0;t<3;t++)u.push(p[e+t]+f[r+t]*l);if(c.push(c.length),c.push(c.length),t%3==0){this._calculateFaceNormal(p,s,t,X),this._getFaceVertices(p,s,t,J,K,Q),i(J,J,K),i(J,J,Q),n(J,J,1/3);for(let e=0;e<3;e++)m.push(J[e]);for(let e=0;e<3;e++)m.push(J[e]+X[e]*l);h.push(h.length),h.push(h.length)}}}const p=new O([["position",{data:u,size:3,exclusive:!0}]],[["position",new Uint32Array(c)]],2);t.push(p),r.push(this._debugVertexNormalMaterial),a.push(b(a[0]));const f=new O([["position",{data:m,size:3,exclusive:!0}]],[["position",new Uint32Array(h)]],2);t.push(f),r.push(this._debugFaceNormalMaterial),a.push(b(a[0]))}_createAs3DShape(t,r,a,s){const o=t.geometry;if("mesh"!==o.type)return null;const i=this._createGeometryInfo(o,r);if(!i)return null;const{geometries:n,materials:l,transformations:u,objectTransformation:c}=i;N.DRAW_MESH_GEOMETRY_NORMALS&&this._addDebugNormals(o,n,l,u);const m=new I({geometries:n,materials:l,transformations:u,metadata:{layerUid:this._context.layer.uid,graphicUid:s}});m.transformation=c;const h=V,p=this._createEdgeMaterial(),f=e(p)?{baseMaterial:l[0],edgeMaterials:[p],properties:{mergeGeometries:!0,slicePlaneEnabled:this._context.slicePlaneEnabled}}:null,d=new G(this,m,n,null,null,h,a,f);d.needsElevationUpdates=S(a.mode);const g=o.extent.center.clone();return g.z=0,d.elevationContext.centerPointInElevationSR=g,d.alignedSampledElevation=h(d,d.elevationContext,this._context.elevationProvider,this._context.renderCoordsHelper),d}_createComponentNormals(e,t,r,a){switch(r.shading||"flat"){case"source":return this._createComponentNormalsSource(e,t,r,a);case"flat":return this._createComponentNormalsFlat(e,a);case"smooth":return this._createComponentNormalsSmooth(e,a);default:return}}_createComponentNormalsSource(e,t,r,a){if(!t)return this._createComponentNormalsFlat(e,a);let s=!1;if(!r.trustSourceNormals)for(let o=0;o<a.length;o+=3){this._calculateFaceNormal(e,a,o,X);for(let e=0;e<3;e++){const r=3*a[o+e];J[0]=t[r+0],J[1]=t[r+1],J[2]=t[r+2],l(X,J)<0&&(t[r+0]=-t[r+0],t[r+1]=-t[r+1],t[r+2]=-t[r+2],s=!0)}}return{normals:t,indices:a,didFlipNormals:s}}_createComponentNormalsFlat(e,t){const r=new Float32Array(t.length),a=new Uint32Array(3*t.length);for(let s=0;s<t.length;s+=3){const o=this._calculateFaceNormal(e,t,s,X);for(let e=0;e<3;e++)r[s+e]=o[e],a[s+e]=s/3}return{normals:r,indices:a,didFlipNormals:!1}}_createComponentNormalsSmooth(e,t){const r={};for(let n=0;n<t.length;n+=3){const a=this._calculateFaceNormal(e,t,n,X);for(let e=0;e<3;e++){const s=t[n+e];let l=r[s];l||(l={normal:o(),count:0},r[s]=l),i(l.normal,l.normal,a),l.count++}}const a=new Float32Array(3*t.length),s=new Uint32Array(3*t.length);for(let o=0;o<t.length;o++){const e=r[t[o]];1!==e.count&&(u(e.normal,e.normal),e.count=1);for(let t=0;t<3;t++)a[3*o+t]=e.normal[t];s[o]=o}return{normals:a,indices:s,didFlipNormals:!1}}_getFaceVertices(e,t,r,a,s,o){const i=3*t[r+0],n=3*t[r+1],l=3*t[r+2];a[0]=e[i+0],a[1]=e[i+1],a[2]=e[i+2],s[0]=e[n+0],s[1]=e[n+1],s[2]=e[n+2],o[0]=e[l+0],o[1]=e[l+1],o[2]=e[l+2]}_calculateFaceNormal(e,t,r,a){return this._getFaceVertices(e,t,r,J,K,Q),c(K,K,J),c(Q,Q,J),m(J,K,Q),u(a,J),a}_getOrCreateComponents(e){return e.components?e.components:ae}_createPositionBuffer(e){const t=e.vertexAttributes.position,r=new Float64Array(t.length),a=this._context.renderCoordsHelper.spatialReference;return d(e.vertexAttributes.position,e.spatialReference,0,r,a,0,t.length/3),r}_createNormalBuffer(e,t){const r=e.vertexAttributes.normal;if(!r)return null;if("local"===this._context.layerView.view.viewingMode)return r;const a=e.vertexAttributes.position,s=new Float32Array(r.length);return A(r,a,t,e.spatialReference,s)}_createTangentBuffer(e,t){const r=e.vertexAttributes.tangent;if(!r)return null;if("local"===this._context.layerView.view.viewingMode)return r;const a=e.vertexAttributes.position,s=new Float32Array(r.length);return P(r,a,t,e.spatialReference,s)}_createColorBuffer(e){return e.vertexAttributes.color}_createSymbolColorBuffer(e){if(this._requiresSymbolVertexColors()){const r=this._getVertexOpacityAndColor(e),a=k(t(this.symbolLayer,"material","colorMixMode")),s=new Uint8Array(4);return H(r,a,s),s}return null}_createBuffers(e,t){const r=e.vertexAttributes&&e.vertexAttributes.position;if(!r)return this.logger.warn("Mesh geometry must contain position vertex attributes"),null;const a=e.vertexAttributes.normal,s=e.vertexAttributes.uv,o=e.vertexAttributes.tangent;if(a&&a.length!==r.length)return this.logger.warn("Mesh normal vertex buffer must contain the same number of elements as the position buffer"),null;if(o&&o.length/4!=r.length/3)return this.logger.warn("Mesh tangent vertex buffer must contain the same number of elements as the position buffer"),null;if(s&&s.length/2!=r.length/3)return this.logger.warn("Mesh uv vertex buffer must contain the same number of elements as the position buffer"),null;const i=this._createPositionBuffer(e),n=this._createColorBuffer(e),l=this._createSymbolColorBuffer(t),u=this._createNormalBuffer(e,i);return{positionBuffer:i,normalBuffer:u,tangentBuffer:this._createTangentBuffer(e,i),uvBuffer:s,colorBuffer:n,symbolColorBuffer:l,objectTransformation:this._transformCenterLocal(e,i,u)}}_transformCenterLocal(e,t,r){const a=e.extent.center,s=this._context.renderCoordsHelper.spatialReference;Z[0]=a.x,Z[1]=a.y,Z[2]=0;const o=v();g(e.spatialReference,Z,o,s),f(ee,o);for(let i=0;i<t.length;i+=3)J[0]=t[i+0],J[1]=t[i+1],J[2]=t[i+2],h(J,J,ee),t[i+0]=J[0],t[i+1]=J[1],t[i+2]=J[2];if(r){w(te,o),M(te,te);for(let e=0;e<r.length;e+=3)J[0]=r[e+0],J[1]=r[e+1],J[2]=r[e+2],p(J,J,te),r[e+0]=J[0],r[e+1]=J[1],r[e+2]=J[2]}return o}_validateFaces(e,t){const r=e.vertexAttributes.position.length/3,a=t.faces;if(a){let e=-1;for(let t=0;t<a.length;t++){const r=a[t];r>e&&(e=r)}if(r<=e)return this.logger.warn(`Vertex index ${e} is out of bounds of the mesh position buffer`),!1}else if(r%3!=0)return this.logger.warn("Mesh position buffer length must be a multiple of 9 if no component faces are defined (3 values per vertex * 3 vertices per triangle)"),!1;return!0}_getOrCreateFaces(e,t){return t.faces?t.faces:F(e.vertexAttributes.position.length/3)}_isOutsideClippingArea(e){if(!this._context.clippingExtent)return!1;const t=e.vertexAttributes&&e.vertexAttributes.position;if(!t)return!1;const r=this._context.elevationProvider.spatialReference;let a;const s=t.length/3;return e.spatialReference.equals(r)?a=t:(a=new Float64Array(t.length),d(e.vertexAttributes.position,e.spatialReference,0,a,r,0,s)),R(re),j(re,a,0,s),!B(re,this._context.clippingExtent)}_createGeometryInfo(e,t){if(!x(e.spatialReference,this._context.layerView.view.spatialReference))return this.logger.warn("Geometry spatial reference is not compatible with the view"),null;if(this._isOutsideClippingArea(e))return null;const r=this._createBuffers(e,t);if(!r)return null;const{positionBuffer:a,uvBuffer:s,colorBuffer:o,symbolColorBuffer:i,normalBuffer:n,tangentBuffer:l,objectTransformation:u}=r,c=this._getOrCreateComponents(e),m=[],h=[],p=[];let f=!1;for(const d of c){if(!this._validateFaces(e,d))return null;const t=this._getOrCreateFaces(e,d);if(0===t.length)continue;const r=this._createComponentNormals(a,n,d,t);r.didFlipNormals&&(f=!0);const u=[["position",{size:3,data:a,exclusive:!0}],["normal",{size:3,data:r.normals,exclusive:!0}]],c=[["position",t],["normal",r.indices]];o&&(u.push(["color",{size:4,data:o,exclusive:!0}]),c.push(["color",t])),i&&(u.push(["symbolColor",{size:4,data:i,exclusive:!0}]),c.push(["symbolColor",new Uint16Array(t.length)])),e.vertexAttributes.uv&&(u.push(["uv0",{size:2,data:s,exclusive:!0}]),c.push(["uv0",t])),e.vertexAttributes.tangent&&(u.push(["tangent",{size:4,data:l,exclusive:!0}]),c.push(["tangent",t]));const g=new O(u,c);m.push(g),h.push(v()),p.push(this._getOrCreateMaterial(e,d))}return f&&this.logger.warn("Normals have been automatically flipped to be consistent with the counter clock wise face winding order. It is better to generate mesh geometries that have consistent normals."),{geometries:m,transformations:h,materials:p,objectTransformation:u}}_createEdgeMaterial(){const e={opacity:this._getLayerOpacity()};return L(this.symbolLayer,e)}}const Z=o(),J=o(),K=o(),Q=o(),X=o(),ee=v(),te=_(),re=E(),ae=[new T];export default Y;export{Y as Graphics3DMeshFillSymbolLayer};
