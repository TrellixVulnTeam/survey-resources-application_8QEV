/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e,unwrap as t}from"../../../../core/maybe.js";import r from"../../../../core/Logger.js";import n from"../../../../core/Error.js";import{throwIfAbortError as a}from"../../../../core/promiseUtils.js";import s from"../../../../request.js";import{result as o}from"../../../../core/asyncUtils.js";import{d as i}from"../../../../chunks/vec3f64.js";import{Version as u}from"../../../../core/Version.js";import{empty as l,expandWithVec3 as c}from"../../../../geometry/support/aaBoundingBox.js";import{requestImage as p}from"../../../../support/requestImageUtils.js";import{Geometry as m}from"../../webgl-engine/lib/Geometry.js";import{DefaultMaterial as f}from"../../webgl-engine/materials/DefaultMaterial.js";import{Texture as d}from"../../webgl-engine/lib/Texture.js";const y=r.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");async function x(e,t){const r=await g(e,t);return{resource:r,textures:await A(r.textureDefinitions,t)}}async function g(r,n){const i=e(n)&&n.streamDataRequester;if(i)return h(r,i,n);const u=await o(s(r,t(n)));if(!0===u.ok)return u.value.data;a(u.error),w(u.error)}async function h(e,t,r){const n=await o(t.request(e,"json",r));if(!0===n.ok)return n.value;a(n.error),w(n.error.details.url)}function w(e){throw new n("",`Request for object resource failed: ${e}`)}function v(e){const t=e.params,r=t.topology;let n=!0;switch(t.vertexAttributes||(y.warn("Geometry must specify vertex attributes"),n=!1),t.topology){case"PerAttributeArray":break;case"Indexed":case null:case void 0:{const e=t.faces;if(e){if(t.vertexAttributes)for(const r in t.vertexAttributes){const t=e[r];t&&t.values?(null!=t.valueType&&"UInt32"!==t.valueType&&(y.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`),n=!1),null!=t.valuesPerElement&&1!==t.valuesPerElement&&(y.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`),n=!1)):(y.warn(`Indexed geometry does not specify face indices for '${r}' attribute`),n=!1)}}else y.warn("Indexed geometries must specify faces"),n=!1;break}default:y.warn(`Unsupported topology '${r}'`),n=!1}e.params.material||(y.warn("Geometry requires material"),n=!1);const a=e.params.vertexAttributes;for(const s in a){a[s].values||(y.warn("Geometries with externally defined attributes are not yet supported"),n=!1)}return n}function b(t,r){const n=[],a=[],s=[],o=[],l=t.resource,c=u.parse(l.version||"1.0","wosr");I.validate(c);const p=l.model.name,y=l.model.geometries,x=l.materialDefinitions,g=t.textures;let h=0;const w=new Map;for(let u=0;u<y.length;u++){const t=y[u];if(!v(t))continue;const l=M(t),c=t.params.vertexAttributes,p=[];for(const e in c){const t=c[e],r=t.values;p.push([e,{data:r,size:t.valuesPerElement,exclusive:!0}])}const b=[];if("PerAttributeArray"!==t.params.topology){const e=t.params.faces;for(const t in e)b.push([t,new Uint32Array(e[t].values)])}const j=g&&g[l.texture];if(j&&!w.has(l.texture)){const{image:e,params:t}=j,r=new d(e,t);o.push(r),w.set(l.texture,r)}const A=w.get(l.texture),I=A?A.id:void 0;let P=s[l.material]?s[l.material][l.texture]:null;if(!P){const t=x[l.material.substring(l.material.lastIndexOf("/")+1)].params;1===t.transparency&&(t.transparency=0);const n=j&&j.alphaChannelUsage,a=t.transparency>0||"transparency"===n||"maskAndTransparency"===n,o={ambient:i(t.diffuse),diffuse:i(t.diffuse),opacity:1-(t.transparency||0),transparent:a,textureAlphaMode:j?U(j.alphaChannelUsage):void 0,textureAlphaCutoff:.33,textureId:I,initTextureTransparent:!0,doubleSided:!0,cullFace:0,colorMixMode:t.externalColorMixMode||"tint",textureAlphaPremultiplied:!0};e(r)&&r.materialParamsMixin&&Object.assign(o,r.materialParamsMixin),P=new f(o),s[l.material]||(s[l.material]={}),s[l.material][l.texture]=P}a.push(P);const T=new m(p,b);h+=b.position?b.position.length:0,n.push(T)}return{name:p,stageResources:{textures:o,materials:a,geometries:n},pivotOffset:l.model.pivotOffset,boundingBox:j(n),numberOfVertices:h,lodThreshold:null}}function j(t){const r=l();return t.forEach((t=>{const n=t.boundingInfo;e(n)&&(c(r,n.getBBMin()),c(r,n.getBBMax()))})),r}async function A(t,r){const n=[];for(const o in t){const a=t[o],s=a.images[0].data;if(!s){y.warn("Externally referenced texture data is not yet supported");continue}const i=a.encoding+";base64,"+s,u="/textureDefinitions/"+o,l={noUnpackFlip:!0,wrap:{s:10497,t:10497},preMultiplyAlpha:!0},c=e(r)&&r.disableTextures?Promise.resolve(null):p(i,r);n.push(c.then((e=>({refId:u,image:e,params:l,alphaChannelUsage:"rgba"===a.channels?a.alphaChannelUsage||"transparency":"none"}))))}const a=await Promise.all(n),s={};for(const e of a)s[e.refId]=e;return s}function U(e){switch(e){case"mask":return 2;case"maskAndTransparency":return 3;case"none":return 1;case"transparency":default:return 0}}function M(e){const t=e.params;return{id:1,material:t.material,texture:t.texture,region:t.texture}}const I=new u(1,2,"wosr");export{A as createTextureResources,x as load,b as processLoadResult};
