/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isArrayBuffer as t}from"../../../core/typedArrayUtil.js";import{isSome as r}from"../../../core/maybe.js";import e from"../../../geometry/SpatialReference.js";import{q as a}from"../../../chunks/vec3.js";import{projectBuffer as o}from"../../../geometry/projection.js";import{c as f}from"../../../chunks/quat.js";import{f as i,c as n}from"../../../chunks/vec3f32.js";import{b as s}from"../../../chunks/quatf32.js";import{readGeometry as u,getAttributeValues as l,evaluateRenderer as b,filterInPlace as m}from"./i3s/PointCloudWorkerUtil.js";class p{transform(e){const a=this._transform(e),o=[a.points.buffer,a.rgb.buffer];r(a.pointIdFilterMap)&&o.push(a.pointIdFilterMap.buffer);for(const r of a.attributes)"buffer"in r.values&&t(r.values.buffer)&&r.values.buffer!==a.rgb.buffer&&o.push(r.values.buffer);return Promise.resolve({result:a,transferList:o})}_transform(t){const a=u(t.schema,t.geometryBuffer);let o=a.length/3,f=null;const i=[],n=l(t.primaryAttributeData,a,o);r(t.primaryAttributeData)&&n&&i.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:n});const s=l(t.modulationAttributeData,a,o);r(t.modulationAttributeData)&&s&&i.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:s});let p=b(t.rendererInfo,n,s,o);if(t.filterInfo&&t.filterInfo.length>0&&r(t.filterAttributesData)){const r=t.filterAttributesData.map((t=>{const r=l(t,a,o),e={attributeInfo:t.attributeInfo,values:r};return i.push(e),e}));f=new Uint32Array(o),o=m(a,p,f,t.filterInfo,r)}for(const r of t.userAttributesData){const t=l(r,a,o);i.push({attributeInfo:r.attributeInfo,values:t})}3*o<p.length&&(p=new Uint8Array(p.buffer.slice(0,3*o))),this._applyElevationOffsetInPlace(a,o,t.elevationOffset);const c=this._transformCoordinates(a,o,t.obb,e.fromJSON(t.inSR),e.fromJSON(t.outSR));return{obb:t.obb,points:c,rgb:p,attributes:i,pointIdFilterMap:f}}_transformCoordinates(t,r,e,s,u){if(!o(t,s,0,t,u,0,r))throw Error("Can't reproject");const l=i(e.center[0],e.center[1],e.center[2]),b=n(),m=n();f(c,e.quaternion);const p=new Float32Array(3*r);for(let o=0;o<r;o++)b[0]=t[3*o]-l[0],b[1]=t[3*o+1]-l[1],b[2]=t[3*o+2]-l[2],a(m,b,c),e.halfSize[0]=Math.max(e.halfSize[0],Math.abs(m[0])),e.halfSize[1]=Math.max(e.halfSize[1],Math.abs(m[1])),e.halfSize[2]=Math.max(e.halfSize[2],Math.abs(m[2])),p[3*o]=b[0],p[3*o+1]=b[1],p[3*o+2]=b[2];return p}_applyElevationOffsetInPlace(t,r,e){if(0!==e)for(let a=0;a<r;a++)t[3*a+2]+=e}}const c=s();function h(){return new p}export default h;
