/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as r}from"../../../../chunks/tslib.es6.js";import{ReloadableShaderModule as e}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as i,parameter as o}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as s}from"../lib/DefaultVertexAttributeLocations.js";import a from"../../../webgl/Program.js";import{makePipelineState as n,defaultDepthWriteParams as p,defaultColorWriteParams as u}from"../../../webgl/renderState.js";import{View as l}from"../core/shaderLibrary/util/View.glsl.js";import{DefaultTextureUnits as h}from"../lib/DefaultTextureUnits.js";import{Slice as d}from"../core/shaderLibrary/Slice.glsl.js";import{OutputHighlight as c}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{blendingDefault as m,OITBlending as g,OITDepthTest as f,OITDepthWrite as b,getOITPolygonOffset as y}from"../lib/OrderIndependentTransparency.js";import{bindMultipassTerrainUniforms as T}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{ReadShadowMap as v}from"../core/shaderLibrary/shading/ReadShadowMap.glsl.js";import{ScreenSpaceReflections as w}from"../core/shaderLibrary/shading/ScreenSpaceReflections.glsl.js";import{WaterDistortion as S}from"../core/shaderLibrary/shading/WaterDistortion.glsl.js";import{W as j}from"../../../../chunks/WaterSurface.glsl.js";class x extends t{constructor(r,e){super(r,e),this.waterTextureRepository=r.waterTextureRepository}initializeProgram(r){const e=x.shader.get(),t=this.configuration,i=e.build({OITEnabled:0===t.transparencyPassType,output:t.output,viewingMode:r.viewingMode,slicePlaneEnabled:t.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,receiveShadows:t.receiveShadows,pbrMode:3,useCustomDTRExponentForWater:!0,ssrEnabled:t.useSSR,highStepCount:!0,multipassTerrainEnabled:t.multipassTerrainEnabled,cullAboveGround:t.cullAboveGround});return new a(r.rctx,i.generateSource("vertex"),i.generateSource("fragment"),s)}ensureResource(r){return this.waterTextureRepository.ready||this.waterTextureRepository.updating||this.waterTextureRepository.loadTextures(r),this.waterTextureRepository.ready?2:1}bindPass(r,e,t){l.bindProjectionMatrix(this.program,t.camera.projectionMatrix),t.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",t.camera.nearFar),this.program.setUniform2fv("inverseViewport",t.inverseViewport),T(this.program,r,t)),0===this.configuration.output&&(t.lighting.setUniforms(this.program,!1),w.bindUniforms(this.program,r,t)),0!==this.configuration.output&&2!==this.configuration.output||(S.bindUniforms(this.program,e),this.waterTextureRepository.bindRepo(r)),this.program.setUniform4fv("waterColor",e.color),4===this.configuration.output&&c.bindOutputHighlight(r,this.program,t)}bindDraw(r){l.bindView(this.program,r),0!==this.configuration.output&&7!==this.configuration.output||l.bindCamPosition(this.program,r.origin,r.camera.viewInverseTransposeMatrix),0===this.configuration.output&&v.bindUniforms(this.program,r,h.SHADOW_MAP),0!==this.configuration.output&&7!==this.configuration.output&&4!==this.configuration.output||d.bindUniformsWithOrigin(this.program,this.configuration,r)}setPipelineState(r){const e=this.configuration,t=3===r,i=2===r;return n({blending:2!==e.output&&4!==e.output&&e.transparent?t?m:g(r):null,depthTest:{func:f(r)},depthWrite:t?e.writeDepth&&p:b(r),colorWrite:u,polygonOffset:t||i?null:y(e.enableOffset)})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}x.shader=new e(j,(()=>import("../shaders/WaterSurface.glsl.js")));class P extends i{constructor(){super(...arguments),this.output=0,this.receiveShadows=!1,this.slicePlaneEnabled=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!1,this.useSSR=!1,this.isDraped=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!0}}r([o({count:8})],P.prototype,"output",void 0),r([o()],P.prototype,"receiveShadows",void 0),r([o()],P.prototype,"slicePlaneEnabled",void 0),r([o()],P.prototype,"transparent",void 0),r([o()],P.prototype,"enableOffset",void 0),r([o()],P.prototype,"writeDepth",void 0),r([o()],P.prototype,"useSSR",void 0),r([o()],P.prototype,"isDraped",void 0),r([o({count:4})],P.prototype,"transparencyPassType",void 0),r([o()],P.prototype,"multipassTerrainEnabled",void 0),r([o()],P.prototype,"cullAboveGround",void 0);export{x as WaterTechnique,P as WaterTechniqueConfiguration};
