/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import"../../../../../core/has.js";import e from"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../../../../core/accessorSupport/decorators/subclass.js";import"../../../../../core/urlUtils.js";import"../../../../../core/uuid.js";import"../../../../../portal/support/resourceExtension.js";import s from"../../../../../core/Accessor.js";import{getAssetUrl as a}from"../../../../../assets.js";import{requestImage as i}from"../../../../../support/requestImageUtils.js";import p from"../../../../webgl/Texture.js";const l=e.getLogger("esri.views.3d.webgl-engine.materials.internal.waterMaterialUtils");let n=class extends s{constructor(){super(...arguments),this.data=[],this.loadingState=0}dispose(){this.loadingState=0,this.data.forEach((t=>{t.dispose(),t=null})),this.data=null}getTextureProps(t,e,r=!1){return{target:3553,pixelFormat:6408,dataType:5121,wrapMode:10497,samplingMode:9987,hasMipmap:r,maxAnisotropy:8,width:t,height:e}}get updating(){return 1===this.loadingState}get ready(){return 2===this.loadingState}loadTextures(t){const e=[a("esri/images/materials/water/normals.jpg"),a("esri/images/materials/water/perturbation.jpg")];this.loadingState=1,Promise.all(e.map((t=>i(t)))).then((e=>{e.forEach(((e,r)=>{this.data[r]=new p(t,this.getTextureProps(e.width,e.height,!0),e)})),this.loadingState=2})).catch((t=>{l.error("Failed to load textures for water material.",t),this.loadingState=0}))}bindRepo(t){for(let e=0;e<this.data.length;e++)t.bindTexture(this.data[e],e)}};t([r()],n.prototype,"loadingState",void 0),t([r({type:Boolean,readOnly:!0})],n.prototype,"updating",null),n=t([o("esri.views.3d.webgl-engine.materials.internal.WaterTextureRepository")],n);export{n as WaterTextureRepository};
