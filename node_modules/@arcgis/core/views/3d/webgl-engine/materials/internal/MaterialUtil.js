/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isNone as t,isSome as n}from"../../../../../core/maybe.js";import{glClamp as e,clamp as i}from"../../../../../core/mathUtils.js";import{c as o}from"../../../../../chunks/vec3f64.js";import{s as r,c as s,n as c}from"../../../../../chunks/vec3.js";import{create as f,setMin as a,setMax as l}from"../../../../../geometry/support/aaBoundingBox.js";import{assert as u}from"../../lib/Util.js";import{isInstanceHidden as m}from"../renderers/utils.js";import{scale as p}from"../../lib/screenSizePerspectiveUtils.js";const h=f();function d(t,n,e,i,o,r,s){const c=m(n),f=e.tolerance;if(!c)if(t.boundingInfo)u(0===t.primitiveType),x(t.boundingInfo,i,o,f,r,s);else{const n=t.indices.get("position"),e=t.vertexAttributes.get("position");b(i,o,0,n.length/3,n,e,void 0,r,s)}}const g=o();function x(e,i,o,r,s,c){if(t(e))return;const f=A(i,o,g);if(a(h,e.getBBMin()),l(h,e.getBBMax()),n(s)&&s.applyToAabb(h),L(h,i,f,r)){const{primitiveIndices:t,indices:n,position:f}=e,a=t?t.length:n.length/3;if(a>S){const t=e.getChildren();if(void 0!==t){for(let n=0;n<8;++n)void 0!==t[n]&&x(t[n],i,o,r,s,c);return}}b(i,o,0,a,n,f,t,s,c)}}const M=o();function b(t,e,i,o,r,s,c,f,a){if(c)return v(t,e,i,o,r,s,c,f,a);const l=s.data,u=s.stride||s.size,m=t[0],p=t[1],h=t[2],d=e[0]-m,g=e[1]-p,x=e[2]-h;for(let b=i,v=3*i;b<o;++b){let t=u*r[v++],e=l[t++],i=l[t++],o=l[t];t=u*r[v++];let s=l[t++],c=l[t++],y=l[t];t=u*r[v++];let T=l[t++],A=l[t++],L=l[t];n(f)&&([e,i,o]=f.applyToVertex(e,i,o,b),[s,c,y]=f.applyToVertex(s,c,y,b),[T,A,L]=f.applyToVertex(T,A,L,b));const V=s-e,B=c-i,z=y-o,E=T-e,I=A-i,N=L-o,P=g*N-I*x,U=x*E-N*d,S=d*I-E*g,W=V*P+B*U+z*S;if(Math.abs(W)<=Number.EPSILON)continue;const O=m-e,k=p-i,R=h-o,C=O*P+k*U+R*S;if(W>0){if(C<0||C>W)continue}else if(C>0||C<W)continue;const H=k*z-B*R,X=R*V-z*O,Y=O*B-V*k,_=d*H+g*X+x*Y;if(W>0){if(_<0||C+_>W)continue}else if(_>0||C+_<W)continue;const q=(E*H+I*X+N*Y)/W;if(q>=0){a(q,j(V,B,z,E,I,N,M),b)}}}function v(t,e,i,o,r,s,c,f,a){const l=s.data,u=s.stride||s.size,m=t[0],p=t[1],h=t[2],d=e[0]-m,g=e[1]-p,x=e[2]-h;for(let b=i;b<o;++b){const t=c[b];let e=3*t,i=u*r[e++],o=l[i++],s=l[i++],v=l[i];i=u*r[e++];let y=l[i++],T=l[i++],A=l[i];i=u*r[e];let L=l[i++],V=l[i++],B=l[i];n(f)&&([o,s,v]=f.applyToVertex(o,s,v,b),[y,T,A]=f.applyToVertex(y,T,A,b),[L,V,B]=f.applyToVertex(L,V,B,b));const z=y-o,E=T-s,I=A-v,N=L-o,P=V-s,U=B-v,S=g*U-P*x,W=x*N-U*d,O=d*P-N*g,k=z*S+E*W+I*O;if(Math.abs(k)<=Number.EPSILON)continue;const R=m-o,C=p-s,H=h-v,X=R*S+C*W+H*O;if(k>0){if(X<0||X>k)continue}else if(X>0||X<k)continue;const Y=C*I-E*H,_=H*z-I*R,q=R*E-z*C,w=d*Y+g*_+x*q;if(k>0){if(w<0||X+w>k)continue}else if(w>0||X+w<k)continue;const D=(N*Y+P*_+U*q)/k;if(D>=0){a(D,j(z,E,I,N,P,U,M),t)}}}const y=o(),T=o();function j(t,n,e,i,o,f,a){return r(y,t,n,e),r(T,i,o,f),s(a,y,T),c(a,a),a}function A(t,n,e){return r(e,1/(n[0]-t[0]),1/(n[1]-t[1]),1/(n[2]-t[2]))}function L(t,n,e,i){return V(t,n,e,i,1/0)}function V(t,n,e,i,o){const r=(t[0]-i-n[0])*e[0],s=(t[3]+i-n[0])*e[0];let c=Math.min(r,s),f=Math.max(r,s);const a=(t[1]-i-n[1])*e[1],l=(t[4]+i-n[1])*e[1];if(f=Math.min(f,Math.max(a,l)),f<0)return!1;if(c=Math.max(c,Math.min(a,l)),c>f)return!1;const u=(t[2]-i-n[2])*e[2],m=(t[5]+i-n[2])*e[2];return f=Math.min(f,Math.max(u,m)),!(f<0)&&(c=Math.max(c,Math.min(u,m)),!(c>f)&&c<o)}function B(t,n,i,o,r){let s=(i.screenLength||0)*t.pixelRatio;r&&(s=p(s,o,n,r));const c=s*Math.tan(.5*t.fovY)/(.5*t.fullHeight);return e(c*n,i.minWorldLength||0,null!=i.maxWorldLength?i.maxWorldLength:1/0)}function z(t,n,e){if(!t)return;const i=t.parameters,o=t.paddingPixelsOverride;n.setUniform4f(e,i.divisor,i.offset,i.minPixelSize,o)}function E(t,n){const e=n?E(n):{};for(const i in t){let n=t[i];n&&n.forEach&&(n=P(n)),null==n&&i in e||(e[i]=n)}return e}function I(t,n){let e=!1;for(const i in n){const o=n[i];void 0!==o&&(e=!0,Array.isArray(o)?t[i]=o.slice():t[i]=o)}return e}function N(t,n,e,o,r){if(!n.options.selectionMode)return;const s=t.vertexAttributes.get("position").data,c=t.vertexAttributes.get("size"),f=c&&c.data[0],a=e[0],l=e[1],u=((f+o)/2+4)*t.screenToWorldRatio;let m=Number.MAX_VALUE;for(let p=0;p<s.length-5;p+=3){const t=s[p],n=s[p+1],e=a-t,o=l-n,r=s[p+3]-t,c=s[p+4]-n,f=i((r*e+c*o)/(r*r+c*c),0,1),u=r*f-e,h=c*f-o,d=u*u+h*h;d<m&&(m=d)}m<u*u&&r()}function P(t){const n=[];return t.forEach((t=>n.push(t))),n}const U={multiply:1,ignore:2,replace:3,tint:4},S=1e3;export{z as bindScreenSizePerspective,U as colorMixModes,A as computeInvDir,j as computeNormal,E as copyParameters,L as intersectAabbInvDir,V as intersectAabbInvDirBefore,N as intersectDrapedRenderLineGeometry,d as intersectTriangleGeometry,b as intersectTriangles,I as updateParameters,B as verticalOffsetAtDistance};
