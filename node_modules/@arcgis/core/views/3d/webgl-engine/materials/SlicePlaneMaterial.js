/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as r}from"../../../../chunks/tslib.es6.js";import{autoDispose as t}from"../lib/AutoDisposable.js";import e from"../lib/GLMaterial.js";import{intersectTriangleGeometry as i}from"./internal/MaterialUtil.js";import{Material as o,materialParametersDefaults as s}from"../lib/Material.js";import{DefaultBufferWriter as a,PositionUVLayout as n}from"./internal/DefaultBufferWriter.js";import{SlicePlaneMaterialTechnique as u}from"../shaders/SlicePlaneMaterialTechnique.js";class l extends o{constructor(r){super(r,m)}intersect(r,t,e,o,s,a,n){return i(r,t,o,s,a,void 0,n)}createBufferWriter(){return new a(n)}getGLMaterial(r){return 0===r.output?new c(r):void 0}}class c extends e{constructor(r){super(r),this.technique=new u(this.techniqueRep.constructionContext,null),this.updateParameters()}updateParameters(){}beginSlot(r){return 8===r}bind(r,t){r.bindProgram(this.technique.program),this.technique.bindPass(r,this.material.params,t)}}r([t()],c.prototype,"technique",void 0);const m={backgroundColor:[1,0,0,.5],gridColor:[0,1,0,.5],gridWidth:4,...s};export{l as SlicePlaneMaterial};
