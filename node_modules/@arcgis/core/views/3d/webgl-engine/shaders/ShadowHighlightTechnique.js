/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as r}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/mathUtils.js";import{ReloadableShaderModule as e}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as i}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as t,parameter as o}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as s}from"../lib/DefaultVertexAttributeLocations.js";import h from"../../../webgl/Program.js";import{makePipelineState as a,separateBlendingParams as n,defaultColorWriteParams as p}from"../../../webgl/renderState.js";import"../../../webgl/checkWebGLError.js";import"../../../webgl/FramebufferObject.js";import{S as m}from"../../../../chunks/ShadowHighlight.glsl.js";class l extends i{initializeProgram(r){const e=l.shader.get().build(this.configuration);return new h(r.rctx,e.generateSource("vertex"),e.generateSource("fragment"),s)}initializePipeline(r){return a({blending:n(770,1,771,771),colorWrite:p,depthTest:null,depthWrite:null})}bindPass(r,e,i){r.bindTexture(e.depthMap,2),r.bindTexture(e.highlightMap,3),this.program.setUniform4fv("color",e.color),this.program.setUniform1f("opacity",e.opacity),this.program.setUniform1f("occludedOpacity",e.occludedOpacity),this.program.setUniform1f("terminationFactor",e.terminationFactor),this.program.setUniform2fv("nearFar",e.nearFar),this.program.setUniformMatrix4fv("inverseView",e.inverseView),this.program.setUniform4fv("projInfo",e.projInfo),this.program.setUniform2fv("zScale",e.zScale),this.program.setUniform1i("depthMap",2),this.program.setUniform3fv("lightingMainDirectionView",e.lightDirView),this.program.setUniform1i("highlightMap",3),this.program.setUniform2fv("texelSize",e.texelSize),e.shadowMap.setUniforms(this.program),e.shadowMap.bindView(this.program,e.origin),e.shadowMap.bindSnapshot(e.highlightSnapshotSlot,6),this.program.setUniform1i("highlightDepthTex",6),e.shadowMap.bindSnapshot(e.defaultSnapshotSlot,7),this.program.setUniform1i("defaultDepthTex",7)}get primitiveType(){return 5}}l.shader=new e(m,(()=>import("./ShadowHighlight.glsl.js")));class g extends t{constructor(){super(...arguments),this.highlightedThreshold=.99999,this.selfShadowThreshold=.025}}r([o()],g.prototype,"highlightedThreshold",void 0),r([o()],g.prototype,"selfShadowThreshold",void 0);export{l as ShadowHighlightTechnique,g as ShadowHighlightTechniqueConfiguration};
