/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as i}from"../core/shaderTechnique/ShaderTechnique.js";import{ShaderTechniqueConfiguration as t,parameter as s}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as a}from"../lib/DefaultVertexAttributeLocations.js";import o from"../../../webgl/Program.js";import{makePipelineState as n,defaultDepthWriteParams as l,separateBlendingParams as d,defaultColorWriteParams as p}from"../../../webgl/renderState.js";import{View as m}from"../core/shaderLibrary/util/View.glsl.js";import{bindScreenSizePerspective as c}from"../materials/internal/MaterialUtil.js";import{Slice as h}from"../core/shaderLibrary/Slice.glsl.js";import{HUD as f}from"../core/shaderLibrary/hud/HUD.glsl.js";import{bindMultipassGeometryUniforms as u}from"../core/shaderLibrary/shading/MultipassGeometryTest.glsl.js";import{VerticalOffset as b}from"../core/shaderLibrary/attributes/VerticalOffset.glsl.js";import{L as g,a as v}from"../../../../chunks/LineCallout.glsl.js";class E extends i{initializeProgram(e){const r=E.shader.get(),i=this.configuration,t=r.build({occlusionTestEnabled:i.occlusionTestEnabled,verticalOffsetEnabled:i.verticalOffset,screenSizePerspectiveEnabled:i.screenSizePerspective,depthHudEnabled:i.depthHudEnabled,depthHudAlignStartEnabled:i.depthHudAlignStartEnabled,screenCenterOffsetUnitsEnabled:i.screenCenterOffsetUnitsEnabled,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!0,viewingMode:e.viewingMode,isDraped:!1,multipassGeometryEnabled:i.multipassGeometryEnabled});return new o(e.rctx,t.generateSource("vertex"),t.generateSource("fragment"),a)}bindPass(e,r,i){m.bindProjectionMatrix(this.program,i.camera.projectionMatrix),g.bindUniforms(this.program,r,i.camera.pixelRatio||1),b.bindUniforms(this.program,r,i),f.bindUniforms(this.program,i),this.program.setUniform2fv("cameraNearFar",i.camera.nearFar),this.program.setUniform2fv("inverseViewport",i.inverseViewport),u(this.program,e,i),this.program.setUniform1i("hudVisibilityTexture",4),e.bindTexture(i.hudVisibilityTexture,4),this.program.setUniform1f("cameraGroundRelative",i.camera.aboveGround?1:-1),this.program.setUniform1f("polygonOffset",r.shaderPolygonOffset),m.bindViewport(this.program,i),this.program.setUniform1f("perDistancePixelRatio",Math.tan(i.camera.fovY/2)/(i.camera.fullViewport[2]/2)),this.program.setUniformMatrix4fv("viewNormal",i.camera.viewInverseTransposeMatrix),this.program.setUniform2f("pixelToNDC",2/i.camera.fullViewport[2],2/i.camera.fullViewport[3]);const t=i.camera.pixelRatio||1;this.program.setUniform1f("lineSize",Math.ceil(r.size)*t),c(r.screenSizePerspective,this.program,"screenSizePerspectiveAlignment")}bindDraw(e){m.bindView(this.program,e),m.bindCamPosition(this.program,e.origin,e.camera.viewInverseTransposeMatrix),h.bindUniformsWithOrigin(this.program,this.configuration,e)}setPipelineState(e){const r=e?519:513;return this.configuration.depthHudEnabled?n({depthTest:{func:r},depthWrite:l}):n({blending:d(1,770,771,771),depthTest:{func:r},colorWrite:p})}initializePipeline(){return this.setPipelineState(this.configuration.multipassGeometryEnabled)}}E.shader=new r(v,(()=>import("./LineCallout.glsl.js")));class y extends t{constructor(){super(...arguments),this.occlusionTestEnabled=!0,this.verticalOffset=!1,this.screenSizePerspective=!1,this.depthHudEnabled=!1,this.depthHudAlignStartEnabled=!1,this.screenCenterOffsetUnitsEnabled=0,this.slicePlaneEnabled=!1,this.multipassGeometryEnabled=!1}}e([s()],y.prototype,"occlusionTestEnabled",void 0),e([s()],y.prototype,"verticalOffset",void 0),e([s()],y.prototype,"screenSizePerspective",void 0),e([s()],y.prototype,"depthHudEnabled",void 0),e([s()],y.prototype,"depthHudAlignStartEnabled",void 0),e([s({count:2})],y.prototype,"screenCenterOffsetUnitsEnabled",void 0),e([s()],y.prototype,"slicePlaneEnabled",void 0),e([s()],y.prototype,"multipassGeometryEnabled",void 0);export{E as LineCalloutTechnique,y as LineCalloutTechniqueConfiguration};
