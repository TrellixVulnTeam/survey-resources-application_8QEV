/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import{isSome as t}from"../../../../core/maybe.js";import{c as r}from"../../../../chunks/vec3f64.js";import{b as s,i}from"../../../../chunks/vec3.js";import{I as e}from"../../../../chunks/mat4f64.js";import{ray as a}from"../../support/geometryUtils.js";import{isInstanceHidden as n}from"../materials/renderers/utils.js";import{IntersectorOptions as o,IntersectorResults as h,IntersectorTransform as d,getVerticalOffsetObject3D as c,IntersectorResult as l}from"./intersectorUtils.js";const f=1e-5;class m{constructor(t){this.options=new o,this.results=new h,this.transform=new d,this.performanceInfo={queryDuration:0,numObjectsTested:0},this.tolerance=f,this.verticalOffset=null,this._ray={origin:r(),direction:r()},this._rayEndPoint=r(),this._rayStartPointTransformed=r(),this._rayEndPointTransformed=r(),this.viewingMode=null==t?1:t}get ray(){return this._ray}get rayBeginPoint(){return this._ray.origin}get rayEndPoint(){return this._rayEndPoint}reset(t,r){this.resetWithRay(a.fromPoints(t,r,this._ray))}resetWithRay(t){t!==this._ray&&a.copy(t,this._ray),0!==this.options.verticalOffset?2===this.viewingMode?this._ray.origin[2]-=this.options.verticalOffset:this.verticalOffset=this.options.verticalOffset:this.verticalOffset=null,s(this._rayEndPoint,this._ray.origin,this._ray.direction),this._numObjectsTested=0,this.results.init(this._ray)}intersect(r,s,i,e,a,n){this.point=s,this.camera=i,this.filterPredicate=a,this.tolerance=null==e?f:e;const o=c(this.verticalOffset),h=n?t=>{n(t)&&this.intersectObject(t)}:t=>{this.intersectObject(t)};if(r&&r.length>0)for(const d of r){const r=d.getSpatialQueryAccelerator&&d.getSpatialQueryAccelerator();t(r)?(t(o)?r.forEachAlongRayWithVerticalOffset(this._ray.origin,this._ray.direction,h,o):r.forEachAlongRay(this._ray.origin,this._ray.direction,h),this.options.selectionMode&&this.options.hud&&r.forEachDegenerateObject(h)):d.getObjects().forAll((t=>h(t)))}this.sortResults()}intersectObject(r){this._numObjectsTested++;const s=r.geometryRecords;if(!s)return;const a=r.id,o=r.transformation;let h;const d=c(this.verticalOffset);for(const c of s){const{geometry:s,material:f,instanceParameters:m}=c;if(n(m))continue;h=s.id,this.transform.setAndInvalidateLazyTransforms(o,c.getShaderTransformation()),i(this._rayStartPointTransformed,this._ray.origin,this.transform.inverse),i(this._rayEndPointTransformed,this._rayEndPoint,this.transform.inverse);const u=this.transform.transform;t(d)&&(d.objectTransform=this.transform),f.intersect(s,m,this.transform.transform,this,this._rayStartPointTransformed,this._rayEndPointTransformed,((s,i,n,o,d,c)=>{if(s>=0){if(t(this.filterPredicate)&&!this.filterPredicate(this._ray.origin,this._rayEndPoint,s))return;const f=`Object3D ${a}`;if(d)return void((null==this.results.hud.dist||s<this.results.hud.dist)&&this.results.hud.set(r,f,s,i,e,o,c,h,n));const m=t=>t.set(r,f,s,i,u,o,null,h,n);if((null==this.results.min.drapedLayerOrder||o>=this.results.min.drapedLayerOrder)&&(null==this.results.min.dist||s<this.results.min.dist)&&m(this.results.min),0!==this.options.store&&(null==this.results.max.drapedLayerOrder||o<this.results.max.drapedLayerOrder)&&(null==this.results.max.dist||s>this.results.max.dist)&&m(this.results.max),2===this.options.store){const t=new l(this._ray);m(t),this.results.all.push(t)}}}),c.shaderTransformation)}}sortResults(){this.results.all.sort(((t,r)=>t.dist!==r.dist?t.dist-r.dist:t.drapedLayerOrder!==r.drapedLayerOrder?(void 0!==t.drapedLayerOrder?t.drapedLayerOrder:Number.MAX_VALUE)-(void 0!==r.drapedLayerOrder?r.drapedLayerOrder:Number.MAX_VALUE):(void 0!==r.drapedLayerGraphicOrder?r.drapedLayerGraphicOrder:Number.MIN_VALUE)-(void 0!==t.drapedLayerGraphicOrder?t.drapedLayerGraphicOrder:Number.MIN_VALUE)))}}m.DEFAULT_TOLERANCE=f;export{m as Intersector};
