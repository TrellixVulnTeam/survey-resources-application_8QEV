/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import{isNone as s,isSome as r}from"../../../../core/maybe.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import{isSVG as o}from"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import{createTask as a}from"../../../../core/promiseUtils.js";import n from"../../../../core/Accessor.js";import m from"../../../../core/Evented.js";import{clamp as u}from"../../../../core/mathUtils.js";import{createScreenPointArray as l,createRenderScreenPointArray as c,screenPointObjectToArray as p}from"../../../../core/screenUtils.js";import h from"../../../../core/Handles.js";import{requestImage as d}from"../../../../support/requestImageUtils.js";import g from"../../../webgl/Program.js";import{makePipelineState as f,simpleBlendingParams as _,defaultColorWriteParams as v}from"../../../webgl/renderState.js";import"../../../webgl/checkWebGLError.js";import k from"../../../webgl/Texture.js";import{Pos2 as y}from"./DefaultVertexBufferLayouts.js";import{createQuadVAO as T}from"./glUtil3D.js";import"../../../webgl/FramebufferObject.js";import{testWebGLDriver as b}from"./WebGLDriverTest.js";import{build as x}from"../shaders/Magnifier.glsl.js";import{loadMagnifierResources as j}from"../../../magnifier/resources.js";let S=class extends n{constructor(){super(...arguments),this._handles=new h,this._magnifier=null,this._imageSources=null,this._imageLoadTask=null,this._resources=null,this.events=new m,this.tmpScreenPoint=l(),this.tmpRenderPoint=c()}get updating(){return s(this._imageSources)&&r(this._imageLoadTask)&&!this._imageLoadTask.task.finished}get magnifier(){return this._magnifier}set magnifier(e){if(e===this._magnifier)return;this._handles.removeAll(),this._magnifier=e;const s=()=>{this.updateResourceLoading(),this.events.emit("request-render")};r(this._magnifier)&&this._handles.add(this._magnifier.watch("version",s)),s()}get enabled(){return r(this._validMagnifier)}get _validMagnifier(){return r(this._magnifier)&&this._magnifier.visible&&r(this._magnifier.position)&&this._magnifier.size>0?this._magnifier:null}get factor(){return r(this._magnifier)&&this._magnifier.factor||1}dispose(){this._magnifier=null,this._handles.destroy(),r(this._imageLoadTask)&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null),this.disposeResources()}render(e,r){const t=this._validMagnifier;if(s(t))return;const i=r.camera.pixelRatio,o=Math.ceil(i*t.size);if(this.updateResources(e,o),s(this._resources))return;const a=this._resources.textures,n=Math.ceil(1/this.factor*o);a.input.resize(n,n);const m=r.camera.fullWidth,l=r.camera.fullHeight;p(t.position,this.tmpScreenPoint);const c=r.camera.screenToRender(this.tmpScreenPoint,this.tmpRenderPoint),h=.5*n,d=.5*n;c[0]=u(c[0],h,m-h-1),c[1]=u(c[1],d,l-d-1);const g=Math.floor(c[0]-h),f=Math.floor(c[1]-d);e.bindTexture(a.input,0),e.gl.copyTexImage2D(a.input.descriptor.target,0,a.input.descriptor.pixelFormat,g,f,n,n,0);const _=t.offset.x*i,v=t.offset.y*i,k=(c[0]+_)/m*2-1,y=(c[1]-v)/l*2-1,T=o/m*2,b=o/l*2;e.bindVAO(this._resources.vao),e.bindTexture(a.overlay,1),e.bindTexture(a.mask,2);const x=this._resources.program;e.bindProgram(x),x.setUniform1i("textureInput",0),x.setUniform1i("textureOverlay",1),x.setUniform1i("textureMask",2),x.setUniform4f("drawPosition",k,y,T,b),x.setUniform1i("maskEnabled",t.maskEnabled?1:0),x.setUniform1i("overlayEnabled",t.overlayEnabled?1:0),e.setPipelineState(this._resources.pipelineState),e.drawArrays(5,0,4)}updateResourceLoading(){const e=this._validMagnifier;if(s(e))return;const t=e.maskUrl,i=e.overlayUrl;!r(this._imageLoadTask)||this._imageLoadTask.maskUrl===t&&this._imageLoadTask.overlayUrl===i||(this._imageLoadTask.task.abort(),this._imageLoadTask=null,this._imageSources=null),r(this._imageSources)||r(this._imageLoadTask)||(this._imageLoadTask={maskUrl:t,overlayUrl:i,task:a((async e=>{const o=s(t)||s(i)?j(e):null,a=r(t)?d(t,{signal:e}):o.then((e=>e.mask)),n=r(i)?d(i,{signal:e}):o.then((e=>e.overlay));this._imageSources={mask:await a,overlay:await n},this.disposeResources(),this.events.emit("request-render")}))},this._imageLoadTask.task.promise.then((()=>this.notifyChange("updating")),(()=>this.notifyChange("updating"))))}updateResources(e,t){if(!this.enabled)return void this.disposeResources();if(r(this._resources)){if(this._resources.textures.size!==t){const r=this.createTextureResources(e,t);if(s(r))return void this.disposeResources();this.disposeTextureResources(this._resources.textures),this._resources.textures=r}return}const i=this.createTextureResources(e,t);s(i)||(this._resources={textures:i,program:this.createProgram(e),vao:this.createVAO(e),pipelineState:f({blending:_(1,771),depthTest:null,depthWrite:null,colorWrite:v})})}disposeResources(){s(this._resources)||(this.disposeTextureResources(this._resources.textures),this._resources.program.dispose(),this._resources.vao.dispose(),this._resources=null)}disposeTextureResources(e){e.mask.dispose(),e.overlay.dispose(),e.input.dispose()}createTextureResources(e,r){if(s(this._imageSources))return null;this._imageSources.overlay.width=r,this._imageSources.overlay.height=r,this._imageSources.mask.width=r,this._imageSources.mask.height=r;const t=new k(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!0,preMultiplyAlpha:!o(this._imageSources.overlay.src)||!b(e).svgAlwaysPremultipliesAlpha},this._imageSources.overlay),i=new k(e,{target:3553,pixelFormat:6406,internalFormat:6406,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!0},this._imageSources.mask);return{input:new k(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!1}),mask:i,overlay:t,size:r}}createProgram(e){const s=x();return new g(e,s.generateSource("vertex"),s.generateSource("fragment"),this.attributeLocations)}createVAO(e){return T(e,y,this.attributeLocations,0,1)}get attributeLocations(){return{position:0}}};e([t()],S.prototype,"_imageSources",void 0),e([t()],S.prototype,"_imageLoadTask",void 0),e([t({readOnly:!0})],S.prototype,"updating",null),S=e([i("esri/views/3d/webgl-engine/lib/MagnifierHelper")],S);export{S as MagnifierHelper};
