/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{clamp as t,acosClamped as s,lerp as e}from"../../../../core/mathUtils.js";import{c as a}from"../../../../chunks/vec3f64.js";import{g as i,p as r,i as h,s as o}from"../../../../chunks/vec3.js";import{t as n,m as c,o as u,a as m,l as p}from"../../../../chunks/mat4.js";import{a as d}from"../../../../chunks/mat3f64.js";import{a as l}from"../../../../chunks/mat4f64.js";import{a as f}from"../../../../chunks/vec2f64.js";import{a as x}from"../../../../chunks/vec4f64.js";import{s as g,h as b,a as S,m as M,j as w,d as T,g as C,n as j,e as D,c as v}from"../../../../chunks/vec2.js";import{s as z,t as y}from"../../../../chunks/vec4.js";import{assert as A,logWithBase as U,verify as O,rayRay2D as P}from"./Util.js";import F from"../../../webgl/Texture.js";import{getGpuMemoryUsage as k}from"../../../webgl/Util.js";import{createColorTexture as N}from"./glUtil3D.js";import _ from"./Camera.js";import{DefaultTextureUnits as H}from"./DefaultTextureUnits.js";import L from"../../../webgl/FramebufferObject.js";class W{constructor(){this.camera=new _,this.lightMat=l()}}class R{constructor(t,s,e=0){this.rctx=t,this.viewingMode=s,this._enabled=!1,this.snapshots=[],this.textureSize=0,this.maxTextureSize=0,this.numCascades=1,this.maxNumCascades=4,this.splitSchemeLambda=0,this.warp=!0,this.cascadeDistances=[0,0,0,0,0],this.cascades=[],this.emptyTexture=N(this.rctx,[1,1,1,1]),this.maxTextureSize=this.rctx.parameters.maxTextureSize;for(let a=0;a<4;++a)this.cascades.push(new W);this.snapshotCount=e}dispose(){this.emptyTexture.dispose(),this.emptyTexture=null,this.discardDepthTexture(),this.discardAllSnapshots()}set maxCascades(s){this.maxNumCascades=t(Math.floor(s),1,4)}get maxCascades(){return this.maxNumCascades}set enabled(t){this._enabled=t,t||(this.discardDepthTexture(),this.discardAllSnapshots())}get enabled(){return this._enabled}get snapshotCount(){return this.snapshots.length}set snapshotCount(t){const s=this.snapshots.length;if(t>s){const e=t-s;this.snapshots.length=t;for(let t=0;t<e;++t)this.snapshots[s+t]=null}else if(t<this.snapshotCount){const e=s-t;for(let s=0;s<e;++s)this.discardSnapshot(t+s);this.snapshots.length=t}}getDepthTexture(){return this.depthTexture}getSnapshot(t){return this.snapshots[t]}getCascades(){for(let t=0;t<this.numCascades;++t)st[t]=this.cascades[t];return st.length=this.numCascades,st}prepare(t,s,e){A(this.enabled),this.textureSize=this.computeTextureSize(t.fullWidth,t.fullHeight),this.assertDepthTexture();const{near:a,far:i}=this.clampNearFar(e);this.computeCascadeDistances(i,a),this.setupMatrices(t,s);const r=t.viewMatrix,h=t.projectionMatrix;for(let o=0;o<this.numCascades;++o)this.constructCascade(o,h,r,s);this.lastOrigin=null,this.clear()}finish(t){A(this.enabled),this.rctx.bindFramebuffer(t)}bind(t,s=H.SHADOW_MAP){const e=this.rctx;e.bindTexture(this.enabled?this.depthTexture:this.emptyTexture,s),e.bindProgram(t),t.setUniform1i("uShadowMapTex",s),this.setUniforms(t)}bindToAllPrograms(t){const s=t.getProgramsUsingUniform("uShadowMapDistance");for(let e=0;e<s.length;e++)this.bind(s[e],H.SHADOW_MAP)}bindView(t,s){if(!this.enabled)return;const e=this.lastOrigin;if(!(e&&e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2])){this.lastOrigin=this.lastOrigin||a(),i(this.lastOrigin,s);for(let t=0;t<this.numCascades;++t){n(et,this.cascades[t].lightMat,s);for(let s=0;s<16;++s)at[16*t+s]=et[s]}}t.setUniformMatrix4fv("uShadowMapMatrix",at)}setUniforms(t){this.rctx.bindProgram(t),t.setUniform1f("uDepthHalfPixelSz",this.enabled?.5/this.textureSize:-1),t.setUniform1i("uShadowMapNum",this.numCascades),t.setUniform4f("uShadowMapDistance",this.cascadeDistances[0],this.numCascades>1?this.cascadeDistances[1]:1/0,this.numCascades>2?this.cascadeDistances[2]:1/0,this.numCascades>3?this.cascadeDistances[3]:1/0)}bindSnapshot(t,s){this.rctx.bindTexture(this.enabled?this.snapshots[t]:this.emptyTexture,s)}takeCascadeSnapshotTo(t,s){A(this.enabled);const e=this.rctx;this.assertSnapshot(s),this.bindFbo(),e.bindTexture(this.snapshots[s],H.SHADOW_MAP),e.gl.copyTexSubImage2D(3553,0,t.camera.viewport[0],t.camera.viewport[1],t.camera.viewport[0],t.camera.viewport[1],t.camera.viewport[2],t.camera.viewport[3]),e.bindTexture(null,H.SHADOW_MAP)}clear(){const t=this.rctx;this.bindFbo(),t.setClearColor(1,1,1,1),t.clearSafe(16640)}computeTextureSize(t,s){const e=.5*Math.log(t*t+s*s)*Math.LOG2E,a=.35,i=2**Math.round(e+a);return Math.min(this.maxTextureSize,2*i)}assertDepthTexture(){if(null!=this.depthTexture&&this.depthTexture.descriptor.width===this.textureSize)return;this.discardDepthTexture();const t={target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9728,flipped:!0,width:this.textureSize,height:this.textureSize};this.depthTexture=new F(this.rctx,t),this.fbo=new L(this.rctx,{colorTarget:0,depthStencilTarget:1,width:this.textureSize,height:this.textureSize},this.depthTexture)}assertSnapshot(t){const s=this.snapshots[t];if(null!==s&&s.descriptor.width===this.textureSize)return;this.discardSnapshot(t);const e={target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9728,flipped:!0,width:this.textureSize,height:this.textureSize};this.snapshots[t]=new F(this.rctx,e)}discardDepthTexture(){this.fbo&&(this.fbo.dispose(),this.fbo=null),this.depthTexture&&(this.depthTexture.dispose(),this.depthTexture=null)}discardSnapshot(t){this.snapshots[t]&&(this.snapshots[t].dispose(),this.snapshots[t]=null)}discardAllSnapshots(){for(let t=0;t<this.snapshotCount;++t)this.discardSnapshot(t)}bindFbo(){const t=this.rctx;t.bindFramebuffer(this.fbo),t.bindTexture(null,H.SHADOW_MAP)}constructCascade(t,s,e,a){const o=this.cascades[t],u=-this.cascadeDistances[t],m=-this.cascadeDistances[t+1],p=(s[10]*u+s[14])/Math.abs(s[11]*u+s[15]),d=(s[10]*m+s[14])/Math.abs(s[11]*m+s[15]);A(p<d);for(let i=0;i<8;++i){z(I,i%4==0||i%4==3?-1:1,i%4==0||i%4==1?-1:1,i<4?p:d,1),y(V[i],I,E);for(let t=0;t<3;++t)V[i][t]/=V[i][3]}r(tt,V[0]),n(G,$,tt),o.camera.viewMatrix=G;for(let i=0;i<8;++i)h(V[i],V[i],o.camera.viewMatrix);i(B,V[0]),i(J,V[0]);for(let i=1;i<8;++i)for(let t=0;t<3;++t)B[t]=Math.min(B[t],V[i][t]),J[t]=Math.max(J[t],V[i][t]);B[2]-=200,J[2]+=200,o.camera.near=-J[2],o.camera.far=-B[2],this.warp?this.constructTrapezoidalProjection(e,a,o):this.constructOrthogonalProjection(o),c(o.lightMat,o.camera.projectionMatrix,o.camera.viewMatrix);const l=this.textureSize/2;o.camera.viewport[0]=t%2==0?0:l,o.camera.viewport[1]=0===Math.floor(t/2)?0:l,o.camera.viewport[2]=l,o.camera.viewport[3]=l}constructOrthogonalProjection(t){u(t.camera.projectionMatrix,B[0],J[0],B[1],J[1],t.camera.near,t.camera.far)}constructTrapezoidalProjection(t,e,a){const i=1/V[0][3],r=1/V[4][3];A(i<r);let h=i+Math.sqrt(i*r);const o=Math.sin(s(t[2]*e[0]+t[6]*e[1]+t[10]*e[2]));h/=o,lt(V,h,o,K,Q,X,Y,Z),Mt(K,Q,Y,Z,a.camera.projectionMatrix),a.camera.projectionMatrix[10]=2/(B[2]-J[2]),a.camera.projectionMatrix[14]=-(B[2]+J[2])/(B[2]-J[2])}setupMatrices(t,s){c(q,t.projectionMatrix,t.viewMatrix),m(E,q);const e=1===this.viewingMode?t.eye:o(tt,0,0,1);p($,[0,0,0],[-s[0],-s[1],-s[2]],e)}clampNearFar(t){let{near:s,far:e}=t;return s<2&&(s=2),e<2&&(e=2),s>=e&&(s=2,e=4),{near:s,far:e}}computeCascadeDistances(t,s){this.numCascades=Math.min(1+Math.floor(U(t/s,4)),this.maxNumCascades);const a=(t-s)/this.numCascades,i=(t/s)**(1/this.numCascades);let r=s,h=s;for(let o=0;o<this.numCascades+1;++o)this.cascadeDistances[o]=e(r,h,this.splitSchemeLambda),r*=i,h+=a}getGpuMemoryUsage(){return this.snapshots.reduce(((t,s)=>t+k(s)),k(this.fbo))}get test(){const t=this;return{maxNumCascades:this.maxNumCascades,cascades:this.cascades,textureSize:this.textureSize,set splitSchemeLambda(s){t.splitSchemeLambda=s},get splitSchemeLambda(){return t.splitSchemeLambda},set warp(s){t.warp=s},get warp(){return t.warp}}}}const G=l(),q=l(),E=l(),I=x(),V=[];for(let wt=0;wt<8;++wt)V.push(x());const B=a(),J=a(),K=f(),Q=f(),X=f(),Y=f(),Z=f(),$=l(),tt=a(),st=[],et=l(),at=new Float32Array(64),it=f(),rt=f(),ht=[f(),f(),f(),f()],ot=f(),nt=f(),ct=f(),ut=f(),mt=f(),pt=f(),dt=f();function lt(t,s,e,a,i,r,h,o){g(it,0,0);for(let g=0;g<4;++g)b(it,it,t[g]);S(it,it,.25),g(rt,0,0);for(let g=4;g<8;++g)b(rt,rt,t[g]);S(rt,rt,.25),M(ht[0],t[4],t[5],.5),M(ht[1],t[5],t[6],.5),M(ht[2],t[6],t[7],.5),M(ht[3],t[7],t[4],.5);let n=0,c=w(ht[0],it);for(let g=1;g<4;++g){const t=w(ht[g],it);t<c&&(c=t,n=g)}T(ot,ht[n],t[n+4]);const u=ot[0];let m,p;ot[0]=-ot[1],ot[1]=u,T(nt,rt,it),C(nt,ot)<0&&j(ot,ot),M(ot,ot,nt,e),D(ot,ot),m=p=C(T(ct,t[0],it),ot);for(let g=1;g<8;++g){const s=C(T(ct,t[g],it),ot);s<m?m=s:s>p&&(p=s)}v(a,it),S(ct,ot,m-s),b(a,a,ct);let d=-1,l=1,f=0,x=0;for(let g=0;g<8;++g){T(ut,t[g],a),D(ut,ut);const s=ot[0]*ut[1]-ot[1]*ut[0];s>0?s>d&&(d=s,f=g):s<l&&(l=s,x=g)}O(d>0,"leftArea"),O(l<0,"rightArea"),S(mt,ot,m),b(mt,mt,it),S(pt,ot,p),b(pt,pt,it),dt[0]=-ot[1],dt[1]=ot[0];const z=P(a,t[x],pt,b(ct,pt,dt),1,i),y=P(a,t[f],pt,ct,1,r),A=P(a,t[f],mt,b(ct,mt,dt),1,h),U=P(a,t[x],mt,ct,1,o);O(z,"rayRay"),O(y,"rayRay"),O(A,"rayRay"),O(U,"rayRay")}function ft(t,s){return 3*s+t}const xt=f();function gt(t,s){return g(xt,t[s],t[s+3]),xt}const bt=f(),St=d();function Mt(t,s,e,a,i){T(bt,e,a),S(bt,bt,.5),St[0]=bt[0],St[1]=bt[1],St[2]=0,St[3]=bt[1],St[4]=-bt[0],St[5]=0,St[6]=bt[0]*bt[0]+bt[1]*bt[1],St[7]=bt[0]*bt[1]-bt[1]*bt[0],St[8]=1,St[ft(0,2)]=-C(gt(St,0),t),St[ft(1,2)]=-C(gt(St,1),t);let r=C(gt(St,0),e)+St[ft(0,2)],h=C(gt(St,1),e)+St[ft(1,2)],o=C(gt(St,0),a)+St[ft(0,2)],n=C(gt(St,1),a)+St[ft(1,2)];r=-(r+o)/(h+n),St[ft(0,0)]+=St[ft(1,0)]*r,St[ft(0,1)]+=St[ft(1,1)]*r,St[ft(0,2)]+=St[ft(1,2)]*r,r=1/(C(gt(St,0),e)+St[ft(0,2)]),h=1/(C(gt(St,1),e)+St[ft(1,2)]),St[ft(0,0)]*=r,St[ft(0,1)]*=r,St[ft(0,2)]*=r,St[ft(1,0)]*=h,St[ft(1,1)]*=h,St[ft(1,2)]*=h,St[ft(2,0)]=St[ft(1,0)],St[ft(2,1)]=St[ft(1,1)],St[ft(2,2)]=St[ft(1,2)],St[ft(1,2)]+=1,r=C(gt(St,1),s)+St[ft(1,2)],h=C(gt(St,2),s)+St[ft(2,2)],o=C(gt(St,1),e)+St[ft(1,2)],n=C(gt(St,2),e)+St[ft(2,2)],r=-.5*(r/h+o/n),St[ft(1,0)]+=St[ft(2,0)]*r,St[ft(1,1)]+=St[ft(2,1)]*r,St[ft(1,2)]+=St[ft(2,2)]*r,r=C(gt(St,1),s)+St[ft(1,2)],h=C(gt(St,2),s)+St[ft(2,2)],o=-h/r,St[ft(1,0)]*=o,St[ft(1,1)]*=o,St[ft(1,2)]*=o,i[0]=St[0],i[1]=St[1],i[2]=0,i[3]=St[2],i[4]=St[3],i[5]=St[4],i[6]=0,i[7]=St[5],i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=St[6],i[13]=St[7],i[14]=0,i[15]=St[8]}export default R;
