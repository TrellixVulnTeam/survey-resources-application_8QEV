/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import t from"../../../../core/ObjectPool.js";import n from"../../../../core/PooledArray.js";import{f as i,c as o}from"../../../../chunks/vec3f64.js";import{a as r,b as s,g as h,e as a}from"../../../../chunks/vec3.js";import{sphere as l,ray as d,frustum as c}from"../../support/geometryUtils.js";import{rayBoxTest as u}from"./Util.js";class f{constructor(e,t){this._objectToBoundingSphere=e,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new m,this._objectCount=0,t&&(void 0!==t.maximumObjectsPerNode&&(this._maximumObjectsPerNode=t.maximumObjectsPerNode),void 0!==t.maximumDepth&&(this._maximumDepth=t.maximumDepth))}get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}destroy(){this._degenerateObjects.clear(),m.clearPool(),D[0]=null,w.prune(),C.prune()}add(e,t=e.length){this._objectCount+=t,this._grow(e,t);const n=m.acquire();for(let i=0;i<t;i++){const t=e[i];this._isDegenerate(t)?this._degenerateObjects.add(t):(n.init(this._root),this._add(t,n))}m.release(n)}remove(t,n=null){this._objectCount-=t.length;const i=m.acquire();for(const o of t){const t=e(n)?n:l.copy(this._objectToBoundingSphere(o),k);N(t[3])?(i.init(this._root),this._remove(o,t,i)):this._degenerateObjects.delete(o)}m.release(i),this._shrink()}update(e,t){if(!N(t[3])&&this._isDegenerate(e))return;const n=T(e);this.remove(n,t),this.add(n)}forEachAlongRay(e,t,n){const i=d.wrap(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNode(i,e))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObject(i,e)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObject(i,e)&&n(e)})),!0}))}forEachAlongRayWithVerticalOffset(e,t,n,i){const o=d.wrap(e,t);this._forEachNode(this._root,(e=>{if(!this._intersectsNodeWithOffset(o,e,i))return!1;const t=e.node;return t.terminals.forAll((e=>{this._intersectsObjectWithOffset(o,e,i)&&n(e)})),null!==t.residents&&t.residents.forAll((e=>{this._intersectsObjectWithOffset(o,e,i)&&n(e)})),!0}))}forEach(e){this._forEachNode(this._root,(t=>{const n=t.node;return n.terminals.forAll(e),null!==n.residents&&n.residents.forAll(e),!0})),this._degenerateObjects.forEach(e)}forEachDegenerateObject(e){this._degenerateObjects.forEach(e)}findClosest(e,t,n,i,o){return this._findClosest(e,"front-to-back"===t?1:-1,n,i,o)}forEachInDepthRange(e,t,n,i,o,r,s,h){this._forEachInDepthRange(e,t,"front-to-back"===n?1:-1,i,o,r,s,h)}forEachNode(e){this._forEachNode(this._root,(t=>e(t.node,t.bounds,t.halfSize)))}_intersectsNode(e,t){return b(t.bounds,2*-t.halfSize,A),b(t.bounds,2*t.halfSize,R),u(e.origin,e.direction,A,R)}_intersectsNodeWithOffset(e,t,n){return b(t.bounds,2*-t.halfSize,A),b(t.bounds,2*t.halfSize,R),n.applyToMinMax(A,R),u(e.origin,e.direction,A,R)}_intersectsObject(e,t){const n=this._objectToBoundingSphere(t);return!(n[3]>0)||l.intersectsRay(n,e)}_intersectsObjectWithOffset(e,t,n){const i=this._objectToBoundingSphere(t);return!(i[3]>0)||l.intersectsRay(n.applyToBoundingSphere(i),e)}_forEachNode(e,t){let n=m.acquire().init(e);const i=[n];for(;0!==i.length;){if(n=i.pop(),t(n)&&!n.isLeaf())for(let e=0;e<n.node.children.length;e++){n.node.children[e]&&i.push(m.acquire().init(n).advance(e))}m.release(n)}}_forEachNodeDepthOrdered(e,t,n,i=1){let o=m.acquire().init(e);const r=[o];for(j(n,i,F);0!==r.length;){if(o=r.pop(),t(o)&&!o.isLeaf())for(let e=7;e>=0;--e){const t=F[e];if(t>=o.node.children.length)continue;o.node.children[t]&&r.push(m.acquire().init(o).advance(t))}m.release(o)}}_findClosest(e,t,n,i,o){let h=1/0,a=1/0,d=null;const c=x(e,t);let u=0;const f=o=>{if(++u,i&&!i(o))return;const r=this._objectToBoundingSphere(o);if(n&&g(r,n))return;const s=O(e,t,l.getCenter(r)),c=s-r[3],f=s+r[3];c<h&&(h=c,a=f,d=o)};return this._forEachNodeDepthOrdered(this._root,(i=>{if(null!=o&&u>=o)return!1;if(n&&g(i.bounds,n))return!1;r(v,c,i.halfSize),s(v,v,i.bounds);if(O(e,t,v)>a)return!1;const h=i.node;return h.terminals.forAll((e=>{f(e)})),null!==h.residents&&h.residents.forAll((e=>{f(e)})),!0}),e,t),d}_forEachInDepthRange(e,t,n,i,o,h,a,d){let c=-1/0,u=1/0;const f={setRange:e=>{1===n?(c=Math.max(c,e.near),u=Math.min(u,e.far)):(c=Math.max(c,-e.far),u=Math.min(u,-e.near))}};f.setRange(i);const m=O(t,n,e),_=x(t,n),p=x(t,-1*n);let b=0;const S=e=>{if(++b,a&&!a(e))return;const i=this._objectToBoundingSphere(e),r=l.getCenter(i),s=O(t,n,r)-m,d=s-i[3],_=s+i[3];d>u||_<c||h&&g(i,h)||o(e,f)};this._forEachNodeDepthOrdered(this._root,(e=>{if(null!=d&&b>=d)return!1;if(h&&g(e.bounds,h))return!1;r(v,_,e.halfSize),s(v,v,e.bounds);if(O(t,n,v)-m>u)return!1;r(v,p,e.halfSize),s(v,v,e.bounds);if(O(t,n,v)-m<c)return!1;const i=e.node;return i.terminals.forAll((e=>{S(e)})),null!==i.residents&&i.residents.forAll((e=>{S(e)})),!0}),t,n)}_remove(e,t,n){w.clear();const i=n.advanceTo(t,((e,t)=>{w.push(e.node),w.push(t)}))?n.node.terminals:n.node.residents;if(i.removeUnordered(e),0===i.length)for(let o=w.length-2;o>=0;o-=2){const e=w.data[o],t=w.data[o+1];if(!this._purge(e,t))break}}_nodeIsEmpty(e){if(0!==e.terminals.length)return!1;if(null!==e.residents)return 0===e.residents.length;for(let t=0;t<e.children.length;t++)if(e.children[t])return!1;return!0}_purge(e,t){return t>=0&&(e.children[t]=null),!!this._nodeIsEmpty(e)&&(null===e.residents&&(e.residents=new n({shrink:!0})),!0)}_add(e,t){t.advanceTo(this._objectToBoundingSphere(e))?t.node.terminals.push(e):(t.node.residents.push(e),t.node.residents.length>this._maximumObjectsPerNode&&t.depth<this._maximumDepth&&this._split(t))}_split(e){const t=e.node.residents;e.node.residents=null;for(let n=0;n<t.length;n++){const i=m.acquire().init(e);this._add(t.getItemAt(n),i),m.release(i)}}_grow(e,t){if(0!==t&&(S(e,t,(e=>this._objectToBoundingSphere(e)),I),N(I[3])&&!this._fitsInsideTree(I)))if(this._nodeIsEmpty(this._root.node))l.copy(I,this._root.bounds),this._root.halfSize=1.25*I[3];else{const e=this._rootBoundsForRootAsSubNode(I);this._placingRootViolatesMaxDepth(e)?this._rebuildTree(I,e):this._growRootAsSubNode(e),m.release(e)}}_rebuildTree(e,t){h(q,t.bounds),q[3]=t.halfSize,S([e,q],2,(e=>e),B);const n=m.acquire().init(this._root);this._root.initFrom(null,B,1.25*B[3]),this._forEachNode(n,(e=>(this.add(e.node.terminals.data,e.node.terminals.length),null!==e.node.residents&&this.add(e.node.residents.data,e.node.residents.length),!0))),m.release(n)}_placingRootViolatesMaxDepth(e){const t=Math.log(e.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return this._forEachNode(this._root,(e=>(n=Math.max(n,e.depth),n+t<=this._maximumDepth))),n+t>this._maximumDepth}_rootBoundsForRootAsSubNode(e){const t=e[3],n=e;let i=-1/0;const o=this._root.bounds,r=this._root.halfSize;for(let s=0;s<3;s++){const e=o[s]-r-(n[s]-t),h=n[s]+t-(o[s]+r),a=Math.max(0,Math.ceil(e/(2*r))),l=Math.max(0,Math.ceil(h/(2*r)))+1,d=2**Math.ceil(Math.log(a+l)*Math.LOG2E);i=Math.max(i,d),P[s].min=a,P[s].max=l}for(let s=0;s<3;s++){let e=P[s].min,t=P[s].max;const n=(i-(e+t))/2;e+=Math.ceil(n),t+=Math.floor(n);const h=o[s]-r-e*r*2;y[s]=h+(t+e)*r}return y[3]=i*r*z,m.acquire().initFrom(null,y,i*r,0)}_growRootAsSubNode(e){const t=this._root.node;h(I,this._root.bounds),I[3]=this._root.halfSize,this._root.init(e),e.advanceTo(I,null,!0),e.node.children=t.children,e.node.residents=t.residents,e.node.terminals=t.terminals}_shrink(){for(;;){const e=this._findShrinkIndex();if(-1===e)break;this._root.advance(e),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let e=null;const t=this._root.node.children;let n=0,i=0;for(;i<t.length&&null==e;)n=i++,e=t[n];for(;i<t.length;)if(t[i++])return-1;return n}_isDegenerate(e){return!N(this._objectToBoundingSphere(e)[3])}_fitsInsideTree(e){const t=this._root.bounds,n=this._root.halfSize;return e[3]<=n&&e[0]>=t[0]-n&&e[0]<=t[0]+n&&e[1]>=t[1]-n&&e[1]<=t[1]+n&&e[2]>=t[2]-n&&e[2]<=t[2]+n}}class m{constructor(){this.bounds=l.create(),this.halfSize=0,this.initFrom(null,null,0,0)}init(e){return this.initFrom(e.node,e.bounds,e.halfSize,e.depth)}initFrom(t,n,i,o=this.depth){return this.node=e(t)?t:m.createEmptyNode(),e(n)&&l.copy(n,this.bounds),this.halfSize=i,this.depth=o,this}advance(e){let t=this.node.children[e];t||(t=m.createEmptyNode(),this.node.children[e]=t),this.node=t,this.halfSize/=2,this.depth++;const n=M[e];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.bounds[3]=this.halfSize*z,this}advanceTo(e,t,n=!1){for(;;){if(this.isTerminalFor(e))return t&&t(this,-1),!0;if(this.isLeaf()){if(!n)return t&&t(this,-1),!1;this.node.residents=null}const i=this._childIndex(e);t&&t(this,i),this.advance(i)}}isLeaf(){return null!=this.node.residents}isTerminalFor(e){return e[3]>this.halfSize/2}_childIndex(e){const t=this.bounds;return(t[0]<e[0]?1:0)+(t[1]<e[1]?2:0)+(t[2]<e[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new n({shrink:!0}),residents:new n({shrink:!0})}}static acquire(){return m._pool.acquire()}static release(e){m._pool.release(e)}static clearPool(){m._pool.prune()}}function _(e,t){e[0]=Math.min(e[0],t[0]-t[3]),e[1]=Math.min(e[1],t[1]-t[3]),e[2]=Math.min(e[2],t[2]-t[3])}function p(e,t){e[0]=Math.max(e[0],t[0]+t[3]),e[1]=Math.max(e[1],t[1]+t[3]),e[2]=Math.max(e[2],t[2]+t[3])}function b(e,t,n){n[0]=e[0]+t,n[1]=e[1]+t,n[2]=e[2]+t}function g(e,t){return!c.intersectsSphere(t,e)}function S(e,t,n,i){if(1===t){const t=n(e[0]);l.copy(t,i)}else{A[0]=1/0,A[1]=1/0,A[2]=1/0,R[0]=-1/0,R[1]=-1/0,R[2]=-1/0;for(let i=0;i<t;i++){const t=n(e[i]);N(t[3])&&(_(A,t),p(R,t))}a(i,A,R,.5),i[3]=Math.max(R[0]-A[0],R[1]-A[1],R[2]-A[2])/2}}function j(e,t,n){if(!C.length)for(let i=0;i<8;++i)C.push({index:0,distance:0});for(let i=0;i<8;++i){const n=M[i];C.data[i].index=i,C.data[i].distance=O(e,t,n)}C.sort(((e,t)=>e.distance-t.distance));for(let i=0;i<8;++i)n[i]=C.data[i].index}function x(e,t){let n=1/0,i=null;for(let o=0;o<8;++o){const r=O(e,t,E[o]);r<n&&(n=r,i=E[o])}return i}function O(e,t,n){return t*(e[0]*n[0]+e[1]*n[1]+e[2]*n[2])}function N(e){return!isNaN(e)&&e!==-1/0&&e!==1/0&&e>0}m._pool=new t(m);const M=[i(-1,-1,-1),i(1,-1,-1),i(-1,1,-1),i(1,1,-1),i(-1,-1,1),i(1,-1,1),i(-1,1,1),i(1,1,1)],E=[i(-1,-1,-1),i(-1,-1,1),i(-1,1,-1),i(-1,1,1),i(1,-1,-1),i(1,-1,1),i(1,1,-1),i(1,1,1)],z=Math.sqrt(3),D=[null];function T(e){return D[0]=e,D}const y=l.create(),v=o(),A=o(),R=o(),w=new n,k=l.create(),I=l.create(),q=l.create(),B=l.create(),P=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],C=new n,F=[0,0,0,0,0,0,0,0];export default f;
