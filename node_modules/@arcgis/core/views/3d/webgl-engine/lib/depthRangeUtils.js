/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as t,isNone as e}from"../../../../core/maybe.js";import r from"../../../../core/PooledArray.js";import{i}from"../../../../chunks/vec3.js";import{maxScale as n}from"../../support/mathUtils.js";import{m as s,c as a}from"../../../../chunks/mat4.js";import{a as o}from"../../../../chunks/mat4f64.js";import{a as h}from"../../../../chunks/vec4f64.js";import{l as f}from"../../../../chunks/vec4.js";import{frustum as c,sphere as l}from"../../support/geometryUtils.js";import{unpackFloatRGBA as u,assert as d}from"./Util.js";import{empty as g,union as m,set as p}from"./depthRange.js";const w=1e4,b=100,v=500,B=500,j=.1;function R(t,e,r){return u(e,t)*(r[1]-r[0])+r[0]}function C(t,e,r){if(e.size<w)return T.compute(t,e);const i=g();return r.forAll((e=>{e.isVisible&&m(i,M(t,e))})),i}function M(e,r){if(!r.isVisible)return;const i=g(),n=r.getObjects(),s=r.getSpatialQueryAccelerator();return t(s)?A(i,e,s):y(i,e,n),i}function A(t,e,r){const i=e.eye,n=e.viewForward,s=e.frustum,a=t=>t.isVisible,o=r.objectCount;if(o<v)p(F,e.near,Math.min(t.near,e.far)),r.forEachInDepthRange(i,n,"front-to-back",F,((r,i)=>{I(t,e,r),F.far=t.near,i.setRange(F)}),s,a),p(F,Math.max(t.far,e.near),e.far),r.forEachInDepthRange(i,n,"back-to-front",F,((r,i)=>{I(t,e,r),F.near=t.far,i.setRange(F)}),s,a);else{const i=Math.max(Math.min(o,B),Math.ceil(o*j)),h=r.findClosest(n,"front-to-back",s,a,i),f=r.findClosest(n,"back-to-front",s,a,i);h&&f&&(k(t,e,h.getBounds()),k(t,e,f.getBounds()))}}function y(t,e,r){N.clear(),r.forAll((t=>{t.isVisible&&0!==t.getNumGeometryRecords()&&N.add(t)})),N.empty||(N.sort(e),p(F,e.near,Math.min(t.near,e.far)),N.forEachInDepthRange(F,"front-to-back",((r,i)=>{i<t.near&&I(t,e,r)})),p(F,Math.max(t.far,e.near),e.far),N.forEachInDepthRange(F,"back-to-front",((e,r,i)=>{t.far=Math.max(t.far,i)})))}function I(t,e,r){if(!r.isVisible)return;if(!c.intersectsSphere(e.frustum,r.getBounds()))return;const i=r.transformation,a=V;r.geometryRecords.forEach((r=>{s(a,i,r.getShaderTransformation());const o=n(a);P(t,e,r.geometry.boundingInfo,a,o)}))}function P(t,r,n,s,a){if(e(n))return;const o=r.eye,h=r.viewForward;i(E,n.center,s);const f=h[0]*(E[0]-o[0])+h[1]*(E[1]-o[1])+h[2]*(E[2]-o[2]);if(E[3]=n.radius*a,!(f-E[3]>t.near&&f+E[3]<t.far)&&c.intersectsSphere(r.frustum,E))if(n.radius>b&&n.getChildren()){const e=n.getChildren();for(let i=0;i<8;++i)e[i]&&P(t,r,e[i],s,a)}else U.unionDepthRangeWithAABB(t,r.viewProjectionMatrix,s,n.bbMin,n.bbMax)}function k(t,e,r){const i=e.eye,n=e.viewForward,s=(r[0]-i[0])*n[0]+(r[1]-i[1])*n[1]+(r[2]-i[2])*n[2];t.near=Math.min(t.near,s-r[3]),t.far=Math.max(t.far,s+r[3])}class x{constructor(){this._items=new r({allocator:t=>t||{obj:null,distance:0,near:0,far:0},deallocator:t=>(t.obj=null,t.distance=0,t.near=0,t.far=0,t)})}get length(){return this._items.length}get empty(){return 0===this._items.length}clear(){this._items.clear()}add(t){this._items.pushNew().obj=t}sort(t){const e=t.eye,r=t.viewForward;this._items.forAll((t=>{const i=t.obj.getBounds(),n=(i[0]-e[0])*r[0]+(i[1]-e[1])*r[1]+(i[2]-e[2])*r[2];t.distance=n,t.near=n-i[3],t.far=n+i[3]})),this._items.sort(((t,e)=>t.distance-e.distance))}forEachInDepthRange(t,e,r){if("front-to-back"===e)for(let i=0;i<this._items.length;++i){const e=this._items.data[i];e.far<t.near||e.near>t.far||r(e.obj,e.near,e.far)}else for(let i=this._items.length-1;i>=0;--i){const e=this._items.data[i];e.far<t.near||e.near>t.far||r(e.obj,e.near,e.far)}}}class S{constructor(){this.view=o(),this.viewProj=o(),this.frustum=c.create(),this.geometries=[],this.near=[],this.far=[],this.nearCandidates=[],this.farCandidates=[],this.range={near:0,far:0},this.looseRange={near:0,far:0}}compute(t,e){this.reset(),a(this.view,t.viewMatrix),s(this.viewProj,t.projectionMatrix,this.view),c.copy(t.frustum,this.frustum);const r=this.view,i=r[2],n=r[6],o=r[10],h=r[14],f=this.range;let l=0;if(e.forEach((t=>{if(!t.instanceParameters.visible)return;if(!t.castShadow)return;let e;t.hasShaderTransformation?(t.computeBoundingSphere(t.getShaderTransformation(),1,E),e=E):e=t.boundingSphere;const r=i*e[0]+n*e[1]+o*e[2]+h,s=r-e[3],a=r+e[3];this.geometries[l]=t,this.near[l]=-a,this.far[l]=-s,++l})),0===this.geometries.length)return f;for(let s=0;s<this.geometries.length;++s)this.near[s]>f.far&&(f.far=this.near[s]),this.near[s]>2&&this.far[s]<f.near&&(f.near=this.far[s]);const u=this.looseRange;u.near=Math.max(.5*f.near,2),u.far=2*f.far;let d=0,g=0;for(let s=0;s<this.geometries.length;++s)this.near[s]<f.near&&(this.near[s]>=u.near?f.near=this.near[s]:this.nearCandidates[d++]=s),this.far[s]>f.far&&(this.far[s]<=u.far?f.far=this.far[s]:this.farCandidates[g++]=s);if(0===this.nearCandidates.length&&0===this.farCandidates.length)return f;this.nearCandidates.sort(((t,e)=>this.near[t]<this.near[e]?-1:this.near[t]>this.near[e]?1:0)),this.farCandidates.sort(((t,e)=>this.far[t]<this.far[e]?1:this.far[t]>this.far[e]?-1:0));for(let s=0;s<this.nearCandidates.length;++s){const t=this.nearCandidates[s];if(this.near[t]<f.near){const e=this.geometries[t],r=e.boundingInfo;this.includeNearBoundingInfoRec(r,e.getShaderTransformation())}}for(let s=0;s<this.farCandidates.length;++s){const t=this.farCandidates[s];if(this.far[t]>f.far){const e=this.geometries[t],r=e.boundingInfo;this.includeFarBoundingInfoRec(r,e.getShaderTransformation())}}return f}reset(){this.geometries.length=0,this.near.length=0,this.far.length=0,this.nearCandidates.length=0,this.farCandidates.length=0,this.range.near=Number.MAX_VALUE,this.range.far=-Number.MAX_VALUE}includeNearBoundingInfoRec(t,r){if(e(t))return;const s=t.getCenter();i(E,s,r);const a=n(r),o=E[0],h=E[1],f=E[2],c=t.getBSRadius()*a,l=this.frustum;if(l[0][0]*o+l[0][1]*h+l[0][2]*f+l[0][3]>c||l[1][0]*o+l[1][1]*h+l[1][2]*f+l[1][3]>c||l[2][0]*o+l[2][1]*h+l[2][2]*f+l[2][3]>c||l[3][0]*o+l[3][1]*h+l[3][2]*f+l[3][3]>c)return;const u=this.view[2]*o+this.view[6]*h+this.view[10]*f+this.view[14],d=u+c;if(!(-(u-c)<2||-d>=this.range.near))if(-d>this.looseRange.near)this.range.near=-d;else{if(c>b){const e=t.getChildren();if(void 0!==e){for(let t=0;t<8;++t)void 0!==e[t]&&this.includeNearBoundingInfoRec(e[t],r);return}}U.unionDepthRangeWithAABB(this.range,this.viewProj,r,t.getBBMin(),t.getBBMax())}}includeFarBoundingInfoRec(t,r){if(e(t))return;let s=t.getBSRadius();const a=t.getCenter();i(E,a,r);const o=n(r),h=E[0],f=E[1],c=E[2];s*=o;const l=this.frustum;if(l[0][0]*h+l[0][1]*f+l[0][2]*c+l[0][3]>s||l[1][0]*h+l[1][1]*f+l[1][2]*c+l[1][3]>s||l[2][0]*h+l[2][1]*f+l[2][2]*c+l[2][3]>s||l[3][0]*h+l[3][1]*f+l[3][2]*c+l[3][3]>s)return;const u=this.view[2]*h+this.view[6]*f+this.view[10]*c+this.view[14]-s;if(!(-u<=this.range.far))if(-u<this.looseRange.far)this.range.far=-u;else{if(s>b){const e=t.getChildren();if(void 0!==e){for(let t=0;t<8;++t)void 0!==e[t]&&this.includeFarBoundingInfoRec(e[t],r);return}}U.unionDepthRangeWithAABB(this.range,this.viewProj,r,t.getBBMin(),t.getBBMax())}}}class _{constructor(){this.modelViewProj=o(),this.clipPosition=[h(),h(),h(),h(),h(),h(),h(),h()]}unionDepthRangeWithAABB(t,e,r,i,n){const a=this.modelViewProj;s(a,e,r);let o=!1;for(let s=0;s<8;++s){const t=this.clipPosition[s],e=0===s||3===s||4===s||7===s?i[0]:n[0],r=0===s||1===s||4===s||5===s?i[1]:n[1],o=s<4?i[2]:n[2];t[0]=a[0]*e+a[4]*r+a[8]*o+a[12],t[1]=a[1]*e+a[5]*r+a[9]*o+a[13],t[2]=a[2]*e+a[6]*r+a[10]*o+a[14],t[3]=a[3]*e+a[7]*r+a[11]*o+a[15]}for(let s=0;s<12;++s){const e=this.clipPosition[D[s][0]],r=this.clipPosition[D[s][1]],i=this.clipPosition[D[s][2]],n=this.clipTriangle(e,r,i);let a=!0;for(let t=0;t<n.length;++t){if(n[t][3]>=2){a=!1;break}}if(!a){o=!0;for(let e=0;e<n.length;++e){const r=n[e][3];r<t.near&&(t.near=r),r>t.far&&(t.far=r)}}}return o}inside(t,e){return 0===e?t[0]>=-t[3]:1===e?t[1]>=-t[3]:2===e?t[0]<=t[3]:3===e?t[1]<=t[3]:void d(!1)}intersect(t,e,r){let i=0;return 0===r?i=(-t[3]-t[0])/(e[0]-t[0]+e[3]-t[3]):1===r?i=(-t[3]-t[1])/(e[1]-t[1]+e[3]-t[3]):2===r?i=(t[3]-t[0])/(e[0]-t[0]-e[3]+t[3]):3===r&&(i=(t[3]-t[1])/(e[1]-t[1]-e[3]+t[3])),f(h(),t,e,i)}clipTriangle(t,e,r){let i=[t,e,r];for(let n=0;n<4;++n){const t=i;i=[];for(let e=0;e<t.length;++e){const r=t[e],s=t[(e+1)%t.length];this.inside(s,n)?(this.inside(r,n)||i.push(this.intersect(r,s,n)),i.push(s)):this.inside(r,n)&&i.push(this.intersect(r,s,n))}}return i}}const D=[[0,1,3],[2,3,1],[1,5,2],[6,2,5],[5,4,6],[7,6,4],[4,0,7],[3,7,0],[3,2,7],[6,7,2],[4,5,0],[1,0,5]],E=l.create(),V=o(),F=g(),N=new x,T=new S,U=new _;export{S as DepthRangeFromRenderGeometries,M as depthRangeFromLayer,C as depthRangeFromScene,R as texure2depth};
