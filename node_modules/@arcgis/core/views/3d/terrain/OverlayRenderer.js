/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{disposeMaybe as r,isSome as t,isNone as i,unwrap as s}from"../../../core/maybe.js";import n from"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import h from"../../../core/PooledArray.js";import l from"../../../core/Accessor.js";import{generateUID as d}from"../../../core/uid.js";import{f as u,c as p}from"../../../chunks/vec3f64.js";import c from"../../../core/Handles.js";import{init as g}from"../../../core/watchUtils.js";import{o as m,i as y,t as _}from"../../../chunks/mat4.js";import{Task as f}from"../../support/Scheduler.js";import{someMap as R}from"../../../core/MapUtils.js";import{a as w}from"../../../chunks/vec2f64.js";import b from"../../webgl/Texture.js";import{vertexCount as x}from"../../webgl/Util.js";import{createEmptyDepthTexture as T,createQuadVAO as v}from"../webgl-engine/lib/glUtil3D.js";import{AmbientLight as C}from"../webgl-engine/lighting/Lightsources.js";import{IntersectorResult as O}from"../webgl-engine/lib/intersectorUtils.js";import j from"../webgl-engine/lib/Camera.js";import L from"../support/debugFlags.js";import{AutoDisposableMixin as V,autoDispose as G}from"../webgl-engine/lib/AutoDisposable.js";import{OverlayRenderTarget as S}from"./OverlayRenderTarget.js";import{Overlay as U}from"./Overlay.js";import{CommonUniformStore as E}from"../webgl-engine/core/shaderTechnique/CommonUniformStore.js";import{ShaderTechniqueRepository as A}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueRepository.js";import P from"../webgl-engine/lib/GLMaterialRep.js";import M from"../webgl-engine/lib/GridLocalOriginFactory.js";import D from"../webgl-engine/lib/RenderContext.js";import{SortedRenderGeometryRenderer as H}from"../webgl-engine/lib/SortedRenderGeometryRenderer.js";import{TextureTechniqueConfiguration as W,TextureTechnique as q}from"../webgl-engine/lib/TextureTechnique.js";import{SceneLighting as F}from"../webgl-engine/lighting/SceneLighting.js";import{StippleTextureRepository as k}from"../webgl-engine/materials/lineStippleUtils.js";const z=n.getLogger("esri.views.3d.webgl-engine.lib.OverlayRenderer");let B=class extends(V(l)){constructor(e){super(e),this._overlays=null,this._hasHighlights=!1,this._rendersOccluded=!1,this._hasWater=!1,this._lighting=new F,this._localOrigins=new M,this._handles=new c,this._layerRenderers=new Map,this._sortedLayerRenderersDirty=!1,this._sortedLayerRenderers=new h,this._geometries=new Map,this.globalUnitScale=1,this.longitudeCyclical=null}initialize(){this._rctx=this.renderView.renderingContext,this._renderContext=new D(this._rctx,null,null,null,null,null),this._stippleTextureRepository=new k,this.waterTextureRepository=this.renderView.waterTextureRepository,this._shaderTechniqueRepository=new A({rctx:this._rctx,viewingMode:2,commonUniformStore:new E,stippleTextureRepository:this._stippleTextureRepository,waterTextureRepository:this.waterTextureRepository}),g(this.waterTextureRepository,"loadingState",(()=>this.emitContentChanged())),this._materialRepository=new P(this.renderView.textureRepository,this._shaderTechniqueRepository),this._materialRepository.onMaterialChanged=e=>{(e.renderOccluded&K)>0!==this._rendersOccluded&&this.updateRendersOccluded(),this.emitContentChanged(),this.notifyChange("updating")},this._compositingHelper=this.renderView.compositingHelper,this._lighting.set({lights:[new C(u(1,1,1))],groundLightingFactor:1,globalFactor:0}),this._bindParameters={slot:null,highlightDepthTexture:T(this._rctx),camera:X,inverseViewport:w(),origin:null,screenToWorldRatio:null,screenToWorldRatioGlobalWM:null,shadowMappingEnabled:!1,slicePlane:null,ssaoEnabled:!1,hasOccludees:!1,linearDepthTexture:null,linearDepthTextureUnit:0,lastFrameColorTexture:null,lastFrameColorTextureUnit:0,reprojectionMat:null,ssrEnabled:!1,lighting:this._lighting,transparencyPassType:3,terrainLinearDepthTexture:null,geometryLinearDepthTexture:null,multipassTerrainEnabled:!1,cullAboveGround:!0,multipassGeometryEnabled:!1},this._handles.add(this.scheduler.registerTask(f.STAGE,(()=>this.commitChanges()),(()=>this.updating)))}dispose(){this._handles.destroy(),this._layerRenderers.forEach((e=>e.dispose())),this._layerRenderers.clear(),this._bindParameters.highlightDepthTexture=r(this._bindParameters.highlightDepthTexture),this._shaderTechniqueRepository=r(this._shaderTechniqueRepository),this._temporaryRenderTarget=r(this._temporaryRenderTarget),this._debugPatternTexture=r(this._debugPatternTexture),this._quadVAO=r(this._quadVAO)}get updating(){return this._sortedLayerRenderersDirty||R(this._layerRenderers,(e=>e.updating))||this.waterTextureRepository.updating}get hasOverlays(){return t(this._overlays)}get gpuMemoryUsage(){return t(this._overlays)?this._overlays[0].getGpuMemoryUsage()+this._overlays[1].getGpuMemoryUsage():0}get overlays(){return this._overlays}forEachOverlay(e){t(this._overlays)&&(e(this._overlays[0],0),e(this._overlays[1],1))}ensureOverlays(){if(i(this._overlays)){const e=this.renderView.renderingContext;this._overlays=[new U(e),new U(e)]}}disposeOverlays(){t(this._overlays)&&(this._overlays.forEach((e=>e.dispose())),this._overlays=null)}commitChanges(){let e=!1;this._layerRenderers.forEach(((r,t)=>{r.commitChanges()&&(e=!0),r.isEmpty&&(this._layerRenderers.delete(t),this._sortedLayerRenderersDirty=!0,this._handles.remove(t))})),this._sortedLayerRenderersDirty&&(this.updateSortedLayerRenderers(),e=!0),e&&(this.notifyChange("updating"),this.emitContentChanged(),this.updateHasHighlights(),this.updateRendersOccluded(),this.updateHasWater())}addGeometries(e,r,t){for(const s of e)null==s.origin&&(s.origin=this._localOrigins.getOrigin(s.boundingSphere)),i(s.id)&&(s.id=d()),this._geometries.set(s.id,s);this.ensureLayerRenderer(r).add(e),2===t&&this.notifyGraphicGeometryChanged(e,r)}removeGeometries(e,r,t){for(const n of e)this._geometries.delete(s(n.id));const i=this._layerRenderers.get(r);i&&(i.remove(e),2===t&&this.notifyGraphicGeometryChanged(e,r))}updateGeometries(e,r,t){const i=this._layerRenderers.get(r);if(i)switch(i.modify(e,t),t){case 4:case 2:return this.notifyGraphicGeometryChanged(e,r);case 1:return this.notifyGraphicVisibilityChanged(e,r)}else z.warn("Attempted to update geometry for nonexistent layer")}notifyGraphicGeometryChanged(e,r){if(i(r.notifyGraphicGeometryChanged))return;let t;for(const i of e){const e=i.graphicUid;e!==t&&(r.notifyGraphicGeometryChanged(e),t=e)}}notifyGraphicVisibilityChanged(e,r){if(i(r.notifyGraphicVisibilityChanged))return;let t;for(const i of e){const e=i.graphicUid;e!==t&&(r.notifyGraphicVisibilityChanged(e),t=e)}}updateHighlights(e,r){const t=this._layerRenderers.get(r);t?t.modify(e,8):z.warn("Attempted to update highlights for nonexistent layer")}isEmpty(){return 0===this._geometries.size&&!L.OVERLAY_DRAW_DEBUG_TEXTURE}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return this._rendersOccluded}updateLogic(e){let r=!1;return this._layerRenderers.forEach((t=>{t.updateLogic(e)&&(r=!0)})),r}updateLayerOrder(){this._sortedLayerRenderersDirty=!0}drawPass(e,r,i,n=0){if(0===i.numViews)return!1;if(this._screenToWorldRatio=i.pixelRatio*Math.abs(i.views[0].extent[2]-i.views[0].extent[0])/Math.abs(i.views[0].viewport[2]-i.views[0].viewport[0]),this.isEmpty()||5===e&&!this.hasHighlights||3===e&&!this.hasWater)return!1;if(!this.hasNonZeroSizedView(i))return!1;const o=i.width,a=i.height;if(!r.isValid())return!1;r.resize(o,a);const h=this._rctx;if(X.pixelRatio=i.pixelRatio||1,this._renderContext.pass=e,this._bindParameters.screenToWorldRatio=this._screenToWorldRatio,this._bindParameters.screenToWorldRatioGlobalWM=this._screenToWorldRatio*this.globalUnitScale,r.bind(h),h.setClearColor(0,0,0,0),h.clearSafe(16384),1===n&&(this._renderContext.renderOccludedMask=K),L.OVERLAY_DRAW_DEBUG_TEXTURE&&1!==n)for(let t=0;t<i.numViews;t++)this.setViewParameters(i.views[t],X),this.drawDebugTexture(o,a,N[i.index%N.length]);return this._layerRenderers.size>0&&this._sortedLayerRenderers.forAll((({layerView:l,renderer:d})=>{if(2===n&&t(l)&&0===l.drapeSourceType)return;const u=t(l)&&t(l.fullOpacity)&&l.fullOpacity<1&&0===e;u&&(this.bindTemporaryFramebuffer(this._rctx,o,a),h.clearSafe(16384));for(let e=0;e<i.numViews;e++)this.setViewParameters(i.views[e],X),d.draw(this._renderContext,this._bindParameters);u&&t(this._temporaryRenderTarget)&&(r.bind(h),this._compositingHelper.composite(this._temporaryRenderTarget.getTexture(),2,s(s(l).fullOpacity)))})),h.bindFramebuffer(null),r.generateMipMap(),this._renderContext.resetRenderOccludedMask(),!0}bindTemporaryFramebuffer(e,r,t){i(this._temporaryRenderTarget)&&(this._temporaryRenderTarget=new S(e,!1)),this._temporaryRenderTarget.resize(r,t),this._temporaryRenderTarget.bind(e)}async reloadShaders(){await this._shaderTechniqueRepository.hotReload()}intersect(e,r,t){let i=0;this._geometries.forEach((s=>{if(t&&!t(s))return;this.intersectRenderGeometry(s,r,0,e,i);const n=this.longitudeCyclical;n&&(s.boundingSphere[0]-s.boundingSphere[3]<n.min&&this.intersectRenderGeometry(s,r,n.range,e,i),s.boundingSphere[0]+s.boundingSphere[3]>n.max&&this.intersectRenderGeometry(s,r,-n.range,e,i)),i++}))}intersectRenderGeometry(e,r,i,s,n){if(!e.instanceParameters.visible)return;let o=0;t(e.transformation)&&(i+=e.transformation[12],o=e.transformation[13]),Y[0]=r[0]-i,Y[1]=r[1]-o,Y[2]=1,Z[0]=r[0]-i,Z[1]=r[1]-o,Z[2]=0,e.screenToWorldRatio=this._screenToWorldRatio,e.material.intersect(e,null,e.getShaderTransformation(),s,Y,Z,((r,t,i)=>{this.addIntersectionResult(i,e.material.renderPriority,n,s,e.layerUid,e.graphicUid)}),e.calculateShaderTransformation,!0)}addIntersectionResult(e,r,t,i,s,n){const o={type:"external",metadata:{layerUid:s,graphicUid:n}},a=s=>{s.set(o,null,i.results.ground.dist,i.results.ground.normal,i.results.ground.transformation,r,null,null,e,t),s.intersector="OverlayRenderer"};if((null==i.results.min.drapedLayerOrder||r>=i.results.min.drapedLayerOrder)&&(null==i.results.min.dist||i.results.ground.dist<=i.results.min.dist)&&a(i.results.min),0!==i.options.store&&(null==i.results.max.drapedLayerOrder||r<i.results.max.drapedLayerOrder)&&(null==i.results.max.dist||i.results.ground.dist>i.results.max.dist)&&a(i.results.max),2===i.options.store){const e=new O(i.ray);a(e),i.results.all.push(e)}}stopAnimationsAtTime(e){this._sortedLayerRenderers.forAll((r=>r.renderer.stopAnimationsAtTime(e)))}ensureLayerRenderer(e){let r=this._layerRenderers.get(e);return r||(r=new H({rctx:this._rctx,materialRepository:this._materialRepository}),this._layerRenderers.set(e,r),this._sortedLayerRenderersDirty=!0,"fullOpacity"in e&&this._handles.add(e.watch("fullOpacity",(()=>this.emitContentChanged())),e),this._handles.add(g(r,"updating",(()=>this.notifyChange("updating"))),e)),r}updateSortedLayerRenderers(){if(!this._sortedLayerRenderersDirty)return;if(this._sortedLayerRenderersDirty=!1,this._sortedLayerRenderers.clear(),0===this._layerRenderers.size)return;const[{view:{allLayerViews:e}}]=this._layerRenderers.keys(),r=new Set(this._layerRenderers.values());e.forEach((e=>{const t=e,i=this._layerRenderers.get(t);i&&(this._sortedLayerRenderers.push(new I(t,i)),r.delete(i))})),r.forEach((e=>{this._sortedLayerRenderers.push(new I(null,e))}))}setViewParameters(e,r){r.viewport=e.viewport;const t=e.extent;m(r.projectionMatrix,0,t[2]-t[0],0,t[3]-t[1],r.near,r.far),y(r.viewMatrix),_(r.viewMatrix,r.viewMatrix,[-e.extent[0],-e.extent[1],0]),r.setGLViewport(this._rctx),this._renderContext.camera=r,this._bindParameters.camera=r,this._bindParameters.inverseViewport[0]=1/r.fullViewport[2],this._bindParameters.inverseViewport[1]=1/r.fullViewport[3]}hasNonZeroSizedView(e){for(let r=0;r<e.numViews;r++){const t=e.views[r];if(t.extent[0]!==t.extent[2]&&t.extent[1]!==t.extent[3])return!0}return!1}emitContentChanged(){this.onContentChanged&&this.onContentChanged()}updateHasWater(){const e=R(this._layerRenderers,(e=>e.hasWater));e!==this._hasWater&&(this._hasWater=e)}updateHasHighlights(){const e=R(this._layerRenderers,(e=>e.hasHighlights));e!==this._hasHighlights&&(this._hasHighlights=e,this.onHasHighlightsChanged&&this.onHasHighlightsChanged(this._hasHighlights))}updateRendersOccluded(){const e=R(this._layerRenderers,(e=>e.rendersOccluded));e!==this._rendersOccluded&&(this._rendersOccluded=e,this.onRendersOccludedChanged&&this.onRendersOccludedChanged(this.rendersOccluded))}drawDebugTexture(e,r,t){const i=this._rctx;this.ensureDebugPatternResources(e,r);const s=this._debugTextureTechnique.program;i.bindProgram(s),i.setPipelineState(this._debugTextureTechnique.pipeline),s.setUniform4f("color",t[0],t[1],t[2],1),s.setUniform1i("tex",0),i.bindTexture(this._debugPatternTexture,0),i.bindVAO(this._quadVAO),i.drawArrays(5,0,x(this._quadVAO,"geometry"))}ensureDebugPatternResources(e,r){if(this._debugPatternTexture)return;const t=new Uint8Array(e*r*4);let i=0;for(let n=0;n<r;n++)for(let s=0;s<e;s++){const o=Math.floor(s/10),a=Math.floor(n/10);o<2||a<2||10*o>e-20||10*a>r-20?(t[i++]=255,t[i++]=255,t[i++]=255,t[i++]=255):(t[i++]=255,t[i++]=255,t[i++]=255,t[i++]=1&o&&1&a?1&s^1&n?0:255:1&o^1&a?0:128)}this._debugPatternTexture=new b(this._rctx,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,width:e,height:r},t);const s=new W;s.hasAlpha=!0,this._debugTextureTechnique=this._shaderTechniqueRepository.acquireAndReleaseExisting(q,s,this._debugTextureTechnique),this._quadVAO=v(this._rctx)}get test(){return{layerRenderers:this._layerRenderers}}};e([G()],B.prototype,"_shaderTechniqueRepository",void 0),e([G()],B.prototype,"_stippleTextureRepository",void 0),e([o(),G()],B.prototype,"waterTextureRepository",void 0),e([o({constructOnly:!0})],B.prototype,"renderView",void 0),e([o({constructOnly:!0})],B.prototype,"scheduler",void 0),e([o()],B.prototype,"globalUnitScale",void 0),e([o({type:Boolean,readOnly:!0})],B.prototype,"updating",null),B=e([a("esri.views.3d.terrain.OverlayRenderer")],B);class I{constructor(e,r){this.layerView=e,this.renderer=r}}const N=[[1,.5,.5],[.5,.5,1],[.5,1,.5]],X=new j;X.near=1,X.far=1e4,X.relativeElevation=null;const Y=p(),Z=p(),J=-2,K=4;export{J as DRAPED_Z,B as OverlayRenderer,K as overlayRenderOccludedFlag};
