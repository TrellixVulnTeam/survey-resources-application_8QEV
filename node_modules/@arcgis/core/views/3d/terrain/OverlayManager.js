/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/has.js";import{isSome as r,isNone as s}from"../../../core/maybe.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import{addFrameTask as n}from"../../../core/scheduling.js";import o from"../../../core/Accessor.js";import{y2lat as l}from"../../../geometry/support/webMercatorUtils.js";import{nextHighestPowerOfTwo as h,clamp as d,deg2rad as c}from"../../../core/mathUtils.js";import{c as u}from"../../../chunks/vec3f64.js";import{b as p,f as y,v as _,g,k as m}from"../../../chunks/vec3.js";import{Cyclical as v,cyclicalPI as f}from"../support/mathUtils.js";import w from"../../../core/Handles.js";import{Milliseconds as T}from"../../../layers/support/timeUtils.js";import{getReferenceEllipsoid as O}from"../../../geometry/projectionEllipsoid.js";import{getMetersPerUnitForSR as S}from"../../../core/unitUtils.js";import{width as D,set as x,center as R,intersection as C,contains as M,offset as j,intersects as I,create as U}from"../../../geometry/support/aaBoundingRect.js";import{projectVectorToVector as b}from"../../../geometry/projection.js";import{Task as E}from"../../support/Scheduler.js";import{a as V,b as A}from"../../../chunks/vec4f64.js";import{d as P}from"../../../chunks/vec2.js";import{t as L,b as H,a as G,s as F}from"../../../chunks/vec4.js";import{sphere as q,ray as B,vector as W}from"../support/geometryUtils.js";import{Intersector as k}from"../webgl-engine/lib/Intersector.js";import{viewAngle as z}from"../state/utils/viewUtils.js";import Y from"../support/debugFlags.js";import{fromValues as N}from"../webgl-engine/lib/localOrigin.js";import{OverlayRenderer as X}from"./OverlayRenderer.js";import{GraphicsHandle as J}from"../support/debugUtils.js";import{DESIRED_DRAPED_ANIMATION_MS as K}from"../support/animationUtils.js";import{removeLoadedShaderModules as Q}from"../webgl-engine/parts/requireUtils.js";const Z=3.5,$=10,ee=[[-.1,-2,3.9,2],[-.1,-3.9,3.9,.1],[-2,-3.9,2,.1],[-3.9,-3.9,.1,.1],[-3.9,-2,.1,2],[-3.9,-.1,.1,3.9],[-2,-.1,2,3.9],[-.1,-.1,3.9,3.9]];let te,re=class extends o{constructor(e){super(e),this._handles=new w,this._overlaySR=null,this._renderSR=null,this._overlaySREqualsRenderSR=!0,this._drapeSources=new Map,this._drapeTargets=new Set,this._drapeSourceTypes=[0,0],this._drapeTargetTypes=[0,0],this._renderedAltitude=0,this._placementDirty=!1,this._drawTexturesDirty=!1,this._drawTexturesAnimateDirty=!1,this._layerViewsDirty=!0,this._hasUnusedRenderTargets=!1,this._isSpherical=!1,this._longitudeCyclical=null,this._latestOriginId=0,this._maxResolution=t("esri-mobile")?2048:4096,this._animationTimeLast=0}get _needsUpdate(){return(this._placementDirty||this._layerViewsDirty)&&(this._drapeSources.size>0||this.view.graphics.length>0||Y.OVERLAY_DRAW_DEBUG_TEXTURE)&&!!this._overlaySR&&!this.suspended&&this.surface.ready}get view(){return this.surface.view}get updating(){return this._needsUpdate||this.renderer.updating}get hasHighlights(){return this.renderer.hasHighlights}get rendersOccluded(){return this.renderer.rendersOccluded}initialize(){const e=this.view._stage.renderView,t=this.view.state.isGlobal&&r(this._overlaySR)?S(this._overlaySR):1,s=this.view.resourceController.scheduler;this.renderer=new X({renderView:e,globalUnitScale:t,scheduler:s}),this._drapeTargetTypes[0]++,this.renderer.onHasHighlightsChanged=()=>{this._setDrawTexturesDirty(),this.notifyChange("hasHighlights")},this.renderer.onRendersOccludedChanged=()=>{this._setDrawTexturesDirty(),this.notifyChange("rendersOccluded")},this.renderer.onContentChanged=()=>{this._setDrawTexturesDirty()},this.groundIntersector=new k(this.view.state.mode),this.groundIntersector.options.backfacesTerrain=!0,this.groundIntersector.options.invisibleTerrain=!0,this.groundIntersector.options.hud=!1,this._handles.add([this.view.watch(["pointsOfInterest.renderPointOfView","pointsOfInterest.centerOnSurfaceFrequent.location","pixelRatio"],(()=>this.setOverlayPlacementDirty())),this.surface.on("elevation-change",(()=>this.setOverlayPlacementDirty())),this.view.allLayerViews.on("after-changes",(()=>this._layerViewsDirty=!0)),this.view.on("resize",(()=>this.setOverlayPlacementDirty())),n({preRender:e=>{this.renderer.commitChanges(),this._updateLayerViews(),this.renderer.hasOverlays&&(this._dispatchRendererUpdate(e),this._drawOverlayTextures(this.renderer.overlays)),this._hasUnusedRenderTargets&&this._collectUnusedRenderTargetMemory()}}),s.registerTask(E.OVERLAY_MANAGER,(()=>this._updateOverlays()),(()=>this._needsUpdate)),this.view._stage.renderView.events.on("force-camera-for-screenshot",(e=>{this._updateOverlays(e),this.renderer.hasOverlays&&this._drawOverlayTextures(this.renderer.overlays)}))]),this._updateLayerViews()}destroy(){this._drapeSources.forEach(((e,t)=>this.unregisterDrapeSource(t))),this._drapeTargets.forEach((e=>this._unregisterDrapeTarget(e))),this._drapeTargetTypes[0]--,this._disposeOverlays(),this.renderer.dispose(),this._handles&&(this._handles.destroy(),this._handles=null),r(te)&&(te.remove(),te=null)}get hasOverlays(){return this.renderer.hasOverlays}setSpatialReference(e,t){this._overlaySR=e,this._longitudeCyclical=null;const s=this.view.renderSpatialReference;r(e)&&r(s)?(this._renderSR=s,this._overlaySREqualsRenderSR=e.equals(this._renderSR),this._isSpherical=t,t&&(this._longitudeCyclical=e.isWebMercator?new v(-20037508.342787,20037508.342787):new v(-180,180),this.renderer.longitudeCyclical=this._longitudeCyclical),this.renderer&&(this.renderer.globalUnitScale=t&&r(this._overlaySR)?S(this._overlaySR):1)):this._disposeOverlays()}getGpuMemoryUsage(){return this.renderer.gpuMemoryUsage}_updateLayerViews(){if(!this._layerViewsDirty)return;const e=new Set;for(const t of this.view.allLayerViews.items)e.add(t.uid),"drapeSourceType"in t&&!this._drapeSources.has(t)&&this._registerDrapeSource(t,0),"drapeTargetType"in t&&!this._drapeTargets.has(t)&&this._registerDrapeTarget(t);this._drapeSources.forEach(((t,r)=>{0!==t||e.has(r.uid)||this.unregisterDrapeSource(r)})),this._drapeTargets.forEach((t=>{e.has(t.uid)||this._unregisterDrapeTarget(t)})),this.renderer.updateLayerOrder(),this._setDrawTexturesDirty(),this._layerViewsDirty=!1}registerDrapeSource(e){this._registerDrapeSource(e,1)}_registerDrapeSource(e,t){this._drapeSourceTypes[e.drapeSourceType]++,this._drapeSources.set(e,t),this.renderer.forEachOverlay(((t,r)=>this._updateDrapeSource(e,r,t))),this._setOverlayContentDirty(),this.notifyChange("_needsUpdate")}_updateDrapeSource(e,t,s){r(e.setDrapingExtent)&&r(this._overlaySR)&&e.setDrapingExtent(t,s.extent,this._overlaySR,s.resolution,s.renderLocalOrigin,s.pixelRatio)}unregisterDrapeSource(e){this._drapeSources.has(e)&&(this._drapeSourceTypes[e.drapeSourceType]--,this._drapeSources.delete(e),this._setOverlayContentDirty(),this.notifyChange("_needsUpdate"))}_registerDrapeTarget(e){this._drapeTargets.add(e),this._updateDrapeTarget(e),this._drapeTargetTypes[e.drapeTargetType]++}_updateDrapeTarget(e){this.renderer.forEachOverlay(((t,r)=>{const s=t.renderTargets,i=this.needsColorWithoutRasterImage()?s.colorWithoutRasterImage:this.hasDrapedFeatures()?s.color:null,a=s.highlight,n=s.water;e.setDrapingTextures(r,t.extent,i&&i.valid?i.fbo.getTexture():null,a.valid?a.fbo.getTexture():null,n.valid?n.fbo.getTexture():null)}))}_unregisterDrapeTarget(e){this._drapeTargets.delete(e),this._drapeTargetTypes[e.drapeTargetType]--}_setOverlayContentDirty(){this.setOverlayPlacementDirty(),this._setDrawTexturesDirty()}setOverlayPlacementDirty(){this._placementDirty=!0}_updateOverlays(e=this.view.state.camera){if(!this._overlaySR)return;this._updateLayerViews();const t=se(e.fullWidth,e.fullHeight),r=Math.min(t,this._maxResolution);this._computeOverlayExtents(e,t,le);const s=D(le.inner)/D(le.outer);this.renderer.ensureOverlays();const i=this._updateOverlay(0,le.inner,r,1),a=this._updateOverlay(1,le.outer,r,s);(i||a)&&(this.surface.updateTileOverlayParams(),this._setDrawTexturesDirty()),this._placementDirty=!1,this.surface.updateOverlayOpacity()}_updateOverlay(e,t,r,i){if(s(this.renderer.overlays))return!1;const a=this.renderer.overlays[e];if(!ie(t,a.extent)&&r===a.resolution&&a.pixelRatio===i)return!1;x(a.extent,t),a.resolution=r,a.pixelRatio=i;const n=R(a.extent);return a.renderLocalOrigin=N(n[0],n[1],0,"OV_"+this._latestOriginId++),this._drapeSources.forEach(((t,r)=>this._updateDrapeSource(r,e,a))),!0}computeOpacity(e){if(!this.renderer.hasOverlays)return 1;if(e*Z<this._renderedAltitude){const t=(e-this._renderedAltitude/$)/(this._renderedAltitude/Z-this._renderedAltitude/$);return Math.sqrt(d(t,0,1))}return 1}setTileParameters(e){const t=e.renderData.overlay;if(r(this.renderer.overlays)){const r=this.renderer.overlays[0],s=this.renderer.overlays[1],i=C(e.extent,e.surface.extent,he);this._rectInsideRect(i,r.extent)?(this._setTileOverlayData(i,0,t),this._clearTileOverlayData(1,t)):this._rectanglesOverlap(i,r.extent)?(this._setTileOverlayData(i,0,t),this._setTileOverlayData(i,1,t)):this._rectanglesOverlap(i,s.extent)?(this._clearTileOverlayData(0,t),this._setTileOverlayData(i,1,t)):(this._clearTileOverlayData(0,t),this._clearTileOverlayData(1,t))}else this._clearTileOverlayData(0,t),this._clearTileOverlayData(1,t)}overlayPixelSizeInMapUnits(e){if(s(this.renderer.overlays))return 0;const t=this.renderer.overlays[0],r=this.renderer.overlays[1],i=this._pointIsInExtent(e,t.extent)?t:r;return(i.extent[2]-i.extent[0])/i.resolution}_setTileOverlayData(e,t,r){if(s(this.renderer.overlays))return;const i=this.renderer.overlays[t].extent;r.setScale(t,(e[2]-e[0])/(i[2]-i[0]),(e[3]-e[1])/(i[3]-i[1]));let a=e[0];if(this._longitudeCyclical){a=this._longitudeCyclical.minimalMonotonic(i[0],a);const t=this._longitudeCyclical.minimalMonotonic(i[0],e[2]);a>t&&(a=t-(e[2]-e[0]))}r.setOffset(t,(a-i[0])/(i[2]-i[0]),(e[1]-i[1])/(i[3]-i[1]))}_clearTileOverlayData(e,t){t.setScale(e,-1,-1),t.setOffset(e,-1,-1)}_disposeOverlays(){this.renderer.disposeOverlays()}async reloadShaders(){Q(),await this.renderer.reloadShaders(),this._updateOverlays()}stopAnimationsAtTime(e){this.renderer.stopAnimationsAtTime(e),this._drawTexturesAnimateDirty=!0}_dispatchRendererUpdate(e){const t=T(e.time-this._animationTimeLast);if(t<K)return;this._animationTimeLast=e.time;this.renderer.updateLogic({dt:t,camera:this.view._stage.camera})&&(this._drawTexturesAnimateDirty=!0)}_setDrawTexturesDirty(){this.renderer.hasOverlays?this._drawTexturesDirty=!0:this.setOverlayPlacementDirty()}_intersectGroundFromView(e,t,r,i){const a=this.view.sceneIntersectionHelper.getCenterRayWithSubpixelOffset(e,ce,t,r);if(s(a))return!1;const n=a.origin,o=p(oe,a.origin,a.direction);return this.groundIntersector.reset(n,o),this.groundIntersector.intersect([],null,e),this.view.basemapTerrain.intersect(this.groundIntersector,null,n,o),this.groundIntersector.results.min.getIntersectionPoint(i)}_findHorizonBasedPointOfInterest(e,t){let r=.5;const s=.55,i=this.view.renderCoordsHelper.getAltitude(e.eye),a=this.view.pointsOfInterest.centerOnSurfaceFrequent,n=1e-5,o=d(a.estimatedSurfaceAltitude,e.aboveGround?-1/0:i+n,e.aboveGround?i-n:1/0),l=e.aboveGround;if("global"===this.view.viewingMode){const t=oe;q.closestPointOnSilhouette(q.fromRadius(O(this.view.spatialReference).radius+o),B.wrap(e.eye,e.viewForward),t),y(t,t,e.eye);const i=f.normalize(W.angleAroundAxis(e.viewForward,t,e.viewRight))/e.fovY+.5,a=i<=0||i>=1?.5:s;r=l?a*i:i+a*(1-i)}else{const t=.5*Math.PI-Math.acos(-e.viewForward[2]),i=Math.tan(t),a=A(0,i,1,0),n=L(a,a,e.projectionMatrix)[1],o=d(.5+.5*n,0,1);r=1===o||0===o?.5:l?o*s:1-(1-o)*s}return!!this._intersectGroundFromView(e,.5,r,t)&&_(t,e.eye)<a.distance*a.distance}_computeOverlayExtents(e,t,i){const a=this.surface.extent,n=this.view.pointsOfInterest.centerOnSurfaceFrequent.renderLocation,o=u();this._findHorizonBasedPointOfInterest(e,o)||g(o,n),this._renderedAltitude=this.view.renderCoordsHelper.getAltitude(e.eye);const h=m(e.eye,o),d=z(this.view.renderCoordsHelper,n,e.eye),p=Math.PI/2-Math.abs(d-Math.PI/2);Y.OVERLAY_SHOW_CENTER?(s(te)&&(te=new J(this.view.graphics,"red")),te.showPoint(o,this._renderSR)):r(te)&&te.remove(),this._overlaySREqualsRenderSR||b(o,this._renderSR,o,this._overlaySR);let y=t*e.perRenderPixelRatio*h/2,_=!1,v=1/0;this._isSpherical&&r(this._overlaySR)&&(this._overlaySR.isWebMercator?(y/=Math.cos(l(o[1])),v=this.surface.extent[3]):(_=!0,y/=O(this._overlaySR).metersPerDegree,v=90),y>=v&&(y=v,o[1]=0,this._overlaySR.isWebMercator&&(o[0]=0)));let f=1;_&&(f=1/Math.max(.2,Math.cos(Math.abs(c(o[1])))),y*f>180&&(f=180/y));const w=Math.log(2)/12;y=Math.exp(Math.round(Math.log(y)/w)*w);const T=y*f,S=32,D=.5*t/(S*T),R=.5*t/(S*y);o[0]=Math.round(o[0]*D)/D,o[1]=Math.round(o[1]*R)/R;const j=i.inner;j[0]=o[0]-T,j[1]=o[1]-y,j[2]=o[0]+T,j[3]=o[1]+y,this._isSpherical&&this._shiftExtentToFitBounds(j,1/0,v);const I=i.outer;if(x(I,j),6*T>a[2]-a[0])x(I,a);else if(p<=.25*Math.PI)I[0]-=T,I[1]-=y,I[2]+=T,I[3]+=y;else{b(e.eye,this._renderSR,oe,this._overlaySR),P(ne,o,oe);let t=-Math.atan2(ne[1],ne[0])+.125*Math.PI;t<0&&(t+=2*Math.PI);const r=Math.floor(t/(.25*Math.PI));H(ne,ee[r],2*y),ne[0]*=f,ne[2]*=f,G(I,I,ne)}if(this._isSpherical&&(I[0]=this._longitudeCyclical.clamp(I[0]),I[2]=this._longitudeCyclical.clamp(I[2]),I[1]=Math.max(I[1],-v),I[3]=Math.min(I[3],v)),!this._isSpherical&&a){const e=C(j,a,he),t=C(I,a,de);M(e,t)&&(I[2]=I[0],I[3]=I[1])}}_drawOverlayTextures(e){if(s(e)||!this._drawTexturesDirty&&!this._drawTexturesAnimateDirty)return;const t=this._drawOverlay(e,0),r=this._drawOverlay(e,1);0!==t&&0!==r||this.surface.updateTileOverlayParams(),this._collectUnusedRenderTargetMemory(),this._drapeTargets.forEach((e=>this._updateDrapeTarget(e))),this._drawTexturesAnimateDirty=!1,this._drawTexturesDirty?(this._drawTexturesDirty=!1,this.surface.requestRender(),this.surface.pendingUpdates=!0):this.surface.requestRender(0)}_setupGeometryViewsCyclical(e,t,r){this._setupGeometryViewsDirect(e,t,r);const s=.001*this._longitudeCyclical.range;if(t[0]-s<=this._longitudeCyclical.min){const s=e.views[e.numViews++];F(s.viewport,0,0,r,r),j(t,this._longitudeCyclical.range,0,s.extent)}if(t[2]+s>=this._longitudeCyclical.max){const s=e.views[e.numViews++];F(s.viewport,0,0,r,r),j(t,-this._longitudeCyclical.range,0,s.extent)}}_setupGeometryViewsDirect(e,t,r){e.numViews=1;const s=e.views[0];x(s.extent,t),F(s.viewport,0,0,r,r)}_drawOverlay(e,t){const r=e[t],s=r.computeRenderTargetValidityBitfield(),{extent:i,resolution:a,pixelRatio:n}=r;this._longitudeCyclical?this._setupGeometryViewsCyclical(ae,i,a):this._setupGeometryViewsDirect(ae,i,a),ae.width=a,ae.height=a,ae.pixelRatio=n*this.view.state.camera.pixelRatio,ae.index=t,r.drawRenderTargets(this.renderer,ae,this.needsColorWithoutRasterImage());return s^r.computeRenderTargetValidityBitfield()?0:1}needsColorWithoutRasterImage(){return this._drapeSourceTypes[0]>0&&this._drapeSourceTypes[1]>0&&this._drapeTargetTypes[1]>0}hasDrapedFeatures(){return this._drapeSourceTypes[1]>0}_collectUnusedRenderTargetMemory(){if(this._hasUnusedRenderTargets=!1,this.renderer.hasOverlays){const e=performance.now();this.renderer.forEachOverlay((t=>this._hasUnusedRenderTargets=t.collectUnusedMemory(e)||this._hasUnusedRenderTargets))}}_rectanglesOverlap(e,t){return this._longitudeCyclical?(this._longitudeCyclical.contains(t[0],t[2],e[0])||this._longitudeCyclical.contains(t[0],t[2],e[2])||this._longitudeCyclical.contains(e[0],e[2],t[0]))&&!(e[1]>t[3]||e[3]<t[1]):I(e,t)}_rectInsideRect(e,t){return this._longitudeCyclical?this._longitudeCyclical.contains(t[0],t[2],e[0])&&this._longitudeCyclical.contains(t[0],t[2],e[2])&&e[1]>t[1]&&e[3]<t[3]:M(t,e)}_pointIsInExtent(e,t){if(this._longitudeCyclical)return this._longitudeCyclical.contains(t[0],t[2],e.x)&&e.y>=t[1]&&e.y<=t[3];const r=e.x,s=e.y;return r>t[0]&&r<t[2]&&s>t[1]&&s<t[3]}_shiftExtentToFitBounds(e,t,r){let s=0,i=0;e[0]<-t?s=e[0]+t:e[2]>t&&(s=t-e[2]),e[1]<-r?i=e[1]+r:e[3]>r&&(i=r-e[3]),j(e,s,i)}get test(){return{renderer:this.renderer,update:()=>this._updateOverlays()}}};function se(e,t){const r=Math.max(e,t)+256;return h(r)}function ie(e,t){const r=1e-5,s=Y.TESTS_DISABLE_UPDATE_THRESHOLDS?0:r*Math.max(e[2]-e[0],e[3]-e[1],t[2]-t[0],t[3]-t[1]);for(let i=0;i<4;i++)if(Math.abs(t[i]-e[i])>s)return!0;return!1}e([i()],re.prototype,"_overlaySR",void 0),e([i({readOnly:!0})],re.prototype,"_needsUpdate",null),e([i()],re.prototype,"_placementDirty",void 0),e([i()],re.prototype,"_layerViewsDirty",void 0),e([i()],re.prototype,"renderer",void 0),e([i({constructOnly:!0})],re.prototype,"surface",void 0),e([i({readOnly:!0,aliasOf:"surface.suspended"})],re.prototype,"suspended",void 0),e([i({readOnly:!0})],re.prototype,"updating",null),e([i({type:Boolean})],re.prototype,"hasHighlights",null),e([i({type:Boolean})],re.prototype,"rendersOccluded",null),re=e([a("esri.views.3d.terrain.OverlayManager")],re);const ae={width:0,height:0,pixelRatio:0,views:[{viewport:U(),extent:U()},{viewport:U(),extent:U()},{viewport:U(),extent:U()}],numViews:0,index:0},ne=V(),oe=u(),le={inner:U(),outer:U()},he=U(),de=U(),ce=B.create();export{re as OverlayManager};
