/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../core/maybe.js";import t from"../../../core/Error.js";import{isMars as i,isMoon as s}from"../../../geometry/support/spatialReferenceUtils.js";import r from"../../../geometry/SpatialReference.js";import{x2lon as l,y2lat as o}from"../../../geometry/support/webMercatorUtils.js";import n from"../../../geometry/Extent.js";import"../../../geometry.js";import{deg2rad as a,floatEqualAbsolute as c,floatEqualRelative as h}from"../../../core/mathUtils.js";import{getMetersPerUnitForSR as u}from"../../../core/unitUtils.js";import{create as m}from"../../../geometry/support/aaBoundingRect.js";import{canProjectToWGS84ComparableLonLat as p}from"../../../geometry/projection.js";import f from"../../../layers/support/TileInfo.js";const g=12;class x{constructor(e){const t=x.checkUnsupported(e);if(t)throw t;this.spatialReference=e.spatialReference,this._isWebMercator=this.spatialReference.isWebMercator,this._isGCS=p(this.spatialReference)||i(this.spatialReference)||s(this.spatialReference),this.origin=[e.origin.x,e.origin.y],this.pixelSize=e.size[0],this.dpi=e.dpi;const r=e.lods.reduce((function(e,t,i){return t.level<e.min&&(e.min=t.level,e.minIndex=i),e.max=Math.max(e.max,t.level),e}),{min:1/0,minIndex:0,max:-1/0}),l=e.lods[r.minIndex],o=2**l.level;let n=l.resolution*o,a=l.scale*o;this.levels=new Array(r.max+1);for(let i=0;i<this.levels.length;i++)this.levels[i]={resolution:n,scale:a,tileSize:[n*e.size[0],n*e.size[1]]},n/=2,a/=2}clone(){return new x(this.toTileInfo())}toTileInfo(){return new f({dpi:this.dpi,origin:{x:this.origin[0],y:this.origin[1],spatialReference:this.spatialReference},size:[this.pixelSize,this.pixelSize],spatialReference:this.spatialReference,lods:this.levels.map(((e,t)=>({level:t,scale:e.scale,resolution:e.resolution})))})}getExtent(e,t,i,s){const r=this.levels[e],l=r.tileSize[0],o=r.tileSize[1];s[0]=this.origin[0]+i*l,s[2]=s[0]+l,s[3]=this.origin[1]-t*o,s[1]=s[3]-o}convertExtentToRadians(e,t){this._isWebMercator?(t[0]=l(e[0]),t[1]=o(e[1]),t[2]=l(e[2]),t[3]=o(e[3])):this._isGCS&&(t[0]=a(e[0]),t[1]=a(e[1]),t[2]=a(e[2]),t[3]=a(e[3]))}getExtentGeometry(e,t,i,s=new n){return this.getExtent(e,t,i,v),s.spatialReference=this.spatialReference,s.xmin=v[0],s.ymin=v[1],s.xmax=v[2],s.ymax=v[3],s.zmin=void 0,s.zmax=void 0,s}ensureMaxLod(e){if(null==e)return!1;let t=!1;for(;this.levels.length<=e;){const e=this.levels[this.levels.length-1],i=e.resolution/2;this.levels.push({resolution:i,scale:e.scale/2,tileSize:[i*this.pixelSize,i*this.pixelSize]}),t=!0}return t}capMaxLod(e){this.levels.length>e+1&&(this.levels.length=e+1)}getMaxLod(){return this.levels.length-1}scaleAtLevel(e){return this.levels[0].scale/2**e}levelAtScale(e){const t=this.levels[0].scale;return e>=t?0:Math.log(t/e)*Math.LOG2E}resolutionAtLevel(e){return this.levels[0].resolution/2**e}compatibleWith(e){if(!(e instanceof x)){if(x.checkUnsupported(e))return!1;e=new x(e)}if(!e.spatialReference.equals(this.spatialReference))return!1;if(e.pixelSize!==this.pixelSize)return!1;const t=Math.min(this.levels.length,e.levels.length)-1,i=this.levels[t].resolution;let s=.5*i;if(!c(e.origin[0],this.origin[0],s)||!c(e.origin[1],this.origin[1],s))return!1;return s=.5*i/2**t/this.pixelSize*g,c(i,e.levels[t].resolution,s)}rootTilesInExtent(t,i=null,s=1/0){const r=this.levels[0].tileSize;if(0===r[0]||0===r[1])return[];x.computeRowColExtent(t,r,this.origin,v);let l=v[1],o=v[3],n=v[0],a=v[2];const c=a-n,h=o-l;if(c*h>s){const e=Math.floor(Math.sqrt(s));h>e&&(l=l+Math.floor(.5*h)-Math.floor(.5*e),o=l+e),c>e&&(n=n+Math.floor(.5*c)-Math.floor(.5*e),a=n+e)}const u=[];for(let e=l;e<o;e++)for(let t=n;t<a;t++)u.push([0,e,t]);return e(i)&&(i[0]=this.origin[0]+n*r[0],i[1]=this.origin[1]-o*r[1],i[2]=this.origin[0]+a*r[0],i[3]=this.origin[1]-l*r[1]),u}static computeRowColExtent(e,t,i,s){const r=.001*(e[2]-e[0]+(e[3]-e[1]));s[0]=Math.max(0,Math.floor((e[0]+r-i[0])/t[0])),s[2]=Math.max(0,Math.ceil((e[2]-r-i[0])/t[0])),s[1]=Math.max(0,Math.floor((i[1]-e[3]+r)/t[1])),s[3]=Math.max(0,Math.ceil((i[1]-e[1]-r)/t[1]))}static isPowerOfTwo(e){const t=e.lods,i=t[0].resolution*2**t[0].level;return!t.some((function(e){return!h(e.resolution,i/2**e.level)}))}static hasGapInLevels(e){const t=e.lods.map((function(e){return e.level}));t.sort((function(e,t){return e-t}));for(let i=1;i<t.length;i++)if(t[i]!==t[0]+i)return!0;return!1}static tileSizeSupported(e){const t=e.size[1];return t===e.size[0]&&0==(t&t-1)&&t>=128&&t<=512}static checkUnsupported(e){return e?e.lods.length<1?new t("tilingscheme:generic","Tiling scheme must have at least one level"):x.isPowerOfTwo(e)?x.hasGapInLevels(e)?new t("tilingscheme:gaps","Tiling scheme levels must not have gaps between min and max level"):x.tileSizeSupported(e)?null:new t("tilingscheme:tile-size","Tiles must be square and size must be one of [128, 256, 512]"):new t("tilingscheme:power-of-two","Tiling scheme must be power of two"):new t("tilingscheme:tile-info-missing","Tiling scheme must have tiling information")}static fromExtent(e,t){const i=e[2]-e[0],s=e[3]-e[1],r=u(t),l=1.2*Math.max(i,s),o=256,n=96,a=.0254,c=new x(new f({size:[o,o],origin:{x:e[0]-.5*(l-i),y:e[3]+.5*(l-s)},lods:[{level:0,resolution:l/o,scale:1/(o/n*a/(l*r))}],spatialReference:t}));return c.ensureMaxLod(20),c}static makeWebMercatorAuxiliarySphere(e){const t=new x(x.WebMercatorAuxiliarySphereTileInfo);return t.ensureMaxLod(e),t}static makeGCSWithTileSize(e,t=256,i=16){const s=256/t,r=new x(new f({size:[t,t],origin:{x:-180,y:90,spatialReference:e},spatialReference:e,lods:[{level:0,resolution:.703125*s,scale:295497598.570834*s}]}));return r.ensureMaxLod(i),r}get test(){return{isWebMercator:this._isWebMercator,isGCS:this._isGCS}}}x.WebMercatorAuxiliarySphereTileInfo=new f({size:[256,256],origin:{x:-20037508.342787,y:20037508.342787,spatialReference:r.WebMercator},spatialReference:r.WebMercator,lods:[{level:0,resolution:156543.03392800014,scale:591657527.591555}]}),x.WebMercatorAuxiliarySphere=x.makeWebMercatorAuxiliarySphere(19);const v=m();export default x;
