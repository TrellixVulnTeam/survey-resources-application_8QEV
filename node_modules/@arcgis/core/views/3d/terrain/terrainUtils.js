/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{unwrapOr as e,isSome as t}from"../../../core/maybe.js";import n from"../../../layers/ElevationLayer.js";import r from"../../../layers/TileLayer.js";import i from"../../../layers/VectorTileLayer.js";import{ImageWithType as l}from"../support/StreamDataLoader.js";import{VectorTile as o}from"../../2d/engine/vectorTiles/VectorTile.js";import a from"./RasterTile.js";import{t as s}from"../../../chunks/terrainUtilsPlanar.js";import{t as f}from"../../../chunks/terrainUtilsSpherical.js";import c from"./TileTexture.js";const u={planar:s,spherical:f};function m(e,t){e||console.warn("Terrain: "+t)}const y=1.2,p=80/180*Math.PI,d=110/180*Math.PI;function I(t,n,r){const i=u[t.manifold];let l;if(i.isInsideExtent(t,n))l=e(t.getElevation(n[0],n[1],n[1],t.spatialReference),0);else{if(!i.isInsideExtent(t,n,y))return 0;const e=i.tiltToExtentEdge(t,n);if(e>p&&e<d)return 0;const r=t.elevationBounds;l=.5*(r.min+r.max)}const o=n[2]-l;return Math.abs(o)<r?0:o<0?-1:1}function T(e){return E(e)?{fullExtent:e.fullExtent,minScale:e.layer.minScale,maxScale:e.layer.maxScale,tilemapCache:null}:e.layer}function L(e){return e&&e instanceof i}function x(e){return"imagery-tile"===e.type||"wcs"===e.type}function E(e){return e&&"esri.views.3d.layers.ImageryTileLayerView3D"===e.declaredClass}function h(e){return e&&"esri.views.3d.layers.TileLayerView3D"===e.declaredClass}function w(e){return e&&"esri.views.3d.layers.VectorTileLayerView3D"===e.declaredClass}function v(e){return e&&"esri.views.3d.layers.WMTSLayerView3D"===e.declaredClass}function S(e){return e&&"esri.views.3d.layers.ElevationLayerView3D"===e.declaredClass}function V(e){return e&&(h(e)||E(e)||S(e)||w(e)||v(e))}function j(e){return e&&e.sourceLayerInfo&&e.sourceLayerInfo.data instanceof a}function g(e){return e&&e.sourceLayerInfo&&e.sourceLayerInfo.data instanceof o}function C(e){return e&&e.sourceLayerInfo&&e.sourceLayerInfo.data instanceof c}function M(e){const t=e&&e.sourceLayerInfo&&e.sourceLayerInfo.data;return t instanceof HTMLImageElement||t instanceof l||t instanceof HTMLCanvasElement||t instanceof ImageData}function D(e){return t(e)&&"release"in e&&e.release(),null}function b(e){return e.fetchTile&&!(e.fetchTile===r.prototype.fetchTile||e.fetchTile===n.prototype.fetchTile)}function k(e,t,n,r){let i;return i=2===r||"planar"===r?"planar":"spherical",u[i].checkIfTileInfoSupportedForViewSR(e,n,t)}function P(e,t,n){let r,i;if("wmts"===e.type){const l=e.activeLayer;if(l){const e=l.tileMatrixSet;if(e)r=e.tileInfo,i=e.fullExtent;else{const e=l.tileMatrixSets;if(e){const r=e.find((e=>null==k(e.tileInfo,e.fullExtent,t,n)));if(r)return{tileInfo:r.tileInfo,fullExtent:r.fullExtent}}}}}else i=x(e)?e.getCompatibleFullExtent(t):e.fullExtent,r="vector-tile"!==e.type||R.force512VTL?x(e)?e.getCompatibleTileInfo(t,i):e.tileInfo:e.compatibleTileInfo256;return r&&i&&null==k(r,i,t,n)?{tileInfo:r,fullExtent:i}:{tileInfo:null,fullExtent:null}}const R={force512VTL:!1};export{k as checkIfTileInfoSupportedForView,I as computeSkirtScale,T as getLayerWithExtentRange,P as getTiledLayerInfo,S as isElevationLayerView,E as isImageryTileLayerView,j as isImageryTileRenderInfo,x as isProjectableRasterLayer,M as isRasterTileRenderInfo,V as isSurfaceLayerView,C as isTextureTileRenderInfo,h as isTileLayerView,L as isVectorTileLayer,w as isVectorTileLayerView,g as isVectorTileRenderInfo,v as isWMTSLayerView,D as releaseTileData,R as test,b as useFetchTileForLayer,m as weakAssert};
