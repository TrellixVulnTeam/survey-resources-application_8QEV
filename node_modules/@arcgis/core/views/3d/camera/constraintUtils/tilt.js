/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{neverReached as e}from"../../../../core/compilerUtils.js";import{clamp as t,acosClamped as r,asinClamped as n,deg2rad as i}from"../../../../core/mathUtils.js";import{c as s}from"../../../../chunks/vec3f64.js";import{f as a,i as o,a as c,b as u,k as l,d,n as m,l as f,o as y}from"../../../../chunks/vec3.js";import{getReferenceEllipsoid as p}from"../../../../geometry/projectionEllipsoid.js";import{i as h,r as C}from"../../../../chunks/mat4.js";import{a as M}from"../../../../chunks/mat4f64.js";import{sphere as I}from"../../support/geometryUtils.js";import{defaultApplyOptions as w,hasConstraintType as S,adjustRangeForInteraction as D}from"./common.js";import{viewAngle as A}from"../../state/utils/viewUtils.js";function R(t,r,n=w,i=!0){J.eyeCenterDistance=0,J.requiresTwoSteps=!1;const s=x(t,r,n,void 0,J);if(0===s)return!1;switch(h(E),C(E,E,-s,r.viewRight),n.tiltMode){case 1:o(L,r.viewForward,E),c(L,L,J.eyeCenterDistance),u(r.center,r.eye,L);break;case 0:a(L,r.center,r.eye),o(L,L,E),a(r.eye,r.center,L);break;default:e(n.tiltMode)}return o(r.up,r.up,E),r.markViewDirty(),!J.requiresTwoSteps||!i||R(t,r,n,!1)}function x(e,t,r=w,n=w,i){if(!e.state.constraints.tilt)return 0;const s=t.distance,a=e.state.constraints.tilt(s,B);return F(e,r,a),2===n.interactionType&&S(n.selection,2)&&U(e,n.interactionStartCamera,a),1===r.tiltMode||1===n.tiltMode?T(e,t,a,i):P(e,t,a)}function P(e,r,n){const i=A(e.renderCoordsHelper,r.center,r.eye),s=i-t(i,n.min,n.max);return k(s)?s:0}function T(t,r,n,i){switch(i&&(i.requiresTwoSteps=!1),t.viewingMode){case"global":return v(t,r,n,i);case"local":return j(t,r,n,i);default:return void e(t.viewingMode)}}function j(e,r,n,i){const s=A(e.renderCoordsHelper,r.center,r.eye),a=t(s,n.min,n.max),o=s-a;if(!k(o))return 0;if(i){const t=e.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude,n=e.renderCoordsHelper.getAltitude(r.eye)-t,s=Math.cos(a);Math.abs(s)>1e-4?i.eyeCenterDistance=n/s:i.eyeCenterDistance=r.distance}return o}function v(e,r,n,i){const s=O(e,r,G),a=t(s.tiltAtCenter,n.min,n.max);if(!k(s.tiltAtCenter-a))return 0;let o,c;return s.centerIsOnSurface?(o=q(s),c=H(s,o)):(o=s.constraints.clampTilt(s.eyeCenterDistance,s.tiltAtCenter),i&&o<Math.PI/2&&(i.requiresTwoSteps=!0,o=Math.PI/2-1e-5),c=b(s,o)),i&&(i.eyeCenterDistance=g(s,o)),c}function O(e,t,n){const i=e.pointsOfInterest.centerOnSurfaceFrequent.estimatedSurfaceAltitude,s=i+p(e.spatialReference).radius,a=e.renderCoordsHelper.intersectManifold(t.ray,i,V);return n.eyeCenterDistance=t.distance,a?(n.eyeCenterDistance=l(t.eye,V),n.tiltAtCenter=A(e.renderCoordsHelper,V,t.eye)):e.state.isLocal?n.tiltAtCenter=A(e.renderCoordsHelper,t.center,t.eye):(I.closestPointOnSilhouette(I.fromRadius(s),t.ray,V),n.eyeCenterDistance=l(t.eye,V),n.tiltAtCenter=r(-d(t.viewForward,m(V,V)))),n.radius=s,n.eyeRadius=f(t.eye),n.constraints=e.state.constraints,n.centerIsOnSurface=a,n}function k(e){return Math.abs(e)>1e-9}function q(e){const{constraints:t,eyeCenterDistance:r,tiltAtCenter:n}=e;let i=n,s=t.clampTilt(r,n);const a=g(e,s);if(t.clampTilt(a,n)===s)return s;let o=0;for(;o<10&&k(s-i);){const r=(i+s)/2,n=g(e,r);k(t.clampTilt(n,r)-r)?i=r:s=r,o++}return s}function g(e,r){if(!e.centerIsOnSurface)return e.eyeCenterDistance;const i=Math.PI-t(r,0,Math.PI),s=n(e.radius/e.eyeRadius*Math.sin(i)),a=Math.PI-i-s,o=Math.sin(a)/Math.sin(i);if(e.eyeRadius<e.radius&&o>1){const t=Math.PI-s,r=Math.PI-i-t;return Math.sin(r)/Math.sin(i)*e.eyeRadius}return o*e.eyeRadius}function H(e,t){const r=n(e.radius/e.eyeRadius*Math.sin(e.tiltAtCenter)),i=n(e.radius/e.eyeRadius*Math.sin(t));return e.eyeRadius>e.radius?r-i:i-r}function b(e,t){return e.tiltAtCenter-Math.PI/2-(t-Math.PI/2)}function F(e,t,r){if(0===t.interactionType)return;const{interactionStartCamera:n,interactionFactor:i}=t,{min:s,max:a}=r,o=x(e,n,w,t),c=0===o?0:A(e.renderCoordsHelper,n.center,n.eye);r.min=s,r.max=a,2===t.interactionType?(S(t.selection,2)&&U(e,n,r),D(o,c,!0,i,z,r)):D(o,c,!1,i,z,r)}function U(e,t,n){if(e.state.isLocal)return;const i=e.state.constraints;if(!i.altitude)return;const s=y(t.center),a=Math.sqrt(s),o=t.distance,c=p(e.spatialReference).radius,u=i.altitude.min+c,l=i.altitude.max+c,d=(u*u-o*o-s)/(-2*a*o),m=(l*l-o*o-s)/(-2*a*o);n.min=Math.max(n.min,Math.min(Math.PI-r(m),n.max)),n.max=Math.min(n.max,Math.PI-r(d))}const L=s(),E=M(),V=s(),z=i(5),B={min:0,max:0},G={constraints:null,radius:0,eyeRadius:0,centerIsOnSurface:!0,eyeCenterDistance:0,tiltAtCenter:0},J={eyeCenterDistance:0,requiresTwoSteps:!1};export{R as applyTiltConstraint,x as getTiltConstraintError};
