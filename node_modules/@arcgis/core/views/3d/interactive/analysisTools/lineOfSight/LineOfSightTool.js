/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import"../../../../../core/has.js";import{destroyMaybe as t,isSome as i,isNone as n}from"../../../../../core/maybe.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import{property as r}from"../../../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../../../core/accessorSupport/decorators/subclass.js";import"../../../../../core/urlUtils.js";import"../../../../../core/uuid.js";import"../../../../../portal/support/resourceExtension.js";import o from"../../../../../geometry/Point.js";import a from"../../../../../core/Collection.js";import l from"../../../../../Color.js";import{screenPointObjectToArray as c}from"../../../../../core/screenUtils.js";import{c as h}from"../../../../../chunks/vec3f64.js";import{g as u,d,a as p,n as m,b as _,f as g,w as v,r as f}from"../../../../../chunks/vec3.js";import y from"../../../../../core/Handles.js";import{init as b,on as O,watch as C}from"../../../../../core/watchUtils.js";import{Task as T}from"../../../../support/Scheduler.js";import{a as I}from"../../../../../chunks/mat4f64.js";import{getObjectId as L}from"../../../../../layers/graphics/dehydratedFeatures.js";import{sv2d as S}from"../../../support/stack.js";import{a as E,b as w,i as V,c as k}from"../../../../../chunks/ray.js";import{lineSegment as R}from"../../../support/geometryUtils.js";import{Intersector as A}from"../../../webgl-engine/lib/Intersector.js";import{tilesAreRelated as M}from"../../../terrain/tileUtils.js";import{createManipulatorDragEventPipeline as z}from"../../../../interactive/dragEventPipeline.js";import{LaserlineVisualElement as H}from"../../visualElements/LaserlineVisualElement.js";import{InteractiveToolBase as G}from"../../../../interactive/InteractiveToolBase.js";import{LineVisualElement as P}from"../../visualElements/LineVisualElement.js";import{Configuration as j}from"./lineOfSightToolConfig.js";import{createSphereManipulator as D}from"./lineOfSightToolUtils.js";import U from"../../../../../widgets/LineOfSight/LineOfSightTarget.js";const F=a.ofType(U);let x=class extends G{constructor(e){super(e),this.deferCreation=!0,this.configuration=null,this.updating=!1,this._handles=new y,this._manipulatorHandles=new y,this._laserlineVisualElement=null,this._observer=null,this._tracker=null,this._analyses=new a,this._screenPixelSize=0,this._grabbedManipulator=null,this._showTracker=!0}initialize(){const e=b(this,"state",(e=>{switch(e){case"created":this.complete();break;default:this.create()}}),!0),t=this.configuration=new j;this._intersector=new A(this.view.state.mode),this._intersector.options.hud=!1,this._intersector.options.store=0,this._observer={location:null,intersection:null,manipulator:this._addManipulator({size:t.observerManipulatorSize,color:t.observerManipulatorColor,visible:!1})},this._tracker=this._createLineOfSightAnalysis(new U({location:new o})),this._tracker.point.manipulator.available=!1,this._tracker.point.manipulator.interactive=!1;const i=this._handles;i.add([e,this.view.state.watch("camera",(()=>this._onCameraChange())),this.view.watch("map.ground.opacity",((e,t)=>this._onGroundOpacityChange(e,t))),b(this.view,"slicePlane",(()=>this._onSlicePlaneChange())),b(this.model,"observer",(e=>this._onObserverChange(e)),!0),O(this.model,"targets","change",(e=>this._onTargetCollectionChange(e)),(e=>this._onTargetsChange(e)),null,!0),C(this.configuration,["laserLineEnabled","laserLineGlowColor","laserLineGlowWidth","laserLineInnerColor","laserLineInnerWidth","laserLineGlobalAlpha","lineOfSightInnerWidth","lineOfSightOuterWidth","lineOfSightVisibleInnerColor","lineOfSightVisibleOuterColor","lineOfSightOccludedInnerColor","lineOfSightOccludedOuterColor","lineOfSightUndefinedInnerColor","lineOfSightUndefinedOuterColor","lineOfSightUndefinedStipplePattern","lineOfSightUndefinedStipplePatternOffColor"],(()=>this._createVisualElements())),C(this.configuration,["observerManipulatorSize","observerManipulatorColor"],(()=>this._recreateManipulator(this._observer))),C(this.configuration,["targetManipulatorSize","targetManipulatorVisibleColor","targetManipulatorOccludedColor","targetManipulatorUndefinedColor"],(()=>this._analyses.forEach((e=>this._recreateManipulator(e.point)))))]),this._createVisualElements();const n=this.view.pointsOfInterest;n&&i.add([n.contentGeometryUpdates.events.on("request-update",(()=>this._onContentChange())),this.view.elevationProvider.on("elevation-change",(()=>this._onContentChange()))]);const r=this.view.resourceController&&this.view.resourceController.scheduler;r&&(this._frameTask=r.registerTask(T.LINE_OF_SIGHT_TOOL,(e=>this._updateAnalyses(e)),(()=>this.updating)),i.add(this._frameTask)),this.continue()}destroy(){this.detach(),this._handles=t(this._handles),this._manipulatorHandles=t(this._manipulatorHandles),this.manipulators.remove(this._observer.manipulator),this._destroyLineOfSightAnalysis(this._tracker),this._analyses.forEach((e=>this._destroyLineOfSightAnalysis(e))),this._removeVisualElements(),this._intersector=null,this._set("model",null)}_removeVisualElements(){i(this._laserlineVisualElement)&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}get state(){return this._showTracker?"creating":i(this.model.observer)?"created":"ready"}get cursor(){return this.manipulators.some((({manipulator:e})=>e.focused))?null:this._showTracker?"crosshair":null}get isSupported(){return"3d"===this.get("view.type")}continue(){this.view.activeTool=this,this._showTracker=!0,this._updateTrackerVisibility()}stop(){this._showTracker=!1,this._setDirty(T.LINE_OF_SIGHT_TOOL_INTERACTIVE),this._updateTrackerVisibility()}onInputEvent(e){switch(e.type){case"immediate-double-click":this._doubleClickHandler(e);break;case"key-down":this._keyDownHandler(e);break;case"pointer-move":this._pointerMoveHandler(e)}}onInputEventAfter(e){switch(e.type){case"immediate-click":this._clickHandler(e)}}_setDirty(e){this.updating?e===T.LINE_OF_SIGHT_TOOL_INTERACTIVE&&this._frameTask&&(this._frameTask.task=e):(this._set("updating",!0),this._frameTask&&(this._frameTask.task=e))}_updateTrackerVisibility(){this._tracker.shouldRender=this._showTracker&&!this.manipulators.some((e=>e.manipulator.focused)),this._updateLaserLineRenderer()}_manipulatorFocusChanged(){this._updateTrackerVisibility(),this.notifyChange("cursor")}_addManipulator(e){const t=D(this.view,e);return this._manipulatorHandles.add([this._createManipulatorDragPipeline(t),t.events.on("focus-changed",(()=>this._manipulatorFocusChanged())),t.events.on("grab-changed",(e=>this._manipulatorGrabChanged(t,e))),t.events.on("immediate-click",(e=>e.stopPropagation()))],t),this.manipulators.add(t),t}_removeManipulator(e){this.manipulators.remove(e),this._manipulatorHandles.remove(e)}_recreateManipulator(e){const t=this.configuration,i=e.manipulator;this._removeManipulator(i);const n=e===this._observer?{size:t.observerManipulatorSize,color:t.observerManipulatorColor,visible:i.available}:{size:t.targetManipulatorSize,customColor1:t.targetManipulatorVisibleColor,customColor2:t.targetManipulatorOccludedColor,customColor3:t.targetManipulatorUndefinedColor};e.manipulator=this._addManipulator(n),e.manipulator.location=i.location,this._setDirty(T.LINE_OF_SIGHT_TOOL_INTERACTIVE)}_screenToIntersection(){return e=>{const t=this._getScreenPointIntersection(e.screenEnd);return n(t)?null:{...e,intersection:t}}}_createManipulatorDragPipeline(e){return z(e,((t,i,n)=>{i.next(this._screenToIntersection()).next(e===this._observer.manipulator?this._updateObserverDragStep():this._updateAnalysisDragStep(e)).next((()=>this._updateLaserLineRenderer())),n.next(e===this._observer.manipulator?this._cancelObserverDragStep():this._cancelAnalysisDragStep(e)).next((()=>this._updateLaserLineRenderer()))}))}_updateObserverDragStep(){return e=>(this.model.observer=e.intersection.point,this._observer.intersection=e.intersection,e)}_cancelObserverDragStep(){const e=i(this.model.observer)?this.model.observer.clone():null,t=this._observer.intersection;return i=>(this.model.observer=e,this._observer.intersection=t,i)}_updateAnalysisDragStep(e){return t=>{const i=this._analyses.find((t=>t.point.manipulator===e));return i.target.location=t.intersection.point,i.point.intersection=t.intersection,t}}_cancelAnalysisDragStep(e){const t=this._analyses.find((t=>t.point.manipulator===e)),n=i(t.target.location)?t.target.location.clone():null,r=t.point.intersection;return e=>(t.target.location=n,t.point.intersection=r,e)}_updateLaserLineRenderer(){if(n(this._laserlineVisualElement))return;const e=this._laserlineVisualElement,t=i(this._grabbedManipulator)?this._grabbedManipulator:this._tracker.shouldRender&&this.model.observer?this._tracker.point.manipulator:null;this.configuration.laserLineEnabled&&i(t)?(e.heightManifoldTarget=t.renderLocation,t!==this._observer.manipulator?e.lineVerticalPlaneSegment=R.fromPoints(this._observer.manipulator.renderLocation,t.renderLocation,X):e.lineVerticalPlaneSegment=null):(e.heightManifoldTarget=null,e.lineVerticalPlaneSegment=null)}_createVisualElements(){const e=this.configuration;i(this._laserlineVisualElement)&&this._removeVisualElements(),this._laserlineVisualElement=new H({view:this.view,attached:!0,style:{glowColor:l.toUnitRGB(e.laserLineGlowColor),glowWidth:e.laserLineGlowWidth,innerColor:l.toUnitRGB(e.laserLineInnerColor),innerWidth:e.laserLineInnerWidth,globalAlpha:e.laserLineGlobalAlpha}}),this._setDirty(T.LINE_OF_SIGHT_TOOL_INTERACTIVE)}_onObserverChange(e){if(n(e))return this._observer.manipulator.available=!1,void this.model.targets.removeAll();this._observer.location=e,this._observer.intersection=null,this._observer.manipulator.available=!0,this._observer.manipulator.location=e,this._tracker.point.manipulator.location=e,this._analyses.forEach((e=>{e.isDirty=!0,e.isValid=!1})),this._setDirty(T.LINE_OF_SIGHT_TOOL_INTERACTIVE)}_onTargetsChange(e){this._analyses.forEach((e=>{this._destroyLineOfSightAnalysis(e)})),this._analyses.removeAll(),e.items&&this._onTargetCollectionChange({target:e,added:e.items,removed:[],moved:[]})}_onTargetCollectionChange(e){e.added.forEach((e=>{if(!this._analyses.some((t=>t.target===e))){const t=this._createLineOfSightAnalysis(e);this._analyses.add(t)}this._setDirty(T.LINE_OF_SIGHT_TOOL_INTERACTIVE)})),e.removed.forEach((e=>{const t=this._analyses.find((t=>t.point.location===e.location));this._destroyLineOfSightAnalysis(t),this._analyses.remove(t)}))}_onTargetLocationChange(e,t){e.isValid=!1,e.point.location=t,e.point.intersection=null,e.point.manipulator.location=t,e.isDirty=!0,this._setDirty(T.LINE_OF_SIGHT_TOOL_INTERACTIVE)}_onGroundOpacityChange(e,t){this._analyses.length&&(1!==e&&1!==t||e===t||(this._setDirty(T.LINE_OF_SIGHT_TOOL),this._analyses.forEach((e=>e.isDirty=!0))))}_onContentChange(){this._analyses.forEach((e=>{e.isDirty=!0,e.shouldIntersect=!0})),this._setDirty(T.LINE_OF_SIGHT_TOOL)}_onCameraChange(){if(!this._analyses.length)return;let e=!1;if(i(this.model.observer)){this.view.renderCoordsHelper.toRenderCoords(this.model.observer,N);const t=this.view.state.camera.computeScreenPixelSizeAt(N);e=e||Math.abs((t-this._screenPixelSize)/this._screenPixelSize)>.1}this._analyses.some((e=>!e.isValid))&&(e=!0),e&&(this._setDirty(T.LINE_OF_SIGHT_TOOL),this._analyses.forEach((e=>e.isDirty=!0)))}_onSlicePlaneChange(){this._analyses.length&&(this._setDirty(T.LINE_OF_SIGHT_TOOL_INTERACTIVE),this._analyses.forEach((e=>e.isDirty=!0)))}_addPointFromClickEvent(e){const t=this._getScreenPointIntersection(e);if(!n(t)&&!n(t.point))if(this.model.observer){const e=new U({location:t.point}),i=this._createLineOfSightAnalysis(e);this._analyses.add(i),i.point.intersection=t,this.model.targets.add(e)}else this.model.observer=t.point,this._observer.intersection=t}_clickHandler(e){this._showTracker&&(this._addPointFromClickEvent({x:e.x,y:e.y}),e.stopPropagation())}_doubleClickHandler(e){this._showTracker&&(this.stop(),e.stopPropagation())}_keyDownHandler(e){this._showTracker&&"Escape"===e.key&&(this.stop(),e.stopPropagation())}_pointerMoveHandler(e){if(!this._showTracker)return;const t={x:e.x,y:e.y},n=this._getScreenPointIntersection(t);i(n)&&i(n.point)&&(this._tracker.point.manipulator.location=n.point,this._tracker.isDirty=!0,this._updateLaserLineRenderer(),this._setDirty(T.LINE_OF_SIGHT_TOOL_INTERACTIVE))}_getScreenPointIntersection(e){const t=c(e,S.get()),i=E(this.view.state.camera,t,J);return this._getRayIntersection(i)}_getRayIntersection(e){if(n(e))return null;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(e,this._intersector);const t=this._intersector.results.min;if(!t||!t.getIntersectionPoint(N))return null;const r=this.view.renderCoordsHelper.fromRenderCoords(N,this.view.spatialReference),s=h();u(s,t.normal);const o=d(s,e.direction)>0?-1:1;p(s,s,o);const a=t.toGraphic(this.view);if(i(a)){const i=a.layer,n=a.sourceLayer;let o;if(n)switch(n.type){case"scene":o=L(a,n.objectIdField);break;case"integrated-mesh":{const e=t.target;o=`${e.metadata.nodeIndex}/${e.metadata.componentIndex}`;break}default:o=a.uid}else o=a.uid;return{type:"Graphic",id:`${i.uid}/${o}`,ray:w(e),normal:s,point:r}}if("TerrainRenderer"===t.intersector){return{type:"Terrain",id:t.target.metadata.tile.lij.slice(),ray:w(e),normal:s,point:r}}return null}_createLineOfSightAnalysis(e){const t=this.configuration,n=new P({view:this.view,attached:!0,width:t.lineOfSightOuterWidth,color:l.toUnitRGBA(t.lineOfSightVisibleOuterColor),innerWidth:t.lineOfSightInnerWidth,innerColor:l.toUnitRGBA(t.lineOfSightVisibleInnerColor)}),r=new P({view:this.view,attached:!0,width:t.lineOfSightOuterWidth,color:l.toUnitRGBA(t.lineOfSightOccludedOuterColor),innerWidth:t.lineOfSightInnerWidth,innerColor:l.toUnitRGBA(t.lineOfSightOccludedInnerColor)}),s=new P({view:this.view,attached:!0,width:t.lineOfSightOuterWidth,color:l.toUnitRGBA(t.lineOfSightUndefinedOuterColor),innerWidth:t.lineOfSightInnerWidth,innerColor:l.toUnitRGBA(t.lineOfSightUndefinedInnerColor)}),o={isValid:!1,isDirty:!0,shouldRender:!0,shouldIntersect:!1,point:{location:e.location,manipulator:this._addManipulator({size:t.targetManipulatorSize,customColor1:t.targetManipulatorVisibleColor,customColor2:t.targetManipulatorOccludedColor,customColor3:t.targetManipulatorUndefinedColor}),intersection:null},isTargetVisible:!1,hasIntersection:!1,target:e,targetHandle:null,engine:{points:{observer:h(),target:h(),intersection:h(),intersectionObserver:h(),intersectionTarget:h()},visualization:{visibleLineVisualElement:n,occludedLineVisualElement:r,undefinedLineVisualElement:s}}};return i(e.location)&&(o.point.manipulator.location=e.location),o.targetHandle=b(e,"location",(e=>this._onTargetLocationChange(o,e)),!0),this.manipulators.add(o.point.manipulator),o}_destroyLineOfSightAnalysis(e){e.targetHandle.remove(),this.manipulators.remove(e.point.manipulator),e.engine.visualization.visibleLineVisualElement.destroy(),e.engine.visualization.visibleLineVisualElement=null,e.engine.visualization.occludedLineVisualElement.destroy(),e.engine.visualization.occludedLineVisualElement=null,e.engine.visualization.undefinedLineVisualElement.destroy(),e.engine.visualization.undefinedLineVisualElement=null}_canComputeAnalysis(e){if(n(this.model.observer)||n(e.point)||n(e.point.location))return!1;this.view.renderCoordsHelper.toRenderCoords(this.model.observer,N);const t=this.view.frustum.intersectsPoint(N);this.view.renderCoordsHelper.toRenderCoords(e.point.location,N);const i=this.view.frustum.intersectsPoint(N);return t&&i}_manipulatorGrabChanged(e,t){switch(t.action){case"start":this._grabbedManipulator=e;break;case"end":this._grabbedManipulator===e&&(this._grabbedManipulator=null)}this._updateTrackerVisibility()}_canUpdateFromIntersectionResult(e,t){if(n(e)||!t||e.type!==t.type)return!1;if("Terrain"===e.type){const i=e.id,n=t.id;return i[0]===n[0]&&i[1]===n[1]&&i[2]===n[2]||M(i,n)}return("Graphic"===e.type||"I3S"===e.type)&&e.id===t.id}_updateFromIntersectionResult(e){let t;if("Terrain"===e.type&&i(e.point)){this.view.renderCoordsHelper.toRenderCoords(e.point,B),this.view.renderCoordsHelper.worldUpAtPosition(B,q);const i=this.view.basemapTerrain.elevationBounds,n=this.view.renderCoordsHelper.getAltitude(B),r=i?Math.abs(i.max-i.min)/Math.abs(n):100,s=n>0?1:-1;m(q,q),p(q,q,s*r),_(W,B,q),V(W,B,J),t=this._getRayIntersection(J)}else t=this._getRayIntersection(e.ray);return this._canUpdateFromIntersectionResult(t,e)?t.point:null}_updateAnalyses(e){if(this._set("updating",!1),!this.model.observer)return;if(this._analyses.some((e=>e.shouldIntersect))){const e=this._observer.intersection,t=e&&this._updateFromIntersectionResult(e);i(t)&&(this._observer.manipulator.location=t)}this._updateAnalysis(this._tracker,0);for(const t of this._analyses.items){if(e.done)return void this._set("updating",!0);this._updateAnalysis(t,1)&&e.madeProgress()}}_updateAnalysis(e,t){if(e.engine.visualization.visibleLineVisualElement.attached=e.shouldRender,e.engine.visualization.occludedLineVisualElement.attached=e.shouldRender,e.engine.visualization.undefinedLineVisualElement.attached=e.shouldRender,!e.shouldRender)return e.isDirty=!1,!1;if(!e.isDirty)return!1;if(e.shouldIntersect){const t=e.point.intersection,n=t&&this._updateFromIntersectionResult(t);i(n)&&(e.point.manipulator.location=n),e.shouldIntersect=!1}this.view.renderCoordsHelper.toRenderCoords(e.point.manipulator.location,e.engine.points.target),this.view.renderCoordsHelper.toRenderCoords(this._observer.manipulator.location,e.engine.points.observer);const n=0===t||this._canComputeAnalysis(e),r=e.engine,s=r.points.observer,a=r.points.target;this._screenPixelSize=this.view.state.camera.computeScreenPixelSizeAt(s),this._observer.intersection?u(q,this._observer.intersection.normal):g(q,a,s);const c=this._screenPixelSize;m(q,q),p(q,q,Math.min(c,1)),_(W,s,q),e.point.intersection?u(q,e.point.intersection.normal):g(q,s,a);const h=this.view.state.camera.computeScreenPixelSizeAt(a);if(m(q,q),p(q,q,Math.min(h,1)),_(B,a,q),n){const t=V(W,B,J);if(this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,this._intersector),e.hasIntersection=!!this._intersector.results.min&&this._intersector.results.min.getIntersectionPoint($),e.isTargetVisible=!0,e.hasIntersection){u(r.points.intersection,$),u(r.points.intersectionObserver,W),u(r.points.intersectionTarget,B),this.view.renderCoordsHelper.fromRenderCoords(r.points.intersection,N,this.view.spatialReference);const t=1-v(B,a)/v(s,a);e.isTargetVisible=v(s,r.points.intersection)>=t*v(s,a)}e.isValid=!0;const i=new o(N,this.view.spatialReference);e.target.intersectedLocation=e.isTargetVisible?null:i,e.target.intersectedGraphic=e.isTargetVisible?null:this._intersector.results.min.toGraphic(this.view),e.target.visible=!!e.hasIntersection&&e.isTargetVisible}else if(e.isValid){u($,r.points.intersection);const t=v(e.engine.points.intersectionObserver,r.points.intersection)/v(e.engine.points.intersectionObserver,e.engine.points.intersectionTarget);f(K,W,e.engine.points.intersectionObserver),p(K,K,1-t),_($,$,K),f(K,B,e.engine.points.intersectionTarget),p(K,K,t),_($,$,K)}else e.hasIntersection=!1,e.target.intersectedLocation=null,e.target.intersectedGraphic=null,e.target.visible=void 0;Q[12]=r.points.observer[0],Q[13]=r.points.observer[1],Q[14]=r.points.observer[2],g(W,W,r.points.observer),g(B,B,r.points.observer),g($,$,r.points.observer),e.engine.visualization.visibleLineVisualElement.geometry=null,e.engine.visualization.occludedLineVisualElement.geometry=null,e.engine.visualization.undefinedLineVisualElement.geometry=null;const d=this.configuration;return e.isValid?(e.point.manipulator.state=e.isTargetVisible?16:32,e.isTargetVisible?(e.engine.visualization.visibleLineVisualElement.geometry=[[[W[0],W[1],W[2]],[B[0],B[1],B[2]]]],e.engine.visualization.visibleLineVisualElement.transform=Q,e.engine.visualization.visibleLineVisualElement.color=l.toUnitRGBA(d.lineOfSightVisibleOuterColor)):(e.engine.visualization.visibleLineVisualElement.geometry=[[[W[0],W[1],W[2]],[$[0],$[1],$[2]]]],e.engine.visualization.visibleLineVisualElement.transform=Q,e.engine.visualization.visibleLineVisualElement.color=l.toUnitRGBA(d.lineOfSightOccludedOuterColor),e.engine.visualization.occludedLineVisualElement.geometry=[[[$[0],$[1],$[2]],[B[0],B[1],B[2]]]],e.engine.visualization.occludedLineVisualElement.transform=Q)):(e.point.manipulator.state=64,e.engine.visualization.undefinedLineVisualElement.geometry=[[[W[0],W[1],W[2]],[B[0],B[1],B[2]]]],e.engine.visualization.undefinedLineVisualElement.transform=Q),e.isDirty=!1,!0}};e([r({constructOnly:!0})],x.prototype,"view",void 0),e([r({constructOnly:!0})],x.prototype,"model",void 0),e([r({readOnly:!0})],x.prototype,"state",null),e([r({readOnly:!0})],x.prototype,"cursor",null),e([r({readOnly:!0})],x.prototype,"isSupported",null),e([r({type:j})],x.prototype,"configuration",void 0),e([r({readOnly:!0})],x.prototype,"updating",void 0),e([r()],x.prototype,"_showTracker",void 0),x=e([s("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],x);const N=h(),W=h(),B=h(),$=h(),q=h(),J=k(),K=h(),Q=I(),X=R.create();export{F as LineOfSightTargetCollection,x as LineOfSightTool};
