/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{neverReached as e}from"../../../core/compilerUtils.js";import{isSome as t,isNone as i,unwrapOr as s,unwrap as n}from"../../../core/maybe.js";import{once as o}from"../../../core/accessorSupport/utils.js";import r from"../../../geometry/Point.js";import"../../../geometry.js";import a from"../../../core/Evented.js";import{deg2rad as c}from"../../../core/mathUtils.js";import{createScreenPointArray as l,createRenderScreenPointArray3 as h,screenPointObjectToArray as d,castRenderScreenPointArray as _}from"../../../core/screenUtils.js";import{c as u,Z as g}from"../../../chunks/vec3f64.js";import{b as m,t as f,i as p,a as b,g as v,h as y,s as j,f as L}from"../../../chunks/vec3.js";import{getReferenceEllipsoid as S}from"../../../geometry/projectionEllipsoid.js";import{c as R,d as w,m as O,i as T}from"../../../chunks/mat4.js";import{containsPointObject as E}from"../../../geometry/support/aaBoundingRect.js";import{canProjectWithoutEngine as A,projectPoint as D,sphericalPCPFtoLonLatElevation as P,computeLatLonToENURotation as F}from"../../../geometry/projection.js";import{a as z}from"../../../chunks/mat3f64.js";import{a as k}from"../../../chunks/mat4f64.js";import{f as I}from"../../../chunks/mat3.js";import{j as M}from"../../../chunks/vec2.js";import{getElevationAtPoint as C}from"../support/ElevationProvider.js";import{sv3d as x}from"../support/stack.js";import{ray as B,plane as W,lineSegment as V}from"../support/geometryUtils.js";import{Object3D as H}from"../webgl-engine/lib/Object3D.js";import U from"../webgl-engine/lib/Camera.js";import{clonePoint as G}from"../../../layers/graphics/hydratedFeatures.js";import{WebGLLayer as N}from"../webgl-engine/lib/WebGLLayer.js";class Z{constructor(e){this.idHint=0,this.camera=new U,this._elevation={offset:0,override:null},this.collisionType={type:"point"},this.collisionPriority=0,this._renderObjects=[],this.autoScaleRenderObjects=!0,this._available=!0,this._noDisplayCount=0,this._radius=10,this._worldSized=!1,this.focusMultiplier=2,this.touchMultiplier=2.5,this.worldOriented=!1,this._modelTransform=k(),this._worldFrame=null,this._renderLocation=u(),this._renderLocationDirty=!0,this._location=new r({x:0,y:0,z:0}),this._elevationAlignedLocation=new r,this._elevationAlignedLocationDirty=!0,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.cursor=null,this._grabbing=!1,this.dragging=!1,this._hovering=!1,this._selected=!1,this._state=0,this._focused=!1,this.events=new a.EventEmitter,this._screenLocation={screenPointArray:l(),renderScreenPointArray:h(),pixelSize:0},this._screenLocationDirty=!0,this._applyObjectTransform=null,this._engineResourcesAddedToStage=!1,this._engineResources=null,this._attached=!1,this._engineLayer=null,this._materialIdReferences=null,this._location.spatialReference=e.view.spatialReference;for(const t in e)this[t]=e[t];this.view.state&&this.view.state.camera&&this.camera.copyFrom(this.view.state.camera)}destroy(){this._removeResourcesFromStage(),this._engineResources=null,this.view=null,this.camera=null}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this._elevationAlignedLocationDirty=!0,this._renderLocationDirty=!0,this._updateEngineObject()}get renderObjects(){return this._renderObjects}set renderObjects(e){this._removeResourcesFromStage(),this._engineResources=null,this._renderObjects=e.slice(),this._updateEngineObject()}set available(e){e!==this._available&&(this._available=e,this._updateEngineObject())}get available(){return this._available}disableDisplay(){return this._noDisplayCount++,1===this._noDisplayCount&&this._updateEngineObject(),{remove:o((()=>{this._noDisplayCount--,0===this._noDisplayCount&&this._updateEngineObject()}))}}set radius(e){e!==this._radius&&(this._radius=e,this._updateEngineObject())}get radius(){return this._radius}set worldSized(e){e!==this._worldSized&&(this._worldSized=e,this._updateEngineObject())}get worldSized(){return this._worldSized}get modelTransform(){return this._modelTransform}set modelTransform(e){q(e)&&(this._screenLocationDirty=!0),R(this._modelTransform,e),this._updateEngineObject()}get renderLocation(){return this._renderLocationDirty&&(this._renderLocationDirty=!1,this.view.renderCoordsHelper.toRenderCoords(this.elevationAlignedLocation,this._renderLocation),this.worldOriented?(this._worldFrame||(this._worldFrame=k()),J(this.view,this._renderLocation,this._worldFrame)):this._worldFrame&&(this._worldFrame=null)),this._renderLocation}set renderLocation(e){this.view.renderCoordsHelper.fromRenderCoords(e,this._location),this.elevationAlignedLocation=this._location}get location(){return this._location}set location(e){G(e,this._location),this._renderLocationDirty=!0,this._screenLocationDirty=!0,this._elevationAlignedLocationDirty=!0,this._updateEngineObject(),this.events.emit("location-update",{location:this._location})}get elevationAlignedLocation(){return this._elevationAlignedLocationDirty?(this._evaluateElevationAlignment(),this._updateElevationAlignedLocation(),this._elevationAlignedLocation):this._elevationAlignedLocation}set elevationAlignedLocation(e){G(e,this._location),this._evaluateElevationAlignment(),this._location.z-=this._elevation.offset,this._updateElevationAlignedLocation(),this._updateEngineObject(),this.events.emit("location-update",{location:this._location})}_updateElevationAlignedLocation(){this._elevationAlignedLocation.x=this.location.x,this._elevationAlignedLocation.y=this.location.y;const e=t(this._elevation.override)?this._elevation.override:this.location.z||0;this._elevationAlignedLocation.z=e+this._elevation.offset,this._elevationAlignedLocation.spatialReference=this.location.spatialReference,this._renderLocationDirty=!0,this._screenLocationDirty=!0,this._elevationAlignedLocationDirty=!1}grabbableForEvent(){return!0}get grabbing(){return this._grabbing}set grabbing(e){e!==this._grabbing&&(this._grabbing=e,this._setFocused(this._hovering||this._grabbing),this._updateEngineObject())}get hovering(){return this._hovering}set hovering(e){e!==this._hovering&&(this._hovering=e,this._setFocused(this._hovering||this._grabbing),this._updateEngineObject())}get selected(){return this._selected}set selected(e){e!==this._selected&&(this._selected=e,this._updateEngineObject(),this.events.emit("select-changed",{action:e?"select":"deselect"}))}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,this._updateEngineObject())}updateStateEnabled(e,t){t?this.state|=e:this.state&=~e}_setFocused(e){e!==this._focused&&(this._focused=e,this.events.emit("focus-changed",{action:!0===e?"focus":"unfocus"}))}get focused(){return this._focused}get screenLocation(){return this.ensureScreenLocation(),this._screenLocation}ensureScreenLocation(){if(!this._screenLocationDirty)return;this._screenLocation.pixelSize=this.camera.computeScreenPixelSizeAt(this.renderLocation),this._screenLocationDirty=!1;let e;if(q(this._modelTransform)){const t=this._calculateModelTransformOffset(ae);e=m(t,t,this.renderLocation)}else e=this.renderLocation;this.camera.projectToRenderScreen(e,this._screenLocation.renderScreenPointArray),this.camera.renderToScreen(this._screenLocation.renderScreenPointArray,this._screenLocation.screenPointArray)}get applyObjectTransform(){return this._applyObjectTransform}set applyObjectTransform(e){this._applyObjectTransform=e,this._screenLocationDirty=!0,this._updateEngineObject()}intersectionDistance(t,s){if(!this.available)return null;const n=d(t,K),o=this._getCollisionRadius(s),r=-1*this.collisionPriority;switch(this.collisionType.type){case"point":if(M(this.screenLocation.screenPointArray,n)<o*o)return this.screenLocation.renderScreenPointArray[2]+r;break;case"line":{const e=this.collisionType.paths,t=this._getWorldToScreenObjectScale(),s=this._calculateObjectTransform(t,ee),a=o*this.screenLocation.pixelSize,c=B.fromScreen(this.camera,n,X);if(i(c))return null;for(const i of e){if(0===i.length)continue;const e=p(ie,i[0],s);for(let t=1;t<i.length;t++){const n=p(se,i[t],s),o=V.closestRayDistance2(V.fromPoints(e,n,Q),c);if(null!=o&&o<a*a){const t=m(x.get(),e,n);b(t,t,.5);const i=_(x.get());return this.camera.projectToRenderScreen(t,i),i[2]+r}v(e,n)}}break}case"disc":{var a;const e=this.collisionType.direction,t=null!=(a=this.collisionType.offset)?a:g,s=this._getWorldToScreenObjectScale(),c=this._calculateObjectTransform(s,ee),l=o*this.screenLocation.pixelSize,h=B.fromScreen(this.camera,n,X);if(i(h))return null;const d=I(Y,c),_=f(oe,e,d),u=p(re,t,c);W.fromPositionAndNormal(u,_,te);const m=ne;if(W.intersectRay(te,h,m)&&y(m,u)<l*l)return this.screenLocation.renderScreenPointArray[2]+r;break}case"ribbon":{const{paths:e,direction:t}=this.collisionType,s=this._getWorldToScreenObjectScale(),a=this._calculateObjectTransform(s,ee),c=o*this.camera.computeScreenPixelSizeAt(this.renderLocation),l=B.fromScreen(this.camera,n,X);if(i(l))return null;const h=I(Y,a),d=f(oe,t,h),u=this._calculateModelTransformPosition(re);W.fromPositionAndNormal(u,d,te);const g=ne;if(!W.intersectRay(te,l,g))break;for(const i of e){if(0===i.length)continue;const e=p(ie,i[0],a);for(let t=1;t<i.length;t++){const s=p(se,i[t],a),n=V.distance2(V.fromPoints(e,s,Q),g);if(null!=n&&n<c*c){const t=m(x.get(),e,s);b(t,t,.5);const i=_(x.get());return this.camera.projectToRenderScreen(t,i),i[2]+r}v(e,s)}}break}default:e(this.collisionType)}return null}attach(e={manipulator3D:{}}){var t;if(!this.view._stage)return;const s=e.manipulator3D;if(i(s.engineLayerId)){const e=new N({isPickable:!1});this.view._stage.add(e),s.engineLayerId=e.id,this._engineLayer=e}else null!=(t=this.view._stage)&&t.getObject&&(this._engineLayer=this.view._stage.getObject(s.engineLayerId));s.engineLayerReferences=(s.engineLayerReferences||0)+1,this._materialIdReferences=s.materialIdReferences,i(this._materialIdReferences)&&(this._materialIdReferences=new Map,s.materialIdReferences=this._materialIdReferences),this.camera.copyFrom(this.view.state.camera),this._attached=!0,this._updateEngineObject(),A(this._location.spatialReference,this.view.spatialReference)||(this.location=new r({x:0,y:0,z:0,spatialReference:this.view.spatialReference}))}detach(e={manipulator3D:{}}){const t=e.manipulator3D;t.engineLayerReferences--;const i=0===t.engineLayerReferences;i&&(t.engineLayerId=null),this._removeResourcesFromStage(i),this._engineResources=null,this._engineLayer=null,this._materialIdReferences=null,this._attached=!1}onViewChange(){this.camera.copyFrom(this.view.state.camera),this._screenLocationDirty=!0,this._updateEngineObject()}onElevationChange(e){D(this.location,ce,e.spatialReference),E(e.extent,ce)&&(this.location=this._location)}_evaluateElevationAlignment(e=this.location){if(i(this.elevationInfo))return!1;let t=null,n=0;const o=s(this.elevationInfo.offset,0);switch(this.elevationInfo.mode){case"on-the-ground":t=s(C(this.view.elevationProvider,e,"ground"),0);break;case"relative-to-ground":n=s(C(this.view.elevationProvider,e,"ground"),0)+o;break;case"relative-to-scene":n=s(C(this.view.elevationProvider,e,"scene"),0)+o;break;case"absolute-height":n=o}return(n!==this._elevation.offset||t!==this._elevation.override)&&(this._elevation.offset=n,this._elevation.override=t,!0)}_updateEngineObject(){if(!this._attached)return;if(!this.available)return void this._removeResourcesFromStage();const e=this._getWorldToScreenObjectScale(),i=ee;if(!0===this.autoScaleRenderObjects){const t=this._getFocusedSize(this._radius,this.focused)*e;this._calculateObjectTransform(t,i)}else this._calculateObjectTransform(e,i);const{objectsByState:s}=this._ensureEngineResources(),n=(this.focused?2:1)|(this.selected?8:4),o=this._noDisplayCount>0;for(const{stateMask:t,objects:r}of s){if(o){for(const e of r)e.setVisible(!1);continue}const e=!(0!=(15&t))||(n&t)==(15&t),s=!(0!=(65520&t))||(this.state&t)==(65520&t);if(e&&s)for(const t of r)t.setVisible(!0),t.transformation=i;else for(const t of r)t.setVisible(!1)}t(this._engineLayer)&&this._engineLayer.commit()}_ensureEngineResources(){if(i(this._engineResources)){const e=n(this._engineLayer),t=[],i=new Set;this.renderObjects.forEach((({material:e})=>{i.has(e)||(t.push(e),i.add(e))}));const s=(e,t)=>{const{geometry:i,material:s,transform:n}=t;Array.isArray(i)?i.forEach((t=>e.addGeometry(t,s,n))):e.addGeometry(i,s,n)},o=new Map;this._renderObjects.forEach((e=>{const t=new H({castShadow:!1});s(t,e);const i=e.stateMask||0,n=o.get(i)||[];n.push(t),o.set(i,n)}));const r=[];o.forEach(((e,t)=>r.push({stateMask:t,objects:e}))),this._engineResources={objectsByState:r,layer:e,materials:t}}return this._addResourcesToStage(),this._engineResources}_addResourcesToStage(){if(this._engineResourcesAddedToStage||i(this._engineResources))return;const{objectsByState:e,layer:t,materials:s}=this._engineResources;s.forEach((e=>{const t=n(this._materialIdReferences),i=t.get(e.id)||0;0===i&&this.view._stage.add(e),t.set(e.id,i+1)})),e.forEach((({objects:e})=>e.forEach((e=>{t.add(e),this.view._stage.add(e)})))),this._engineResourcesAddedToStage=!0}_removeResourcesFromStage(e=!1){if(!this._engineResourcesAddedToStage||i(this._engineResources))return;const{objectsByState:t,layer:s,materials:o}=this._engineResources;t.forEach((({objects:e})=>{s.removeMany(e),this.view._stage.removeMany(e)})),o.forEach((e=>{const t=n(this._materialIdReferences),i=t.get(e.id);1===i?(this.view._stage.remove(e),t.delete(e.id)):t.set(e.id,i-1)})),e&&this.view._stage.remove(s),this._engineResourcesAddedToStage=!1}_getCollisionRadius(e){return this._getFocusedSize(this.radius,!0)*("touch"===e?this.touchMultiplier:1)}_getFocusedSize(e,t){return e*(t?this.focusMultiplier:1)}_getWorldToScreenObjectScale(){return this._worldSized?1:this.screenLocation.pixelSize}_calculateModelTransformPosition(e){const t=this._getWorldToScreenObjectScale(),i=this._calculateObjectTransform(t,$);return j(e,i[12],i[13],i[14])}_calculateModelTransformOffset(e){const t=this._calculateModelTransformPosition(e);return L(e,t,this.renderLocation)}_calculateObjectTransform(e,i){return w(i,e,0,0,0,0,e,0,0,0,0,e,0,0,0,0,1),this._worldFrame&&O(i,i,this._worldFrame),O(i,i,this._modelTransform),i[12]+=this.renderLocation[0],i[13]+=this.renderLocation[1],i[14]+=this.renderLocation[2],i[15]=1,t(this._applyObjectTransform)&&this._applyObjectTransform(i),i}get test(){let e=!1;if(t(this._engineResources))for(const t in this._engineResources.objectsByState){const i=this._engineResources.objectsByState[t];for(const t of i.objects)if(t.isVisible){e=!0;break}if(e)break}return{areAnyResourcesVisible:e}}}function q(e){return 0!==e[12]||0!==e[13]||0!==e[14]}function J(e,t,i){switch(e.viewingMode){case"local":return T(i),!0;case"global":{const s=S(e.renderCoordsHelper.spatialReference);return P(t,0,ie,0,s.radius),F(c(ie[1]),c(ie[0]),i),!0}}}const K=l(),Q=V.create(),X=B.create(),Y=z(),$=k(),ee=k(),te=W.create(),ie=u(),se=u(),ne=u(),oe=u(),re=u(),ae=u(),ce=new r({x:0,y:0,z:0,spatialReference:null});export{Z as Manipulator3D};
