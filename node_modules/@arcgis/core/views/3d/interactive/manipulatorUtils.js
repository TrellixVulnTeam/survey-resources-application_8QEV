/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t}from"../../../core/maybe.js";import{f as r,c as n,i as o,n as i}from"../../../chunks/vec3.js";import{a}from"../../../chunks/mat4.js";import{b as c}from"../../../chunks/vec4f64.js";import{sv3d as s,sm4d as m}from"../support/stack.js";import l from"../webgl-engine/lib/GeometryUtil.js";import{hydrateGeometry as u}from"../../../layers/graphics/hydratedFeatures.js";import{computeCentroid as p}from"../layers/graphics/graphicUtils.js";import{ColorMaterial as g}from"../webgl-engine/materials/ColorMaterial.js";import{Manipulator3D as f}from"./Manipulator3D.js";import{ShadedColorMaterial as h}from"../webgl-engine/materials/ShadedColorMaterial.js";function d(e,t=4){const r=c(e[0],e[1],e[2],e.length>3?e[3]:1),n=e[3]<1;return new h({color:r,transparent:n,writeDepth:!0,cullFace:2,renderOccluded:t})}function j(e,t=4){const r=c(e[0],e[1],e[2],4===e.length?e[3]:1);return new g({color:r,transparent:!0,writeDepth:!0,cullFace:1,renderOccluded:t})}function w(e,t,r){return new f({view:e,renderObjects:[{geometry:l.createSphereGeometry(1,32,32),material:d(c(t[0],t[1],t[2],null!=r?r:1))}]})}function y(e,t,i,c){const l=r(s.get(),e,i),u=b(l,n(s.get(),c,l),i,m.get());a(u,u);const p=o(s.get(),t,u);return Math.atan2(p[1],p[0])}function b(e,t,r,o){const a=i(s.get(),e),c=i(s.get(),t),m=n(s.get(),a,c);return o[0]=a[0],o[1]=a[1],o[2]=a[2],o[3]=0,o[4]=c[0],o[5]=c[1],o[6]=c[2],o[7]=0,o[8]=m[0],o[9]=m[1],o[10]=m[2],o[11]=0,o[12]=r[0],o[13]=r[1],o[14]=r[2],o[15]=1,o}function O(t,r){const n=t.getViewForGraphic(r);return e(n)&&"computeAttachmentOrigin"in n?n.computeAttachmentOrigin(r,t.spatialReference):null}function k(t,r,n){const o=O(t,n);e(o)?r.elevationAlignedLocation=o:v(r,n.geometry)}function v(e,r){if(t(r))return;const n=p(r);t(n)||(e.location=u(n))}export{y as calculateInputRotationTransform,b as calculateTranslateRotateFromBases,d as createManipulatorMaterial,j as createManipulatorOutlineMaterial,w as createSphereManipulator,O as getGraphicAttachmentOrigin,k as placeAtGraphic};
