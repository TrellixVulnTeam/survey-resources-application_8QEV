/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t}from"../../../../core/maybe.js";import{clamp as r,nextHighestPowerOfTwo as i}from"../../../../core/mathUtils.js";import{c as s}from"../../../../chunks/vec3f64.js";import{s as o}from"../../../../chunks/vec3.js";import{projectVectorToVector as n}from"../../../../geometry/projection.js";import{b as a}from"../../../../chunks/vec4f64.js";import{g as l,c as u}from"../../../../chunks/vec4.js";import{expandWithBuffer as c}from"../../../../geometry/support/aaBoundingBox.js";import{sv3d as h}from"../../support/stack.js";import m from"../../webgl-engine/lib/GeometryUtil.js";import{HUDMaterial as p}from"../../webgl-engine/materials/HUDMaterial.js";import{evaluateElevationAlignmentAtPoint as g}from"../../layers/graphics/elevationAlignmentUtils.js";import{ElevationContext as d}from"../../layers/graphics/ElevationContext.js";import{createType as f}from"../../layers/graphics/sdfPrimitives.js";import{Texture as y}from"../../webgl-engine/lib/Texture.js";import{VisualElementResources as _}from"./VisualElementResources.js";class v{constructor(t){this.view=null,this._geometry=null,this._size=3,this._color=a(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=a(1,1,1,1),this._elevationInfo=null,this.resources=new _({view:t.view,createResources:e=>this.createResources(e),recreateGeometry:(t,r)=>(t.geometry=this.recreateGeometry(r,t.material),e(t.geometry)?[t.geometry]:[])});let r=!0;for(const e in t)e in this?"attached"===e?r=t[e]:this[e]=t[e]:console.error("Cannot set unknown property",e);this.attached=r}destroy(){this.resources.destroy()}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e}get attached(){return this.resources.attached}set attached(e){this.resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry()}get size(){return this._size}set size(t){if(t!==this._size){const r=this.preferredTextureSize;this._size=t,r<this.preferredTextureSize?e(this.resources)&&this.resources.recreate():this.updateSizeAttribute()}}get color(){return this._color}set color(e){l(e,this._color)||(u(this._color,e),this.updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this.updateMaterial())}get primitive(){return this._primitive}set primitive(t){this._primitive!==t&&(this._primitive=t,e(this.resources)&&this.resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this.updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){l(e,this._outlineColor)||(u(this._outlineColor,e),this.updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources&&this.resources.recreateGeometry()}updateMaterial(){const e=this.resources.resources;t(e)||e.material.setParameterValues(this.materialParameters(e.texture.id))}updateSizeAttribute(){const e=this.resources.resources,r=this.resources.object;if(t(e)||t(r))return;const i=e.geometry;if(t(i))return;const s=i.getMutableAttribute("size").data,o=this.geometrySize;s[0]=o,s[1]=o,r.geometryVertexAttrsUpdated(0)}materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:b,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get geometrySize(){return this._size/S}recreateGeometry(t,r){const i=this.createRenderGeometry();return e(i)&&t.addGeometry(i,r),i}createResources(t){const r=this.createTexture(),i=new p(this.materialParameters(r.id)),s=this.recreateGeometry(t,i);return{material:i,texture:r,geometry:s,forEach(t){t(r),t(i),e(this.geometry)&&t(this.geometry)}}}get preferredTextureSize(){return r(i(2*this.geometrySize),16,128)}createTexture(){const e=this.preferredTextureSize;return new y(f(this._primitive,e,e*S),{mipmap:!1,wrap:{s:33071,t:33071},width:e,height:e,components:4,noUnpackFlip:!0})}calculateMapBounds(e){if(t(this.resources.resources)||t(this.resources.resources.geometry))return!1;const r=this.resources.resources.geometry.vertexAttributes.get("position");return n(r.data,this.view.renderCoordsHelper.spatialReference,x,this.view.spatialReference),c(e,x),!0}createRenderGeometry(){const e=this.geometry;if(t(e))return null;const{renderCoordsHelper:r,elevationProvider:i}=this.view,s=g(e,i,d.fromElevationInfo(this.elevationInfo),r),a=o(h.get(),e.x,e.y,s),l=h.get();n(a,e.spatialReference,l,r.spatialReference);const u=this.geometrySize;return m.createPointGeometry(null,l,null,[u,u],[0,0,0,1])}}const S=.5,b=[S/2,S/2,1-S/2,1-S/2],x=s();export{v as PointVisualElement};
