/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{c as e}from"../../../../../chunks/vec3f64.js";import{e as t,f as s,n as r,g as i,b as n}from"../../../../../chunks/vec3.js";import{slerpTangent as c,slerp as p}from"../../../support/mathUtils.js";import{getSphericalPCPF as o}from"../../../../../geometry/projectionEllipsoid.js";import{canProjectWithoutEngine as a,projectVectorToVector as h}from"../../../../../geometry/projection.js";import{sv3d as d}from"../../../support/stack.js";class _{constructor(t=e(),s=e()){this.startRenderSpace=t,this.endRenderSpace=s,this.type="euclidean"}eval(e,i,n){return t(i,this.startRenderSpace,this.endRenderSpace,e),n&&(s(n,this.endRenderSpace,this.startRenderSpace),r(n,n)),i}createRenderGeometry(e,t){const r=[],i=[],n=(t,n)=>{const c=u;s(c,t,e),r.push([c[0],c[1],c[2]]),i.push([n[0],n[1],n[2]])},c=t.worldUpAtPosition(this.eval(.5,m),d.get());return n(this.startRenderSpace,c),n(this.endRenderSpace,c),{points:r,normals:i}}}class f{constructor(t,s,r){this.startRenderSpace=t,this.endRenderSpace=s,this.renderSpatialReference=r,this.type="geodesic",this._start=e(),this._end=e(),this._pcpf=o(r),this._project=a(r,this._pcpf),this._projectIn(t,this._start),this._projectIn(s,this._end)}_projectIn(e,t){this._project?h(e,this.renderSpatialReference,t,this._pcpf):i(t,e)}eval(e,i,o){if(this._project)if(o){const t=u;c(this._start,this._end,e,i,t),n(R,i,t),h(i,this._pcpf,i,this.renderSpatialReference),h(R,this._pcpf,R,this.renderSpatialReference),s(o,R,i),r(o,o)}else p(this._start,this._end,e,i),h(i,this._pcpf,i,this.renderSpatialReference);else t(i,this._start,this._end,e),o&&(s(o,this._end,this._start),r(o,o));return i}createRenderGeometry(e,t){const r=[],i=[],n=(t,n)=>{const c=R;s(c,t,e),r.push([c[0],c[1],c[2]]),i.push([n[0],n[1],n[2]])},c=128+1&-2;for(let s=0;s<c;++s){const e=s/(c-1),r=m,i=u;this.eval(e,r),t.worldUpAtPosition(r,i),n(r,i)}return{points:r,normals:i}}}function l(e,t,s,r){switch(e){case"euclidean":return new _(t,s);case"geodesic":return new f(t,s,r)}}const m=e(),u=e(),R=e();export{_ as EuclideanSegment,f as GeodesicSegment,l as createSegment};
