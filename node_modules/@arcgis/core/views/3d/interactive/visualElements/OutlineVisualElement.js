/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e,unwrap as t,isNone as r}from"../../../../core/maybe.js";import s from"../../../../core/Evented.js";import{c as i}from"../../../../chunks/vec3f64.js";import{s as a,b as o,a as n}from"../../../../chunks/vec3.js";import{projectBuffer as l}from"../../../../geometry/projection.js";import{g as h,c,s as d}from"../../../../chunks/vec4.js";import{empty as u,expandWithBuffer as p,create as m}from"../../../../geometry/support/aaBoundingBox.js";import{f,a as g}from"../../../../chunks/vec4f32.js";import{makeDehydratedPoint as _}from"../../../../layers/graphics/dehydratedFeatures.js";import{computeAttachmentOriginLines as y}from"../../webgl-engine/lib/geometryDataUtils.js";import{ElevationContext as v}from"../../layers/graphics/ElevationContext.js";import{RibbonLineMaterial as O}from"../../webgl-engine/materials/RibbonLineMaterial.js";import{RenderGeometry as w}from"../../webgl-engine/lib/RenderGeometry.js";import{geometryToRenderInfoDraped as C,createGeometry as R,geometryToRenderInfo as b}from"../../layers/graphics/lineUtils.js";import{LaserlineVisualElement as D}from"./LaserlineVisualElement.js";import{VisualElementResources as j}from"./VisualElementResources.js";import{DrapedVisualElementResources as P}from"./DrapedVisualElementResources.js";class E{constructor(e){this.view=null,this._attachmentOrigin=_(0,0,0,null),this._attachmentOriginDirty=!0,this.events=new s,this._isDraped=!1,this._geometry=null,this._width=1,this._color=f(1,0,1,1),this._innerWidth=0,this._innerColor=f(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._falloff=0,this._elevationInfo=null,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=8,this.resources=new j({view:e.view,createResources:e=>this.createResources(e),recreateGeometry:(e,t)=>(e.geometries.length=0,this.recreateGeometry(t,e.material,e.geometries),e.geometries)}),this._attachmentOrigin.spatialReference=e.view.spatialReference,this.drapedResources=new P({view:e.view,createResources:()=>this.createDrapedResources(),recreateGeometry:e=>{e.geometries=this.createRenderGeometriesDraped(e.material),this.attachmentOriginChanged()}});let t=!0;this._laserline=new D({view:e.view});for(const r in e)r in this?"attached"===r?t=e[r]:this[r]=e[r]:console.error("Cannot set unknown property",r);this.attached=t}destroy(){this.resources.destroy(),this.drapedResources.destroy(),this._laserline.destroy()}get isDraped(){return this._isDraped}set isDraped(e){e!==this._isDraped&&(this._isDraped=e,this.updateAttached(this.attached),this._laserline.attached=this.laserlineAttached)}get laserlineAttached(){return this.attached&&this.visible&&e(this._laserlineStyle)&&!this.isDraped&&this.laserlineEnabled}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e,this.drapedResources.visible=e,this._laserline.attached=this.laserlineAttached}get attached(){return this.resources.attached||this.drapedResources.attached}set attached(e){this.updateAttached(e)}updateAttached(e){this.resources.attached=!this.isDraped&&e,this.drapedResources.attached=this.isDraped&&e,this._laserline.attached=this.laserlineAttached,this.attached&&this.attachmentOriginChanged()}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry(),this.drapedResources.recreateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this.updateMaterial())}get color(){return this._color}set color(e){h(e,this._color)||(c(this._color,e),this.updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this.updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){h(e,this._innerColor)||(c(this._innerColor,e),this.updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(t){const r=e(t)!==e(this._stipplePattern);this._stipplePattern=t,r?this.resources.recreate():this.updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){e&&this._stippleOffColor&&h(e,this._stippleOffColor)||(this._stippleOffColor=e?g(e):null,this.updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this.updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources.recreateGeometry()}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(t){this._laserlineStyle=t,this._laserline.attached=this.laserlineAttached,e(t)&&(this._laserline.style=t)}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,this._laserline.attached=this.laserlineAttached)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get attachmentOrigin(){if(!this._attachmentOriginDirty)return this._attachmentOrigin;const r=e(this.resources.resources)?this.resources.resources.geometries:null;if(!r||0===r.length)return null;a(M,0,0,0);let s=0;for(const e of r){const r=e.vertexAttributes.get("position"),i=e.indices.get("position"),a=t(this.resources.resources).material.isClosed(r.data,i);y(r,i,a,A)&&(o(M,M,A),s++)}return 0===s?null:(n(M,M,1/s),this.view.renderCoordsHelper.fromRenderCoords(M,this._attachmentOrigin),this._attachmentOriginDirty=!1,this._attachmentOrigin)}updateMaterial(){e(this.resources.resources)&&this.resources.resources.material.setParameterValues(this.materialParameters),e(this.drapedResources.resources)&&this.drapedResources.resources.material.setParameterValues(this.materialParameters)}get isClosed(){return e(this.geometry)&&"polygon"===this.geometry.type}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,isClosed:this.isClosed,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,join:"round",stippleIntegerRepeats:!0,polygonOffset:!0,renderOccluded:this.normalizedRenderOccluded}}get normalizedRenderOccluded(){return this.isDraped&&8===this._renderOccluded?4:this._renderOccluded}recreateGeometry(e,t,r){const s=this.createRenderGeometries();for(const i of s)e.addGeometry(i,t),r.push(i);this.attachmentOriginChanged()}attachmentOriginChanged(){this._attachmentOriginDirty=!0,this.events.emit("attachment-origin-changed")}createResources(e){const t=new O(this.materialParameters),r=[];return this.recreateGeometry(e,t,r),{material:t,geometries:r,forEach:e=>{e(t),r.forEach(e)}}}createDrapedResources(){const e=new O(this.materialParameters);return{material:e,geometries:this.createRenderGeometriesDraped(e)}}createRenderGeometriesDraped(e){const t=this.geometry;if(r(t))return[];const s=C(t,this.view.basemapTerrain.spatialReference),i=[];for(const{position:r}of s.lines){const t={attributeData:{position:r},removeDuplicateStartEnd:this.isClosed?1:0},s=new w(R(t),e),a=u(G);p(a,r),d(s.boundingSphere,.5*(a[0]+a[3]),.5*(a[1]+a[4]),0,.5*Math.sqrt((a[3]-a[0])*(a[3]-a[0])+(a[4]-a[1])*(a[4]-a[1]))),i.push(s)}return i}calculateMapBounds(e){if(r(this.resources.resources))return!1;const t=this.view.renderCoordsHelper;for(const r of this.resources.resources.geometries){const s=r.vertexAttributes.get("position"),i=new Float64Array(s.data.length);l(s.data,t.spatialReference,0,i,this.view.spatialReference,0,s.data.length/3),p(e,i)}return!0}createRenderGeometries(){const e=this.geometry;if(r(e))return[];const t=b(e,this.view.elevationProvider,this.view.renderCoordsHelper,v.fromElevationInfo(this.elevationInfo)),s=[],i=[];for(const{position:r,mapPosition:a}of t.lines){const e={attributeData:{position:r,mapPosition:a},removeDuplicateStartEnd:this.isClosed?1:0};s.push(R(e)),i.push(r)}return this._laserline.pathVerticalPlane=i,s}}const G=m(),A=i(),M=i();export{E as OutlineVisualElement};
