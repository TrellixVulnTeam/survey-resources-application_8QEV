/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import"../../../../../core/has.js";import{unwrap as e,isSome as i,isNone as a}from"../../../../../core/maybe.js";import"../../../../../core/Logger.js";import"../../../../../core/accessorSupport/ensureType.js";import{makeHandle as n}from"../../../../../core/handleUtils.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../../../core/accessorSupport/decorators/subclass.js";import"../../../../../core/urlUtils.js";import"../../../../../core/uuid.js";import"../../../../../portal/support/resourceExtension.js";import r from"../../../../../core/Evented.js";import l from"../../../../../core/Collection.js";import p from"../../../../../core/Handles.js";import{getGraphicEffectiveElevationInfo as h,getConvertedElevation as c}from"../../../../../support/elevationInfoUtils.js";import{makeDehydratedPoint as m}from"../../../../../layers/graphics/dehydratedFeatures.js";import{EditGeometry as u}from"../../../../interactive/editGeometry/EditGeometry.js";import{EditGeometryHelper as d}from"../../../../interactive/editGeometry/EditGeometryHelper.js";import{SnappingContext as g}from"../../../../interactive/snapping/SnappingContext.js";import{dragGraphicMany as v,resetGraphicMany as f}from"../../../../interactive/dragEventPipeline.js";import{SnappingPipeline as y}from"../../SnappingDragPipelineStep.js";import{SnappingVisualizer3D as M}from"../../SnappingVisualizer3D.js";import{InteractiveToolBase as w}from"../../../../interactive/InteractiveToolBase.js";import{getGraphicAttachmentOrigin as j}from"../../manipulatorUtils.js";import{isSupportedGraphic as _}from"./isSupportedGraphic.js";import{canMoveZ as b}from"../manipulatorUtils.js";import{OutlineVisualElement as x}from"../../visualElements/OutlineVisualElement.js";import{GraphicState as E}from"../../../layers/graphics/GraphicState.js";import{createVisualElements as S}from"../visualElementUtils.js";import{DISC_RADIUS as P}from"../manipulations/config.js";import{shapeOrientation as A}from"../manipulations/moveUtils.js";import{MoveManipulation as D}from"../manipulations/MoveManipulation.js";import{MoveXYGraphicManipulation as G}from"../manipulations/MoveXYGraphicManipulation.js";class z{constructor(t){this.allGraphics=t,this.type="graphic-move-start"}}class X{constructor(t,e,i){this.dx=t,this.dy=e,this.allGraphics=i,this.type="graphic-move"}}class Y{constructor(t){this.allGraphics=t,this.type="graphic-move-stop"}}let O=class extends(r.EventedMixin(w)){constructor(t){super(t),this.graphics=new l,this.enableZ=!0,this.type="move-3d",this._toolHandles=new p,this._handles=new p,this.snappingPipeline=new y}initialize(){this._toolHandles.add([this.graphics.on("change",(()=>this._refreshManipulators()))]),this._refreshManipulators()}destroy(){this._handles.destroy(),this._handles=null,this._toolHandles.destroy(),this._toolHandles=null,this.graphics.removeAll(),this._set("view",null)}reset(){}_refreshManipulators(){this._handles.removeAll(),this._moveManipulation&&this._moveManipulation.destroy(),this.manipulators.removeAll();const t=this.graphics.toArray().filter((t=>0===_(t))).map((t=>new R(t)));t.length&&(this.createManipulators(t),this.createVisualElements(t),this._handles.add(t.map((t=>this.view.trackGraphicState(t.state)))),this.updateMoveManipulation(t))}createManipulators(t){for(const e of t){const i=e.state;e.manipulationXY=new G({tool:this,view:this.view,graphicState:i}),e.manipulationXY.forEachManipulator((t=>this._handles.add(t.events.on("immediate-click",(t=>{this.emit("immediate-click",{...t,graphic:i.graphic}),t.stopPropagation()}))))),this._handles.add(e.manipulationXY.createDragPipeline(((e,i,a,n)=>this.buildDragEventPipeline(t,0,e,i,a,n))))}this.createMoveManipulation(t)}createMoveManipulation(t){const i=new D({tool:this,view:this.view,snapToScene:!1,xyAvailable:!0,xyAxisAvailable:!0,zAvailable:!0,radius:1===t.length?D.radiusForSymbol(t[0].graphic.symbol):P});this._moveManipulation=i,i.elevationInfo={mode:"absolute-height",offset:0},i.forEachManipulator((t=>{this._handles.add(t.events.on("immediate-click",(e=>{i.zManipulation.hasManipulator(t)||1!==this.graphics.length||this.emit("immediate-click",{...e,graphic:this.graphics.getItemAt(0)}),e.stopPropagation()})))}));const a=()=>this.updateMoveManipulation(t);for(const e of t)this._handles.add([e.state.on("changed",a),e.state.watch("displaying",a)]);const n=t[t.length-1];this._handles.add(n.state.on("changed",(()=>this.updateMoveManipulationAngle(n)))),this._handles.add(i.createDragPipeline(((e,i,a,n,o)=>this.buildDragEventPipeline(t,e,i,a,n,o)),h(n.graphic),e(n.graphic.geometry).spatialReference,n.graphic)),this.updateMoveManipulationAngle(n)}createVisualElements(t){for(const e of t){const i=e.graphic,a=S({view:this.view,graphic:i,forEachManipulator:t=>{e.manipulationXY.forEachManipulator(t),this._moveManipulation.forEachManipulator(t)},onManipulatorsChanged:()=>n()});e.geometryRepresentation=a.visualElement,e.geometryRepresentation instanceof x&&this._handles.add([e.geometryRepresentation.events.on("attachment-origin-changed",(()=>{e.state.isDraped||this.updateMoveManipulation(t)})),e.state.watch("isDraped",(()=>this.updateMoveManipulation(t)))]),this._handles.add(a)}}updateMoveManipulationAngle(t){this._moveManipulation.angleDeferred=()=>A(t.graphic.geometry)}updateMoveManipulation(t){const e=m(0,0,0,this.view.spatialReference);let a=0,n=!1;const o=this._moveManipulation;for(const s of t){if(!s.state.displaying)continue;const t=s.state.graphic;this.enableZ&&b(t)&&(n=!0);const o=s.geometryRepresentation instanceof x&&!s.state.isDraped?s.geometryRepresentation.attachmentOrigin:j(this.view,t);i(o)&&(e.x+=o.x,e.y+=o.y,e.z+=o.z,a++)}a>0?(e.x/=a,e.y/=a,e.z/=a,o.location=e,o.xyManipulation.available=!0,o.xyAxisManipulation.available=!0,o.zManipulation.available=n):o.available=!1}buildDragEventPipeline(t,e,i,a,n,o){const s=[],r=[];let l=null,p=null;const c=()=>{for(const t of s)t.dragging=!1;s.length=0,r.length=0,l=null,p=null,this._moveManipulation.interactive=!0};if(1===t.length&&0===e){const e=t[0].graphic;a=this.buildSnappingPipelineSteps(e,h(e),a,n,o)}const m=a.next((e=>{if("start"===e.action){s.length=0,r.length=0;for(const e of t)e.dragging||!e.manipulationXY.hasManipulator(i)&&e.manipulationXY.grabbing||(s.push(e),r.push(e.graphic),e.dragging=!0);if(0!==r.length&&(this._moveManipulation.interactive=!1,l=v(r),p=f(r),this.emit("graphic-move-start",new z(r)),this.destroyed))return null}return 0!==r.length?e:null})).next((t=>l(t))).next((t=>{switch(t.action){case"start":case"update":if(t.translationX||t.translationY||t.translationZ){const e=this.view.toScreen(t.mapStart),i=this.view.toScreen(t.mapEnd),a=i.x-e.x,n=i.y-e.y;if(this.emit("graphic-move",new X(a,n,r)),this.destroyed)return null}break;case"end":if(this.emit("graphic-move-stop",new Y(r)),this.destroyed)return null;c()}}));return n.next((t=>p(t))).next((()=>{if(this.emit("graphic-move-stop",new Y(r)),this.destroyed)return null;c()})),m}buildSnappingPipelineSteps(t,e,i,n,o){const s=t.geometry;if(a(s)||"point"!==s.type)return i;const r=new g({elevationInfo:e,pointer:o,geometry:new d(u.fromGeometry(s,this.view.viewingMode),"point"),visualizer:new M,excludeFeature:t}),l=this.snappingManager;return i.next((e=>{const i=s.clone();i.z=c(this.view,i,h(t),{mode:"absolute-height",offset:0});return{...e,snapOrigin:r.coordinateHelper.fromPoint(i)}})).next(this.snappingPipeline.createSnapDragEventPipelineStep({snappingContext:r,snappingManager:l,cancel:n}),this.snappingPipeline.next)}};t([o({constructOnly:!0,nonNullable:!0})],O.prototype,"view",void 0),t([o({readOnly:!0})],O.prototype,"graphics",void 0),t([o({constructOnly:!0,nonNullable:!0})],O.prototype,"enableZ",void 0),t([o({constructOnly:!0})],O.prototype,"snappingManager",void 0),t([o({readOnly:!0})],O.prototype,"type",void 0),O=t([s("esri.views.3d.interactive.editingTools.graphicMove3D.GraphicMoveTool")],O);class R{constructor(t){this.state=null,this.geometryRepresentation=null,this.manipulationXY=null,this.dragging=!1,this.state=new E({graphic:t})}get graphic(){return this.state.graphic}}export{X as GraphicMoveEvent,z as GraphicMoveStartEvent,Y as GraphicMoveStopEvent,O as GraphicMoveTool};
