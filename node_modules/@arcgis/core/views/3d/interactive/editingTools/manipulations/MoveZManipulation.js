/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{unwrap as t}from"../../../../../core/maybe.js";import e from"../../../../../core/Evented.js";import{clamp as r}from"../../../../../core/mathUtils.js";import{c as a,f as i}from"../../../../../chunks/vec3f64.js";import{w as o,f as s,n,d as l,c as m,a as p}from"../../../../../chunks/vec3.js";import c from"../../../../../core/Handles.js";import{t as u,e as h,s as d}from"../../../../../chunks/mat4.js";import{darken as f}from"../../../../../core/colorUtils.js";import{a as M}from"../../../../../chunks/mat4f64.js";import _ from"../../../webgl-engine/lib/GeometryUtil.js";import{createManipulatorDragEventPipeline as g,addScreenDelta as y}from"../../../../interactive/dragEventPipeline.js";import{screenToZConstrained as j}from"../dragEventPipeline3D.js";import{Manipulator3D as v}from"../../Manipulator3D.js";import{createManipulatorMaterial as w}from"../../manipulatorUtils.js";import{settings as k}from"../settings.js";import{DISC_RADIUS as z}from"./config.js";import{Manipulation as b}from"./Manipulation.js";import{createGraphicMoveDragPipeline as P}from"./moveUtils.js";class x extends b{constructor(t){super(),this._handles=new c,this._radius=z,this.events=new e,this._tool=t.tool,this._view=t.view,null!=t.radius&&(this._radius=t.radius),this.createManipulator(),this.forEachManipulator((t=>this._tool.manipulators.add(t)))}destroy(){this._handles.destroy(),this.forEachManipulator((t=>{this._tool.manipulators.remove(t),t.destroy()}))}forEachManipulator(t){t(this._manipulator,0)}createGraphicDragPipeline(e,r,a){const i=t(r.graphic.geometry).spatialReference;return P(r,a,(t=>this.createDragPipeline(((r,a,i,o,s)=>t(r,e(r,a,i,o,s),i)),i)))}createDragPipeline(t,e){const r=this._view;return g(this._manipulator,((a,i,o,s,n)=>{const l=i.next((t=>({...t,manipulatorType:0}))).next(j(r,a.renderLocation,e)).next(y());t(a,l,o,s,n)}))}get radius(){return this._radius}set radius(t){t!==this._radius&&(this._radius=t,this.updateManipulator())}updateManipulator(){const t=this._radius/z,e=k.zManipulator.height*t,r=k.zManipulator.coneHeight*t,a=k.zManipulator.coneWidth*t,o=k.zManipulator.width*t,s=[i(0,0,0),i(0,0,e)],n=_.createTubeGeometry(s,o/2,16,!1),l=_.createConeGeometry(r,a/2,16,!1),m=[i(0,0,0),i(0,0,e+r)],p=(t=>{const r=M();if(u(r,r,[0,0,e]),h(r,r,Math.PI/2),t){const e=1+2*t/a;d(r,r,[e,e,e])}return r})(0),c=(t,e)=>{const r=f(k.zManipulator.color,e);return[r.r/255,r.g/255,r.b/255,k.zManipulator.color.a*t]},g=w(c(1,.25),1),y=w(c(1,0),1),j=w(c(.7,0),k.zManipulator.renderOccluded),v=w(c(.85,0),k.zManipulator.renderOccluded);this._manipulator.renderObjects=[{geometry:l,transform:p,material:g,stateMask:1},{geometry:n,material:g,stateMask:1},{geometry:l,transform:p,material:y,stateMask:2},{geometry:n,material:y,stateMask:2},{geometry:l,transform:p,material:j,stateMask:1},{geometry:n,material:j,stateMask:1},{geometry:l,transform:p,material:v,stateMask:2},{geometry:n,material:v,stateMask:2}],this._manipulator.radius=o/2+2,this._manipulator.collisionType={type:"line",paths:[m]}}createManipulator(){const t=new v({view:this._view,autoScaleRenderObjects:!1,worldSized:!1,selectable:!1,cursor:"ns-resize",elevationInfo:this.elevationInfo,worldOriented:!0,collisionPriority:1.6});t.applyObjectTransform=t=>{const e=this._view.state.camera,a=D;this._view.renderCoordsHelper.toRenderCoords(this._manipulator.elevationAlignedLocation,a);const i=o(e.eye,a),c=e.computeRenderPixelSizeAtDist(i),u=s(E,a,e.eye);n(u,u);const h=O;this._view.renderCoordsHelper.worldUpAtPosition(D,h);const d=Math.abs(l(u,h)),f=m(E,u,h),M=m(E,f,h),_=r(d,.01,1),g=1-Math.sqrt(1-_*_)/_/e.fullWidth,y=this._radius/z,j=k.zManipulator.width*y;p(M,n(M,M),(1/g-1)*i+c*j),t[12]-=E[0],t[13]-=E[1],t[14]-=E[2]},this._manipulator=t,this.updateManipulator()}}const D=a(),E=a(),O=a();export{x as MoveZManipulation};
