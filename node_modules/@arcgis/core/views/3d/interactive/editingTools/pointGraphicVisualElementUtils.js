/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/maybe.js";import{handlesGroup as t,destroyHandle as n,refHandle as o}from"../../../../core/handleUtils.js";import{deg2rad as i}from"../../../../core/mathUtils.js";import{c as r}from"../../../../chunks/vec3f64.js";import{s as a}from"../../../../chunks/vec3.js";import{init as s}from"../../../../core/watchUtils.js";import{containsXY as l}from"../../../../geometry/support/aaBoundingRect.js";import{projectVectorToVector as p,projectPointToVector as c}from"../../../../geometry/projection.js";import{create as m,empty as h,getMin as u}from"../../../../geometry/support/aaBoundingBox.js";import{getGraphicEffectiveElevationInfo as g}from"../../../../support/elevationInfoUtils.js";import{evaluateElevationAlignmentAtPoint as d}from"../../layers/graphics/elevationAlignmentUtils.js";import{ElevationContext as f}from"../../layers/graphics/ElevationContext.js";import{LaserlineVisualElement as v}from"../visualElements/LaserlineVisualElement.js";import{ExtendedLineVisualElement as y}from"../visualElements/ExtendedLineVisualElement.js";import{PointVisualElement as E}from"../visualElements/PointVisualElement.js";import{settings as w}from"./settings.js";import{GraphicState as j}from"../../layers/graphics/GraphicState.js";import{ManipulatorState as b}from"./ManipulatorState.js";function x(e){const{view:n,graphic:o}=e,i=new j({graphic:o}),r=[],a=L(e,i,r);return S(e,i,r,a),r.push(n.trackGraphicState(i)),{visualElement:a,remove(){t(r).remove()}}}function S(e,t,o,r){const{view:s,graphic:l}=e,c=new y({view:s,extensionType:w.visualElements.zVerticalLine.extensionType,innerWidth:1,attached:!1,writeDepthEnabled:!1,renderOccluded:4});w.visualElements.zVerticalLine.apply(c);const m=new v({view:s,intersectsLineInfinite:!0,attached:!1});w.visualElements.pointGraphics.shadowStyle.apply(m);const E=i(w.visualElements.heightPlaneAngleCutoff),j=new v({view:s,attached:!1,angleCutoff:E});w.visualElements.heightPlane.apply(j);const x=g(e.graphic),S=f.fromElevationInfo(x),L="on-the-ground"===x.mode||!x.offset&&"absolute-height"!==x.mode,P=new b;let A=1,C=1;const D=()=>{P.update(e);const n=L&&(t.isDraped||!M(l)||!l.geometry.hasZ);let o=!0;if(!n&&M(l)){const e=l.geometry,t=d(l.geometry,s.elevationProvider,S,s.renderCoordsHelper);a(R,e.x,e.y,t),p(R,e.spatialReference,R,s.renderCoordsHelper.spatialReference),c.setStartEndFromWorldDownAtLocation(R),m.intersectsWorldUpAtLocation=R}else o=!1;const i=2&P.grabbingState?w.visualElements.laserlineAlphaMultiplier:1;i!==A&&(A=i,w.visualElements.heightPlane.apply(j,i));const g=h(U);!n&&t.displaying&&r.calculateMapBounds(g)&&p(u(g,R),s.spatialReference,R,s.renderCoordsHelper.spatialReference)?(j.heightManifoldTarget=R,j.attached=!0):j.attached=!1;const f=4&P.grabbingState?w.visualElements.laserlineAlphaMultiplier:1;f!==C&&(C=f,w.visualElements.pointGraphics.shadowStyle.apply(m,f));const v=o&&t.displaying&&!n;m.attached=v,c.attached=v};o.push(t.watch(["displaying","isDraped"],D),t.on("changed",D)),e.forEachManipulator((e=>{o.push(e.events.on("grab-changed",D))})),o.push(n(m)),o.push(n(c)),o.push(n(j)),D()}function L(e,t,o){const{view:i,graphic:r}=e,a=new E({view:i,geometry:M(r)?r.geometry:null,elevationInfo:g(r),attached:!1});return P(e,a,t,o),o.push(n(a)),a}function P(e,t,n,o){const i=()=>t.attached=n.displaying;A(e,t,n,o),w.visualElements.pointGraphics.outline.apply(t),o.push(s(n,"displaying",i))}function A(t,n,i,r){const{view:a,graphic:s}=t;let l=null;const p=()=>{e(l)&&(l.remove(),l=null),i.isDraped&&M(s)&&(l=C(a,s.geometry,(()=>{n.geometry=s.geometry})))},c=()=>{p(),n.geometry=M(s)?s.geometry:null};r.push(i.on("changed",c),o((()=>l))),c()}function C(e,t,n){const o=e.elevationProvider.spatialReference;c(t,R,o);const i=R[0],r=R[1];return e.elevationProvider.on("elevation-change",(e=>{l(e.extent,i,r)&&n()}))}function M(t){return e(t.geometry)&&"point"===t.geometry.type}const R=r(),U=m();export{x as createVisualElements};
