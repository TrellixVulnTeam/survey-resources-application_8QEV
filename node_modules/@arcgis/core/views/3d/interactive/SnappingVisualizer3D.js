/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import"../../../core/has.js";import{destroyHandle as e}from"../../../core/handleUtils.js";import n from"../../../Color.js";import{c as t}from"../../../chunks/vec3f64.js";import{e as i}from"../../../chunks/vec3.js";import{defaults as o}from"../../interactive/snapping/Settings.js";import{anyMapPointToRender as r,anyMapPointsToRenderWithEqualZ as a}from"../../interactive/snapping/snappingUtils.js";import{SnappingVisualizer as l}from"../../interactive/snapping/SnappingVisualizer.js";import{ExtendedLineVisualElement as s}from"./visualElements/ExtendedLineVisualElement.js";import{ParallelLineVisualElement as c}from"./visualElements/ParallelLineVisualElement.js";import{PointVisualElement as d}from"./visualElements/PointVisualElement.js";import{RightAngleQuadVisualElement as p}from"./visualElements/RightAngleQuadVisualElement.js";class m extends l{visualizeIntersectionPoint(t,i){const{coordinateHelper:r,elevationInfo:a,view:l}=i;return e(new d({view:l,primitive:"circle",geometry:r.createPoint(t.intersectionPoint),elevationInfo:a,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:n.toUnitRGBA(o.orange),pixelSnappingEnabled:!1}))}visualizePoint(t,i){const{coordinateHelper:r,elevationInfo:a,view:l}=i;return e(new d({view:l,primitive:"circle",geometry:r.createPoint(t.point),elevationInfo:a,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:n.toUnitRGBA(o.orange),pixelSnappingEnabled:!1}))}visualizeLine(n,t){const{coordinateHelper:i,elevationInfo:o,view:r}=t;return e(this.createLineSegmentHintFromMap(n.type,n.lineStart,n.lineEnd,i,o,r,n.fadeLeft,n.fadeRight))}visualizeParallelSign(t,a){const{coordinateHelper:l,elevationInfo:s,view:d}=a,p=r(t.lineStart,l,s,a.view),m=r(t.lineEnd,l,s,a.view),u=i(m,p,m,.5),v=new c({view:d,attached:!1,offset:o.parallelLineHintOffset,length:o.parallelLineHintLength,width:o.parallelLineHintWidth,color:n.toUnitRGBA(o.orange),location:u,renderOccluded:16});return v.setDirectionFromPoints(p,u),v.attached=!0,e(v)}visualizeRightAngleQuad(t,i){const{coordinateHelper:a,elevationInfo:l,view:s}=i;return e(new p({view:s,attached:!0,color:n.toUnitRGBA(o.orange),renderOccluded:2,outlineRenderOccluded:16,outlineColor:n.toUnitRGBA(o.orange),outlineSize:o.rightAngleHintOutlineSize,size:o.rightAngleHintSize,geometry:{previous:r(t.previousVertex,a,l,s),center:r(t.centerVertex,a,l,s),next:r(t.nextVertex,a,l,s)}}))}createLineSegmentHintFromMap(e,n,i,o,r,l,s=!0,c=!0){const d=t(),p=t();return a(n,i,o,r,l,d,p),this.createLineSegmentHint(e,l,d,p,s,c)}createLineSegmentHint(e,t,i,r,a=!0,l=!0){const c=new s({view:t,extensionType:3,start:i,end:r,color:n.toUnitRGBA(o.orange),renderOccluded:16});switch(e){case 0:c.width=o.lineHintWidthTarget,c.fadedExtensions={start:0,end:o.lineHintFadedExtensions};break;case 2:c.width=o.lineHintWidthReference,c.fadedExtensions={start:0,end:0};break;case 1:c.width=o.lineHintWidthReference,c.fadedExtensions={start:a?o.lineHintFadedExtensions:0,end:l?o.lineHintFadedExtensions:0}}return c.attached=!0,c}}export{m as SnappingVisualizer3D};
