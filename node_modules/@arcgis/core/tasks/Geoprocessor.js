/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../core/has.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as t}from"../core/accessorSupport/decorators/property.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import o from"../geometry/SpatialReference.js";import s from"../geometry/Extent.js";import i from"./Task.js";import n from"../rest/geoprocessor/GPOptions.js";import{execute as u}from"../rest/geoprocessor/execute.js";import{submitJob as p}from"../rest/geoprocessor/submitJob.js";let c=class extends i{constructor(e){super(e),this._jobs=new Map,this.outSpatialReference=null,this.processExtent=null,this.processSpatialReference=null,this.returnFeatureCollection=!1,this.returnM=!1,this.returnZ=!1}destroy(){this._jobs.forEach((e=>e.destroy())),this._jobs.clear()}cancelJob(e,t){const r=this._jobs.get(e),o={...this.requestOptions,...t};return r.cancelJob(o)}checkJobStatus(e,t){const r=this._jobs.get(e),o={...this.requestOptions,...t};return r.checkJobStatus(o)}execute(e,t){const r=new n({outSpatialReference:this.outSpatialReference,processExtent:this.processExtent,processSpatialReference:this.processSpatialReference,returnFeatureCollection:this.returnFeatureCollection,returnM:this.returnM,returnZ:this.returnZ}),o={...this.requestOptions,...t};return u(this.url,e,r,o)}getResultData(e,t,r){const o=this._jobs.get(e),{returnFeatureCollection:s,returnM:i,returnZ:u,outSpatialReference:p}=this,c=new n({returnFeatureCollection:s,returnM:i,returnZ:u,outSpatialReference:p,url:this.url}),a={...this.requestOptions,...r};return o.fetchResultData(t,c,a)}getResultImage(e,t,r,o){const s=this._jobs.get(e),i={...this.requestOptions,...o};return s.fetchResultImage(t,r,i)}async getResultMapImageLayer(e){return this._jobs.get(e).fetchResultMapImageLayer()}submitJob(e,t){const r=new n({outSpatialReference:this.outSpatialReference,processExtent:this.processExtent,processSpatialReference:this.processSpatialReference,returnFeatureCollection:this.returnFeatureCollection,returnM:this.returnM,returnZ:this.returnZ}),o={...this.requestOptions,...t};return p(this.url,e,r,o).then((e=>(e.sourceUrl=this.url,this._jobs.set(e.jobId,e),e)))}waitForJobCompletion(e,t={}){return this._jobs.get(e).waitForJobCompletion(t)}};e([t({type:o})],c.prototype,"outSpatialReference",void 0),e([t({type:s})],c.prototype,"processExtent",void 0),e([t({type:o})],c.prototype,"processSpatialReference",void 0),e([t({nonNullable:!0})],c.prototype,"returnFeatureCollection",void 0),e([t({nonNullable:!0})],c.prototype,"returnM",void 0),e([t({nonNullable:!0})],c.prototype,"returnZ",void 0),c=e([r("esri/tasks/Geoprocessor")],c);var a=c;export default a;
