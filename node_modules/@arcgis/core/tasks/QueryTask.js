/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../core/has.js";import{isSome as t}from"../core/maybe.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import i from"./support/FeatureSet.js";import{DataLayerSource as u}from"../layers/support/source/DataLayerSource.js";import a from"./support/Query.js";import n from"./support/RelationshipQuery.js";import{executeAttachmentQuery as c}from"../rest/query/executeAttachmentQuery.js";import{executeForCount as m}from"../rest/query/executeForCount.js";import{executeForExtent as p}from"../rest/query/executeForExtent.js";import{executeForIds as h}from"../rest/query/executeForIds.js";import{executeRawQueryJSON as l}from"../rest/query/executeQueryJSON.js";import{executeRawQueryPBF as y}from"../rest/query/executeQueryPBF.js";import{executeRelationshipQuery as d,executeRelationshipQueryForCount as f}from"../rest/query/executeRelationshipQuery.js";import S from"./Task.js";let j=class extends S{constructor(e){super(e),this.dynamicDataSource=null,this.format="json",this.gdbVersion=null,this.sourceSpatialReference=null}execute(e,r){return this.executeJSON(e,r).then((e=>i.fromJSON(e)))}async executeJSON(e,t){var o;const s={...this.requestOptions,...t},i=this._normalizeQuery(e),u=null!=(null==(o=e.outStatistics)?void 0:o[0]),a=r("featurelayer-pbf-statistics"),n=!u||a;let c;if("pbf"===this.format&&n)try{c=await y(this.url,i,s)}catch(m){if("query:parsing-pbf"!==m.name)throw m;this.format="json"}return"json"!==this.format&&n||(c=await l(this.url,i,s)),this._normalizeFields(c.fields),c}executeForCount(e,r){const t={...this.requestOptions,...r},o=this._normalizeQuery(e);return m(this.url,o,t)}executeForExtent(e,r){const t={...this.requestOptions,...r},o=this._normalizeQuery(e);return p(this.url,o,t)}executeForIds(e,r){const t={...this.requestOptions,...r},o=this._normalizeQuery(e);return h(this.url,o,t)}executeRelationshipQuery(e,r){e=n.from(e);const t={...this.requestOptions,...r};return(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),d(this.url,e,t)}executeRelationshipQueryForCount(e,r){e=n.from(e);const t={...this.requestOptions,...r};return(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),f(this.url,e,t)}executeAttachmentQuery(e,r){const t={...this.requestOptions,...r};return c(this.url,e,t)}_normalizeQuery(e){const r=a.from(e);if(r.sourceSpatialReference=r.sourceSpatialReference||this.sourceSpatialReference,!this.gdbVersion&&!this.dynamicDataSource)return r;const t=r===e?r.clone():r;return t.gdbVersion=e.gdbVersion||this.gdbVersion,t.dynamicDataSource=e.dynamicDataSource?u.from(e.dynamicDataSource):this.dynamicDataSource,t}_normalizeFields(e){if(t(this.fieldsIndex)&&t(e))for(const r of e){const e=this.fieldsIndex.get(r.name);e&&Object.assign(r,e.toJSON())}}};e([o({type:u})],j.prototype,"dynamicDataSource",void 0),e([o()],j.prototype,"fieldsIndex",void 0),e([o()],j.prototype,"format",void 0),e([o()],j.prototype,"gdbVersion",void 0),e([o()],j.prototype,"sourceSpatialReference",void 0),j=e([s("esri.tasks.QueryTask")],j);var x=j;export default x;
