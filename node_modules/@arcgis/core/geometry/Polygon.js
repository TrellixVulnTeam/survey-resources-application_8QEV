/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import"../core/has.js";import{clone as r}from"../core/lang.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as e}from"../core/accessorSupport/decorators/property.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import{writer as i}from"../core/accessorSupport/decorators/writer.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import n from"./SpatialReference.js";import o from"./Geometry.js";import{canProject as a,project as l}from"./support/webMercatorUtils.js";import p from"./Point.js";import{polygonContainsPoint as h}from"./support/contains.js";import{isSelfIntersecting as c}from"./support/intersects.js";import u from"./Extent.js";import{updateSupportFromPoint as m}from"./support/zmUtils.js";import{isClockwise as f}from"./support/coordsUtils.js";import{polygonCentroid as g}from"./support/centroid.js";import{getPolygonExtent as y}from"./support/extentUtils.js";var d;function R(t){return!Array.isArray(t[0])}let j=d=class extends o{constructor(...t){super(...t),this.rings=[],this.type="polygon"}static fromExtent(t){const r=t.clone().normalize(),e=t.spatialReference;let s=!1,i=!1;r.map((t=>{t.hasZ&&(s=!0),t.hasM&&(i=!0)}));const n={rings:r.map((function(t){const r=[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]];if(s&&t.hasZ){const e=t.zmin+.5*(t.zmax-t.zmin);for(let t=0;t<r.length;t++)r[t].push(e)}if(i&&t.hasM){const e=t.mmin+.5*(t.mmax-t.mmin);for(let t=0;t<r.length;t++)r[t].push(e)}return r})),spatialReference:e};return s&&(n.hasZ=!0),i&&(n.hasM=!0),new d(n)}normalizeCtorArgs(t,r){let e,s,i=null,o=null;return t&&!Array.isArray(t)?(i=t.rings?t.rings:null,r||(t.spatialReference?r=t.spatialReference:t.rings||(r=t)),e=t.hasZ,s=t.hasM):i=t,i=i||[],r=r||n.WGS84,i.length&&i[0]&&null!=i[0][0]&&"number"==typeof i[0][0]&&(i=[i]),o=i[0]&&i[0][0],o&&(void 0===e&&void 0===s?(e=o.length>2,s=!1):void 0===e?e=!s&&o.length>3:void 0===s&&(s=!e&&o.length>3)),{rings:i,spatialReference:r,hasZ:e,hasM:s}}get cache(){return this.commitProperty("rings"),this.commitProperty("hasZ"),this.commitProperty("hasM"),this.commitProperty("spatialReference"),{}}get centroid(){const t=g(this);if(!t||isNaN(t[0])||isNaN(t[1])||this.hasZ&&isNaN(t[2]))return null;const r=new p;return r.x=t[0],r.y=t[1],r.spatialReference=this.spatialReference,this.hasZ&&(r.z=t[2]),r}get extent(){const{spatialReference:t}=this,r=y(this);if(!r)return null;const e=new u(r);return e.spatialReference=t,e}get isSelfIntersecting(){return c(this.rings)}writeRings(t,e){e.rings=r(this.rings)}addRing(t){if(!t)return;const r=this.rings,e=r.length;if(R(t)){const s=[];for(let r=0,e=t.length;r<e;r++)s[r]=t[r].toArray();r[e]=s}else r[e]=t.concat();return this.notifyChange("rings"),this}clone(){const t=new d;return t.spatialReference=this.spatialReference,t.rings=r(this.rings),t.hasZ=this.hasZ,t.hasM=this.hasM,t}contains(t){return!!t&&(a(t,this.spatialReference)&&(t=l(t,this.spatialReference)),h(this,t))}isClockwise(t){let r;return r=R(t)?t.map((t=>this.hasZ?this.hasM?[t.x,t.y,t.z,t.m]:[t.x,t.y,t.z]:[t.x,t.y])):t,f(r,this.hasM,this.hasZ)}getPoint(t,r){if(!this._validateInputs(t,r))return null;const e=this.rings[t][r],s=this.hasZ,i=this.hasM;return s&&!i?new p(e[0],e[1],e[2],void 0,this.spatialReference):i&&!s?new p(e[0],e[1],void 0,e[2],this.spatialReference):s&&i?new p(e[0],e[1],e[2],e[3],this.spatialReference):new p(e[0],e[1],this.spatialReference)}insertPoint(t,r,e){return this._validateInputs(t,r,!0)?(m(this,e),Array.isArray(e)||(e=e.toArray()),this.rings[t].splice(r,0,e),this.notifyChange("rings"),this):this}removePoint(t,r){if(!this._validateInputs(t,r))return null;const e=new p(this.rings[t].splice(r,1)[0],this.spatialReference);return this.notifyChange("rings"),e}removeRing(t){if(!this._validateInputs(t,null))return null;const r=this.rings.splice(t,1)[0],e=this.spatialReference,s=r.map((t=>new p(t,e)));return this.notifyChange("rings"),s}setPoint(t,r,e){return this._validateInputs(t,r)?(m(this,e),Array.isArray(e)||(e=e.toArray()),this.rings[t][r]=e,this.notifyChange("rings"),this):this}_validateInputs(t,r,e=!1){if(null==t||t<0||t>=this.rings.length)return!1;if(null!=r){const s=this.rings[t];if(e&&(r<0||r>s.length))return!1;if(!e&&(r<0||r>=s.length))return!1}return!0}toJSON(t){return this.write(null,t)}};t([e({readOnly:!0})],j.prototype,"cache",null),t([e({readOnly:!0})],j.prototype,"centroid",null),t([e({readOnly:!0})],j.prototype,"extent",null),t([e({readOnly:!0})],j.prototype,"isSelfIntersecting",null),t([e({type:[[[Number]]],json:{write:{isRequired:!0}}})],j.prototype,"rings",void 0),t([i("rings")],j.prototype,"writeRings",null),j=d=t([s("esri.geometry.Polygon")],j),j.prototype.toJSON.isDefaultToJSON=!0;var x=j;export default x;
