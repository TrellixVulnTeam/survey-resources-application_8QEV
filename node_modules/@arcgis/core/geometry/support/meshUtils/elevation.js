/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{unwrapOr as e}from"../../../core/maybe.js";import{eachAlways as t}from"../../../core/promiseUtils.js";import o from"../../Point.js";import"../../../geometry.js";import n from"../../../Ground.js";import{getMetersPerUnitForSR as i}from"../../../core/unitUtils.js";import r from"../../Mesh.js";async function a(e,t,o){let i;if(m(e)||e instanceof n){const n=await l(e);i=await n.createElevationSampler(t,{demResolution:o&&o.demResolution||"finest-contiguous"})}else i=e;return s(i,t,o)}function s(t,o,n){const a=i(o.spatialReference),s=t.demResolution.min/a,l=Math.round(o.width/s),m=Math.round(o.height/s),f=l+1,p=m+1,u=new Float64Array(f*p*3),y=new Float32Array(f*p*2);let d=0,h=0;const w=new Uint32Array(l*m*2*3);let R=0,j=0;c.spatialReference=o.spatialReference;for(let i=0;i<p;i++){const n=o.ymin+o.height*(i/m);for(let r=0;r<f;r++){const a=o.xmin+o.width*(r/l);c.x=a,c.y=n,u[d++]=a,u[d++]=n,u[d++]=e(t.elevationAt(c),0);const s=r/l,p=i/m;y[h++]=s,y[h++]=p,i!==m&&r!==l&&(w[j++]=R+1,w[j++]=R+f+1,w[j++]=R+f,w[j++]=R,w[j++]=R+1,w[j++]=R+f),R++}}return new r({vertexAttributes:{position:u,uv:y},components:[{faces:w,shading:"smooth",material:n&&n.material||null}],spatialReference:o.spatialReference})}async function l(e){return m(e)?e.load():(await e.load(),await t(e.layers.map((e=>e.load()))),e)}function m(e){return"type"in e&&("elevation"===e.type||"base-elevation"===e.type)}const c=new o;export{a as create};
