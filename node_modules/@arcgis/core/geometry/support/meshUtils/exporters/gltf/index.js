/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{eachAlways as e}from"../../../../../core/promiseUtils.js";import t from"../../../../Point.js";export{Asset}from"./asset.js";import{ImageOutputType as r,BufferOutputType as o}from"./types.js";export{AlphaMode,BufferOutputType,ColorMode,ComponentType,DataType,FilterMode,ImageOutputType,MeshMode}from"./types.js";import{GLB as n}from"./glb.js";import{isArrayBufferPNG as s,encodeBase64DataUri as i}from"./imageutils.js";import{GLTF as p}from"./gltf.js";export{Scene}from"./scene.js";export{Node}from"./node.js";const a="model.gltf",u="model.glb";function f(f,m,c){const l=new p(f,m=m||{},c);let g=l.params;g?g.origin||(g.origin=new t({x:-1,y:-1,z:-1})):g={origin:new t({x:-1,y:-1,z:-1})};const y=g.origin,d=l.gltf,j=d.extras.promises;let x=1,b=1,B=null;return e(j).then((()=>{const e={origin:y};delete d.extras;const t="number"==typeof m.jsonSpacing?m.jsonSpacing:4,p=JSON.stringify(d,((t,n)=>{if("extras"!==t){if(n instanceof ArrayBuffer){if(s(n))switch(m.imageOutputType){case r.DataURI:case r.GLB:break;case r.External:default:{const t=`img${b}.png`;return b++,e[t]=n,t}}switch(m.bufferOutputType){case o.DataURI:return i(n);case o.GLB:if(B)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(B=n);case o.External:default:{const t=`data${x}.bin`;return x++,e[t]=n,t}}}return n}}),t);return m.bufferOutputType===o.GLB||m.imageOutputType===r.GLB?e[u]=new n(p,B).buffer:e[a]=p,e}))}function m(e,t){return f(e,{bufferOutputType:o.GLB,imageOutputType:r.GLB,jsonSpacing:0},t)}export{u as MODEL_NAME_GLB,a as MODEL_NAME_GLTF,m as exportGLB,f as exportGLTF};
