/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import t from"../../config.js";import{isNone as e,isSome as n}from"../../core/maybe.js";import o from"../../core/Logger.js";import s from"../../core/Error.js";import{getInfo as r}from"./spatialReferenceUtils.js";import{geographicToWebMercator as i,webMercatorToGeographic as l}from"./webMercatorUtils.js";import f from"../Polygon.js";import c from"../Polyline.js";import{getGeometryParts as p,cutParams as u,offsetMagnitude as a,updatePolyGeometry as h}from"./normalizeUtilsCommon.js";import{cut as m}from"../../tasks/geometry/cut.js";import{simplify as g}from"../../tasks/geometry/simplify.js";const y=o.getLogger("esri.geometry.support.normalizeUtils");function x(t){return"polygon"===t.type}function d(t){return"polygon"===t[0].type}function w(t){return"polyline"===t[0].type}function j(t){const e=[];let n=0,o=0;for(let s=0;s<t.length;s++){const r=t[s];let i=null;for(let t=0;t<r.length;t++)i=r[t],e.push(i),0===t?(n=i[0],o=n):(n=Math.min(n,i[0]),o=Math.max(o,i[0]));i&&e.push([(n+o)/2,0])}return e}function R(t,e){if(!(t instanceof c||t instanceof f)){const t="straightLineDensify: the input geometry is neither polyline nor polygon";throw y.error(t),new s(t)}const n=p(t),o=[];for(const s of n){const t=[];o.push(t),t.push([s[0][0],s[0][1]]);for(let n=0;n<s.length-1;n++){const o=s[n][0],r=s[n][1],i=s[n+1][0],l=s[n+1][1],f=Math.sqrt((i-o)*(i-o)+(l-r)*(l-r)),c=(l-r)/f,p=(i-o)/f,u=f/e;if(u>1){for(let l=1;l<=u-1;l++){const n=l*e,s=p*n+o,i=c*n+r;t.push([s,i])}const n=(f+Math.floor(u-1)*e)/2,s=p*n+o,i=c*n+r;t.push([s,i])}t.push([i,l])}}return x(t)?new f({rings:o,spatialReference:t.spatialReference}):new c({paths:o,spatialReference:t.spatialReference})}function M(t,e,n){if(e){const e=R(t,1e6);t=l(e,!0)}return n&&(t=h(t,n)),t}function P(t,e,n){if(Array.isArray(t)){const o=t[0];if(o>e){const n=a(o,e);t[0]=o+n*(-2*e)}else if(o<n){const e=a(o,n);t[0]=o+e*(-2*n)}}else{const o=t.x;if(o>e){const n=a(o,e);t=t.clone().offset(n*(-2*e),0)}else if(o<n){const e=a(o,n);t=t.clone().offset(e*(-2*n),0)}}return t}function b(t,e){let n=-1;for(let o=0;o<e.cutIndexes.length;o++){const s=e.cutIndexes[o],r=e.geometries[o],i=p(r);for(let t=0;t<i.length;t++){const e=i[t];e.some((n=>{if(n[0]<180)return!0;{let n=0;for(let t=0;t<e.length;t++){const o=e[t][0];n=o>n?o:n}n=Number(n.toFixed(9));const o=-360*a(n,180);for(let s=0;s<e.length;s++){const e=r.getPoint(t,s);r.setPoint(t,s,e.clone().offset(o,0))}return!0}}))}if(s===n){if(d(t))for(const e of p(r))t[s]=t[s].addRing(e);else if(w(t))for(const e of p(r))t[s]=t[s].addPath(e)}else n=s,t[s]=r}return t}async function L(o,s,l){if(!Array.isArray(o))return L([o],s);const p=s?s.url:t.geometryServiceUrl;let y,x,d,w,j,R,U,k,v=0;const A=[],z=[];for(const t of o)if(e(t))z.push(t);else if(y||(y=t.spatialReference,x=r(y),d=y.isWebMercator,R=d?102100:4326,w=u[R].maxX,j=u[R].minX,U=u[R].plus180Line,k=u[R].minus180Line),x)if("mesh"===t.type)z.push(t);else if("point"===t.type)z.push(P(t.clone(),w,j));else if("multipoint"===t.type){const e=t.clone();e.points=e.points.map((t=>P(t,w,j))),z.push(e)}else if("extent"===t.type){const e=t.clone()._normalize(!1,!1,x);z.push(e.rings?new f(e):e)}else if(t.extent){const e=t.extent,n=a(e.xmin,j)*(2*w);let o=0===n?t.clone():h(t.clone(),n);e.offset(n,0),e.intersects(U)&&e.xmax!==w?(v=e.xmax>v?e.xmax:v,o=M(o,d),A.push(o),z.push("cut")):e.intersects(k)&&e.xmin!==j?(v=e.xmax*(2*w)>v?e.xmax*(2*w):v,o=M(o,d,360),A.push(o),z.push("cut")):z.push(o)}else z.push(t.clone());else z.push(t);let I=a(v,w),X=-90;const q=I,C=new c;for(;I>0;){const t=360*I-180;C.addPath([[t,X],[t,-1*X]]),X*=-1,I--}if(A.length>0&&q>0){const t=b(A,await m(p,A,C,l)),e=[],s=[];for(let l=0;l<z.length;l++){const r=z[l];if("cut"!==r)s.push(r);else{const r=t.shift(),f=o[l];n(f)&&"polygon"===f.type&&f.rings&&f.rings.length>1&&r.rings.length>=f.rings.length?(e.push(r),s.push("simplify")):s.push(d?i(r):r)}}if(!e.length)return s;const r=await g(p,e,l),f=[];for(let n=0;n<s.length;n++){const t=s[n];"simplify"!==t?f.push(t):f.push(d?i(r.shift()):r.shift())}return f}const D=[];for(let t=0;t<z.length;t++){const e=z[t];if("cut"!==e)D.push(e);else{const t=A.shift();D.push(!0===d?i(t):t)}}return Promise.resolve(D)}function U(t){if(!t)return null;const e=t.extent;if(!e)return null;const n=t.spatialReference&&r(t.spatialReference);if(!n)return e;const[o,s]=n.valid,i=2*s,{width:l}=e;let f,{xmin:c,xmax:p}=e;if([c,p]=[p,c],"extent"===t.type||0===l||l<=s||l>i||c<o||p>s)return e;switch(t.type){case"polygon":if(!(t.rings.length>1))return e;f=j(t.rings);break;case"polyline":if(!(t.paths.length>1))return e;f=j(t.paths);break;case"multipoint":f=t.points}const u=e.clone();for(let r=0;r<f.length;r++){let t=f[r][0];t<0?(t+=s,p=Math.max(t,p)):(t-=s,c=Math.min(t,c))}return u.xmin=c,u.xmax=p,u.width<l?(u.xmin-=s,u.xmax-=s,u):e}function k(t,e){const n=r(e);if(n){const[e,o]=n.valid,s=o-e;if(t<e)for(;t<e;)t+=s;if(t>o)for(;t>o;)t-=s}return t}export{U as getDenormalizedExtent,L as normalizeCentralMeridian,k as normalizeMapX,R as straightLineDensify};
