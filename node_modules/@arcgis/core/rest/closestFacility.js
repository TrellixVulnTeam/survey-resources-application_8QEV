/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../request.js";import{normalizeCentralMeridian as r}from"../geometry/support/normalizeUtils.js";import{parseUrl as t}from"./utils.js";import{createQueryParamsHelper as i}from"../core/queryUtils.js";import{collectGeometries as s,isInputGeometryZAware as a,fetchServiceDescription as o,dropZValuesOffInputGeometry as n}from"./networkUtils.js";import u from"../tasks/support/ClosestFacilitySolveResult.js";const l=i({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});async function c(i,c,m){const f=[],p=[],y={},B={},d=t(i);return c.incidents&&c.incidents.features&&s(c.incidents.features,p,"incidents.features",y),c.facilities&&c.facilities.features&&s(c.facilities.features,p,"facilities.features",y),c.pointBarriers&&c.pointBarriers.features&&s(c.pointBarriers.features,p,"pointBarriers.features",y),c.polylineBarriers&&c.polylineBarriers.features&&s(c.polylineBarriers.features,p,"polylineBarriers.features",y),c.polygonBarriers&&c.polygonBarriers.features&&s(c.polygonBarriers.features,p,"polygonBarriers.features",y),r(p).then((e=>{for(const r in y){const t=y[r];f.push(r),B[r]=e.slice(t[0],t[1])}return a(B,f)?o(d.path):Promise.resolve({dontCheck:!0})})).then((r=>{("dontCheck"in r?r.dontCheck:r.hasZ)||n(B,f);for(const e in B)B[e].forEach(((r,t)=>{c.get(e)[t].geometry=r}));let t={query:{...d.query,f:"json",...l.toQueryParams(c)}};return m&&(t={...m,...t}),e(`${d.path}/solveClosestFacility`,t)})).then((e=>u.fromJSON(e.data)))}export{c as solve};
