/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import o from"../../../core/Error.js";import"../../../core/urlUtils.js";import"../../../core/uuid.js";import"../../../portal/support/resourceExtension.js";import i from"../../../core/Accessor.js";import{equals as s}from"../../../geometry/support/spatialReferenceUtils.js";import n from"../../../geometry/SpatialReference.js";import{canProject as a,project as c}from"../../../geometry/support/webMercatorUtils.js";import"../../../geometry.js";import{isLoaded as l,project as p}from"../../../geometry/projection.js";import{fromUsng as m,fromUtm as u,fromMgrs as h,fromLatitudeLongitude as d,toUtm as f,toUsng as v,toMgrs as g,toLatitudeLongitude as P}from"../../../geometry/coordinateFormatter.js";import{isValidPoint as y,isSupportedNotation as S,fromXY as w,fromGeoCoordinateString as j,pointToCoordinate as R,toGeoCoordinateString as _,project as b,getDegreePrecision as M}from"./coordinateConversionUtils.js";let C=class extends i{constructor(e){super(e),this.conversionInfo=null,this.coordinateSegments=null,this.defaultPattern=null,this.name=null,this.viewModel=null}get currentPattern(){return this._get("currentPattern")||this._get("defaultPattern")}set currentPattern(e){this._set("currentPattern",e)}get hasDisplayProperties(){return!(!this.defaultPattern||!this.coordinateSegments)}get spatialReference(){const e=this.get("conversionInfo.spatialReference")||n.WGS84;return"basemap"===this.name?this._viewSpatialReference:e}set spatialReference(e){void 0===e&&this._clearOverride("spatialReference"),this._override("spatialReference",e)}get _viewSpatialReference(){return this.get("viewModel.view.spatialReference")||n.WGS84}get _additionalCharactersPattern(){const e=this.get("coordinateSegments");if(!e)return null;const t=e.map((e=>e.alias)),r=this.currentPattern.replace(new RegExp(`["nsew${t.join()}]`,"gi"),"").replace(/\ /g,"");return new RegExp(`[${r}]`,"g")}convert(e,t){if(!y(e))return Promise.reject(new o("format:invalid-point","Could not convert invalid point.",{point:e}));const r=this.get("conversionInfo.convert");return r?Promise.resolve().then((()=>r(e))):this._project(e,this.spatialReference,t).then((e=>this._getCoordinate(e).then((t=>({location:e,coordinate:t})))))}getConversionStrategy(){const e=this._viewSpatialReference;return this.get("conversionInfo.convert")||this.get("viewModel.formatterAvailable")||"xy"===this.name&&(e.isWebMercator||e.isWGS84)||"basemap"===this.name?"client":"server"}getDisplayCoordinate(e){if(!e)return null;if(!this.coordinateSegments||!this.currentPattern)return e;let t=this.currentPattern;const r=this._getSegmentMatches(e,!1);for(let o=this.coordinateSegments.length-1;o>=0;o--){const e=this.coordinateSegments[o];t=t.replace(e.alias,r[o])}return t}parseUserInput(e){let t=this.defaultPattern.replace(this._additionalCharactersPattern,"");e=e.replace(this._additionalCharactersPattern,"");const r=this._getSegmentMatches(e,!0);for(let o=this.coordinateSegments.length-1;o>=0;o--){const e=this.coordinateSegments[o];t=t.replace(e.alias,r[o])}return t}_getSegmentMatches(e,t){const r=[];for(let o=0;o<this.coordinateSegments.length;o++){const i=this.coordinateSegments[o],s=e.match(i.searchPattern);if(!s){r.push("");continue}let n=s[0];if(e=e.replace(n,"").trim(),i.substitution){const e=t?i.substitution.input(n):i.substitution.output(n);e&&(n=e)}r.push(n)}return r}reverseConvert(e){const t=this.parseUserInput(e),r=this.get("conversionInfo.reverseConvert"),i=S(this.name);let s;if(r)s=r(t);else if("xy"===this.name||"basemap"===this.name)s=w(t,this.spatialReference);else if(this.viewModel.formatterAvailable)switch(this.name){case"dd":case"ddm":case"dms":s=d(t,this.spatialReference);break;case"mgrs":{const e="automatic";s=h(t,this.spatialReference,e);break}case"utm":{const e="latitude-band-indicators";s=u(t,this.spatialReference,e);break}case"usng":s=m(t,this.spatialReference);break;default:s=null}else if(i)return j({coordinate:t,spatialReference:this.spatialReference,formatName:this.name,geometryServicePromise:this.get("viewModel.geometryServicePromise")});return s?this._project(s,this._viewSpatialReference):Promise.reject(new o("format:invalid-input","Could not parse input into point.",{userInput:e}))}_getCoordinate(e){const t=this.get("viewModel.view.scale");if(!y(e))return Promise.reject(new o("format:invalid-point","Could not transform invalid point into coordinate.",{point:e}));if(this.get("viewModel.formatterAvailable")||"basemap"===this.name||"xy"===this.name)switch(this.name){case"dd":case"ddm":case"dms":{const r=M(t);return Promise.resolve(P(e,this.name,r))}case"mgrs":{const t=!1,r=5,o="automatic";return Promise.resolve(g(e,o,r,t))}case"usng":{const t=!1,r=5;return Promise.resolve(v(e,r,t))}case"utm":{const t=!0,r="latitude-band-indicators";return Promise.resolve(f(e,r,t))}default:return Promise.resolve(R(e,t))}return S(this.name)?_({formatName:this.name,location:e,geometryServicePromise:this.get("viewModel.geometryServicePromise")}):Promise.resolve(R(e,t))}_project(e,t,r){return s(e.spatialReference,t)||!t?Promise.resolve(e):this.get("viewModel.formatterAvailable")&&l()?Promise.resolve(p(e,t)):this.get("viewModel.formatterAvailable")?null:a(e,t)?Promise.resolve(c(e,t)):b({location:e,spatialReference:t,geometryServicePromise:this.get("viewModel.geometryServicePromise"),scale:this.get("viewModel.view.scale")},r).then((e=>e.location))}};e([t()],C.prototype,"conversionInfo",void 0),e([t()],C.prototype,"coordinateSegments",void 0),e([t()],C.prototype,"currentPattern",null),e([t()],C.prototype,"defaultPattern",void 0),e([t({readOnly:!0})],C.prototype,"hasDisplayProperties",null),e([t()],C.prototype,"name",void 0),e([t({type:n})],C.prototype,"spatialReference",null),e([t()],C.prototype,"viewModel",void 0),e([t({readOnly:!0})],C.prototype,"_viewSpatialReference",null),e([t({readOnly:!0})],C.prototype,"_additionalCharactersPattern",null),C=e([r("esri.widgets.CoordinateConversion.support.Format")],C);var I=C;export default I;
