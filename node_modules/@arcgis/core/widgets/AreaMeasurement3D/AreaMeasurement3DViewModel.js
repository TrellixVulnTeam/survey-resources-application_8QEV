/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import e from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import i from"../../core/Handles.js";import{init as o}from"../../core/watchUtils.js";import{measurementAreaUnits as n}from"../../core/unitUtils.js";import{defaultUnitPropertyMetadata as l}from"../support/commonProperties.js";import{InteractiveToolViewModel as a}from"../support/InteractiveToolViewModel.js";import u from"../../views/3d/interactive/measurementTools/areaMeasurement3D/AreaMeasurement3DTool.js";const p=e.getLogger("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel");let m=class extends a{constructor(t){super(t),this.supportedViewType="3d",this._handles=new i,this._userUnitOptions=null,this._userUnit=null,this.tool=null}initialize(){this._handles.add([o(this,"unit",(t=>{this.tool&&(this.tool.model.unit=t)}))])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get measurement(){if(!this.tool||this.isDisabled)return null;const t=this.tool.model,e=t.measurementMode,r=t.measurementData,s=t.validMeasurement,i=0===("euclidean"===e?r.intersectingSegments:r.geodesicIntersectingSegments).size,o=i?s?"available":"unavailable":"invalid";return{mode:e,area:{text:i&&s?t.areaLabel:null,state:o},perimeterLength:{text:i&&s?t.perimeterLengthLabel:null,state:o}}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:u,constructorArguments:()=>({unit:this.unit})}}logUnsupportedError(){p.error("AreaMeasurement3D widget is not implemented for MapView")}logError(...t){p.error(...t)}_findSelectableUnit(t,e){const r=this.unitOptions;return-1!==r.indexOf(t)?t:e?this._findSelectableUnit(e):r[0]}_filteredOrAllUnits(t){if(!t)return n.slice();const e=t.filter((t=>-1!==n.indexOf(t)));return 0===e.length?n.slice():e}};t([r({readOnly:!0})],m.prototype,"state",null),t([r({readOnly:!0})],m.prototype,"measurement",null),t([r({constructOnly:!0})],m.prototype,"tool",void 0),t([r(l)],m.prototype,"defaultUnit",void 0),t([r()],m.prototype,"unitOptions",null),t([r()],m.prototype,"unit",null),m=t([s("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],m);var d=m;export default d;
