/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../../../core/Logger.js";import t from"../../../core/Error.js";import{eachAlways as r}from"../../../core/promiseUtils.js";import{isNumericField as s,getField as i}from"../../../layers/support/fieldUtils.js";import o from"../../../request.js";import n from"../../../tasks/support/StatisticDefinition.js";import a from"../../../tasks/support/Query.js";import l from"../../../tasks/support/RelationshipQuery.js";import u from"../../../tasks/QueryTask.js";import{isRelatedField as c}from"./featureUtils.js";const d="esri.widgets.Feature.support.relatedFeatureUtils",f=e.getLogger(d),p=new Map;function m(e){if(!c(e))return null;const[t,r]=e.split("/").slice(1);return{layerId:t,fieldName:r}}function y(e,t){if(!t.relationships)return null;let r=null;const{relationships:s}=t;return s.some((t=>t.id===parseInt(e,10)&&(r=t,!0))),r}function F({originRelationship:e,relationships:t,layerId:r}){let s;return t&&t.some((t=>(`${t.relatedTableId}`===r&&t.id===e.id&&(s=t),!!s))),s}function h(e,t){const r=t.toLowerCase();for(const s in e)if(s.toLowerCase()===r)return e[s];return null}function I(e,t){const r=y(e,t);if(!r)return;const s=`${t.url}/${r.relatedTableId}`;return{url:s,queryTask:new u({url:s,sourceSpatialReference:t.spatialReference}),relation:r,relatedFields:[],outStatistics:[]}}function w(e,t){if(!t)return;if(!e)return;const{features:r,statsFeatures:s}=e,i=r&&r.value;t.relatedFeatures=i?i.features:[];const o=s&&s.value;t.relatedStatsFeatures=o?o.features:[]}function b(e,t,r,s){const i=new l;return i.outFields=["*"],i.relationshipId="number"==typeof t.id?t.id:parseInt(t.id,10),i.objectIds=[e.attributes[r.objectIdField]],r.queryRelatedFeatures(i,s)}function j(e,t,r){let s=0;const i=[];for(;s<t.length;)i.push(`${e} IN (${t.slice(s,r+s)})`),s+=r;return i.join(" OR ")}async function g(e,t,o,n){const l=o.layerId.toString(),{layerInfo:u,queryTask:c,relation:d,relatedFields:f,outStatistics:p}=t,m=F({originRelationship:d,relationships:u.relationships,layerId:l});if(m.relationshipTableId&&m.keyFieldInRelationshipTable){const t=(await b(e,m,o,n))[e.attributes[o.objectIdField]];if(!t)return null;const s=t.features.map((e=>e.attributes[u.objectIdField]));if((null==p?void 0:p.length)>0&&u.supportsStatistics){const e=new a;e.where=j(u.objectIdField,s,1e3),e.outFields=f,e.outStatistics=p;const i={features:Promise.resolve(t),statsFeatures:c.execute(e)};return r(i)}}const y=null==m?void 0:m.keyField;if(y){const o=s(i(u.fields,y)),l=h(e.attributes,d.keyField),f=o?`${y}=${l}`:`${y}='${l}'`,p=c.execute(new a({where:f,outFields:t.relatedFields}),n),m=t.outStatistics&&t.outStatistics.length>0&&u.supportsStatistics?c.execute(new a({where:f,outFields:t.relatedFields,outStatistics:t.outStatistics}),n):null,F={features:p};return m&&(F.statsFeatures=m),r(F)}return null}function S(e,t){return o(e,{query:{f:"json"},signal:t&&t.signal})}function T({relatedInfos:e,layer:s},i){const o={};return e.forEach(((e,r)=>{const{relation:n}=e;if(!n){const e=new t("relation-required","A relation is required on a layer to retrieve related records.");throw f.error(e),e}const{relatedTableId:a}=n;if("number"!=typeof a){const e=new t("A related table ID is required on a layer to retrieve related records.");throw f.error(e),e}const l=`${s.url}/${a}`,u=p.get(l),c=u||S(l,i);u||p.set(l,c),o[r]=c})),r(o)}function $({graphic:e,relatedInfos:t,layer:s},i){const o={};return t.forEach(((t,r)=>{t.layerInfo&&(o[r]=g(e,t,s,i))})),r(o)}function k({relatedInfo:e,fieldName:t,fieldInfo:r}){if(e.relatedFields.push(t),r.statisticType){const s=new n({statisticType:r.statisticType,onStatisticField:t,outStatisticFieldName:t});e.outStatistics.push(s)}}export{I as createRelatedInfo,F as getDestinationRelation,m as getRelatedFieldInfo,T as queryLayerInfos,$ as queryRelatedFeatures,w as setRelatedFeatures,k as updateRelatedInfo};
