/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import e from"../../core/has.js";import t from"../../config.js";import r from"../../core/Logger.js";import o from"../../core/Error.js";import"../../core/urlUtils.js";import"../../geometry/Geometry.js";import{geographicToWebMercator as i}from"../../geometry/support/webMercatorUtils.js";import s from"../../geometry/Point.js";import"../../geometry/Extent.js";import"../../geometry/Multipoint.js";import"../../geometry/Polygon.js";import"../../geometry/Polyline.js";import"../../geometry.js";import"../../request.js";import n from"../../portal/Portal.js";import a from"../../tasks/support/ProjectParameters.js";import"../../rest/geometryService/units.js";import"../../tasks/operations/generalize.js";import"../../tasks/support/GeneralizeParameters.js";import"../../tasks/operations/lengths.js";import"../../tasks/support/LengthsParameters.js";import"../../tasks/operations/offset.js";import"../../tasks/support/OffsetParameters.js";import{project as m}from"../../rest/geometryService/project.js";import"../../tasks/operations/relation.js";import"../../tasks/support/RelationParameters.js";import"../../tasks/operations/trimExtend.js";import"../../tasks/support/TrimExtendParameters.js";const u=r.getLogger("esri.widgets.support.geolocationUtils"),c={maximumAge:0,timeout:15e3,enableHighAccuracy:!0};function p(){const t=e("esri-geolocation");return t||u.warn("geolocation-unsupported","Geolocation unsupported."),t}function l(){const e=window.isSecureContext;return e||u.warn("insecure-context","Geolocation requires a secure origin."),e}function g(){return p()&&l()}function f(e){const t=15e3;return e||(e=c),new Promise(((r,i)=>{setTimeout((()=>i(new o("geolocation:timeout","getting the current geolocation position timed out"))),t),navigator.geolocation.getCurrentPosition(r,i,e)}))}function j(e,t){const{position:r,view:o}=e;return P(y(d(r)),o,t)}function d(e){const t=e&&e.coords||{},r={accuracy:t.accuracy,altitude:t.altitude,altitudeAccuracy:t.altitudeAccuracy,heading:t.heading,latitude:t.latitude,longitude:t.longitude,speed:t.speed};return e?{coords:r,timestamp:e.timestamp}:e}function y(e){const t=e&&e.coords;return t?new s({longitude:t.longitude,latitude:t.latitude,z:t.altitude||null,spatialReference:{wkid:4326}}):null}function P(e,t,r){if(!t)return Promise.resolve(e);const s=t.spatialReference;return s.isWGS84?Promise.resolve(e):s.isWebMercator?Promise.resolve(i(e)):w(r).then((t=>{if(!t)throw new o("geometry-service:missing-url","Geometry service URL is missing");const i=new a({geometries:[e],outSpatialReference:s});return m(t,i,r).then((e=>e[0]))}))}function w(e){if(t.geometryServiceUrl)return Promise.resolve(t.geometryServiceUrl);const r=n.getDefault();return r.load(e).catch((()=>{})).then((()=>r.get("helperServices.geometry.url")))}export{f as getCurrentPosition,j as positionToPoint,g as supported};
