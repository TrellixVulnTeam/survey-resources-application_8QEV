/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import"../core/has.js";import{isNone as e,isSome as s,destroyMaybe as i,applySome as r}from"../core/maybe.js";import"../core/Logger.js";import"../core/accessorSupport/ensureType.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import{aliasOf as n}from"../core/accessorSupport/decorators/aliasOf.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import"../core/urlUtils.js";import"../core/uuid.js";import"../portal/support/resourceExtension.js";import{createTask as l}from"../core/promiseUtils.js";import{init as h}from"../core/watchUtils.js";import{memoize as c}from"../core/memoize.js";import"./support/widgetUtils.js";import{messageBundle as d}from"./support/decorators/messageBundle.js";import{j as p}from"../chunks/index.js";import u from"./Widget.js";import{CSS as m}from"./ElevationProfile/css.js";import{ElevationProfileState as _,LARGE_CHART_SAMPLES as v,PORTRAIT_MODE_PIXEL_BREAKPOINT as C}from"./ElevationProfile/support/constants.js";import g from"./ElevationProfile/ElevationProfileViewModel.js";import f from"./ElevationProfile/ElevationProfileVisibleElements.js";import{Legend as y}from"./ElevationProfile/components/Legend.js";import{SettingsButton as b}from"./ElevationProfile/components/SettingsButton.js";import{createChart as w}from"./ElevationProfile/support/chartUtils.js";const k=[{type:"select"},{type:"sketch"}],B={none:null,"no-valid-input":"noProfile","no-visible-profiles":"noProfile","refined-but-no-chart-data":"noProfile","too-complex":"tooComplex","unknown-error":"unknown","invalid-geometry":"invalidGeometry","invalid-elevation-info":"invalidElevationInfo"};let M=class extends u{constructor(t,e){super(t,e),this.viewModel=null,this.view=null,this.input=null,this.profiles=null,this.unitOptions=[],this.unit="metric",this.geodesicDistanceThreshold=1e5,this.visibleElements=new f,this.iconClass=m.widgetIcon,this.label=void 0,this.messages=null,this.messagesCommon=null,this.messagesUnits=null,this._chartContainer=null,this._chart=null,this._resizeObserver=null,this._portrait=!1,this._zoomOutButtonVisible=!1,this._chartInitTask=null,this._getChartUpdateParamsMemoized=c(((t,e,s,i)=>({chart:t,data:e,stationary:s,messages:i}))),this._getDetailsPropsMemoized=c(((t,e)=>({effectiveUnits:t,profiles:e}))),this._getSettingsButtonPropsMemoized=c(((t,e,s)=>({unit:t,unitOptions:e,onUnitChange:s}))),this._onUnitChange=t=>{this.unit=t},null!=t&&t.viewModel||(this._defaultViewModel=new g({view:null==t?void 0:t.view}),this.viewModel=this._defaultViewModel)}initialize(){this._settingsButton=new b(this._settingsButtonProps),this.own(this.watch("_detailsProps",(t=>{this._legend.set(t)}))),this._legend=new y(this._detailsProps),this.own(this.watch("_settingsButtonProps",(t=>{this._settingsButton.set(t)})))}postInitialize(){this.own([h(this,"_chartContainer",(()=>{this._destroyChart();const t=this._chartContainer;e(t)||(this._chartInitTask=l((e=>this._initializeChart(t,e))))})),h(this,"_chartUpdateParams",(()=>this._updateChart()))])}destroy(){this._destroyChart(),s(this._defaultViewModel)&&this.viewModel!==this._defaultViewModel&&this._defaultViewModel.destroy(),this._legend=i(this._legend),this._settingsButton=i(this._settingsButton),s(this._resizeObserver)&&(this._resizeObserver.disconnect(),this._resizeObserver=null)}get _chartUpdateParams(){const t=this.view;return this._getChartUpdateParamsMemoized(this._chart,this.viewModel.chartData,!s(t)||t.stationary,this._chartMessages)}get _chartMessages(){return{...this.messagesUnits,...this.messages}}get _detailsProps(){return this._getDetailsPropsMemoized(this.viewModel.effectiveUnits,this._profilesArray)}get _profilesArray(){return this.profiles.toArray()}get _settingsButtonProps(){return this._getSettingsButtonPropsMemoized(this.unit,this.unitOptions,this._onUnitChange)}render(){const{viewModel:t,visible:e}=this;return p("div",{key:this,class:this.classes({[m.base]:e,[m.esriWidget]:e,[m.esriWidgetDisabled]:e&&"disabled"===t.state,[m.portrait]:this._portrait,[m.refined]:1===this.viewModel.progress}),bind:this,afterCreate:this._onAfterCreate,"aria-label":this.messages.widgetLabel},e&&this._renderContentForState())}_renderContentForState(){switch(this.viewModel.state){case _.Ready:return this._renderContentForReadyState();case _.Selecting:return this._renderContentForSelectingState();case _.Creating:return this._renderContentForCreatingState();case _.Selected:return this._renderContentForSelectedState();case _.Created:return this._renderContentForCreatedState();case _.Disabled:return this._renderContentForReadyState()}}_renderContentForReadyState(){const{sketchButton:t,selectButton:e}=this.visibleElements,s=this.messages;let i;if(t&&e)i=s.readyPrompt;else if(t)i=s.readyPromptCreateOnly;else if(e)i=s.readyPromptSelectOnly;else{var r;i=null==(r=s.errors)?void 0:r.noProfile}return this._renderContent({prompt:i,chart:!1,actions:k})}_renderContentForSelectingState(){const t=this.view;if(e(t))return null;const s=this.messages[`selectingPrompt-${t.type}`];return this._renderContent({prompt:s,chart:!1,actions:[{type:"select-cancel"}]})}_renderContentForCreatingState(){const{view:t,viewModel:s}=this;if(e(t))return null;const i=s.hasVertices?[{type:"sketch-cancel"},{type:"sketch-done",disabled:!s.tool.interaction.canStopCreating}]:[{type:"select"},{type:"sketch",disabled:!0}];if("no-valid-input"===s.errorState){const e=this.messages[`creatingPrompt-${t.type}`];return this._renderContent({chart:!1,actions:i,prompt:e})}const r=this._getErrorMessage();return r?this._renderContent({chart:!1,actions:i,prompt:r}):this._renderContent({chart:!0,actions:i})}_renderContentForSelectedState(){const t=this._getErrorMessage();return t?this._renderContent({chart:!1,actions:k,prompt:t}):this._renderContent({chart:!0,actions:k})}_renderContentForCreatedState(){const t=this._getErrorMessage();return t?this._renderContent({chart:!1,actions:k,prompt:t}):this._renderContent({chart:!0,actions:k})}_getErrorMessage(){var t,e;const s=B[this.viewModel.errorState];return null==(t=this.messages)||null==(e=t.errors)?void 0:e[s]}_renderContent(t){const e=s(t.prompt)?this._renderPrompt(t.prompt):t.chart&&this._renderChart();return[p("header",{key:"header",class:m.header},this._zoomOutButtonVisible&&this._renderZoomOutButton(),this.visibleElements.settingsButton&&this._settingsButton.render()),p("div",{class:m.mainContainer},e),this.visibleElements.legend&&this._legend.render(),this._renderActions(t)]}_renderZoomOutButton(){return p("button",{key:"zoom-out",class:m.zoomOutButton,bind:this,onclick:this._onZoomOutButtonClick,title:this.messages.zoomOut})}_onZoomOutButtonClick(){r(this._chart,(t=>t.zoomOut()))}_renderPrompt(t){return[p("div",{key:"prompt-container",bind:this,class:m.promptContainer},p("p",null,t))]}_renderChart(){if(!this.visibleElements.chart)return[p("div",{key:"empty-chart-container",class:m.chartContainer})];const{chartData:t,progress:e}=this.viewModel,i=this._canRenderChart(t);if(!i)return[this._renderSpinner({size:"large"}),p("div",{key:"chart-container-empty",class:m.chartContainer})];return[s(t)&&e>0&&e<1&&this._renderSpinner({size:i?"small":"large"}),p("div",{key:"chart-container",bind:this,class:m.chartContainer,afterCreate:this._onChartContainerAfterCreate,afterRemoved:this._onChartContainerRemoved})]}_renderSpinner(t){return p("div",{key:"spinner",class:this.classes(m.chartSpinner,{[m.chartSpinnerSmall]:"small"===t.size}),enterAnimation:this._spinnerEnterAnimation,exitAnimation:this._spinnerExitAnimation})}_spinnerEnterAnimation(t){requestAnimationFrame((()=>t.classList.add(m.chartSpinnerVisible)))}_spinnerExitAnimation(t,e){t.classList.remove(m.chartSpinnerVisible),setTimeout(e,200)}_canRenderChart(t){if(e(t))return!1;if(!this.viewModel.inputIsSketched)return t.fullyRefined;const i=t.lines.reduce(((t,{samples:e})=>s(e)?t+e.length:t),0);return t.fullyRefined||i<=v}_renderActions({actions:t}){const e=t.map((t=>{switch(t.type){case"sketch":return this.visibleElements.sketchButton&&this._renderAction({action:t,onClick:this._onSketchButtonClick,className:m.sketchButton,label:this.messages.sketchButtonLabel});case"sketch-cancel":return this.visibleElements.sketchButton&&this._renderAction({action:t,onClick:this._onCancelButtonClick,className:m.sketchCancelButton,label:this.messagesCommon.cancel});case"sketch-done":return this.visibleElements.sketchButton&&this._renderAction({action:t,onClick:this._onDoneButtonClick,className:m.sketchDoneButton,label:this.messagesCommon.done});case"select":return this.visibleElements.selectButton&&this._renderAction({action:t,onClick:this._onSelectButtonClick,className:m.selectButton,label:this.messages.selectButtonLabel});case"select-cancel":return this.visibleElements.selectButton&&this._renderAction({action:t,onClick:this._onCancelButtonClick,className:m.selectCancelButton,label:this.messagesCommon.cancel})}})).filter(Boolean);return e.length?p("footer",{key:"footer",class:m.footer},e):null}_renderAction({action:t,onClick:e,className:s,label:i}){return p("button",{key:`action-${t.type}`,class:this.classes(m.actionButton,s,{[m.buttonDisabled]:t.disabled}),bind:this,disabled:t.disabled,onclick:e},i)}_onSketchButtonClick(){this.viewModel.start({mode:"sketch"})}_onSelectButtonClick(){this.viewModel.start({mode:"select"})}_onCancelButtonClick(){this.viewModel.cancel()}_onDoneButtonClick(){this.viewModel.stop()}_updateChart(){const t=this._chartUpdateParams;t.stationary&&s(t.chart)&&t.messages&&t.chart.update(t)}_onChartContainerAfterCreate(t){this._chartContainer=t}_onChartContainerRemoved(){this._chartContainer=null}async _initializeChart(t,e){this._chart=await w({container:t,abortOptions:{signal:e},onRangeChange:t=>{this._zoomOutButtonVisible=1!==t},onCursorPositionChange:t=>{this.viewModel.hoveredChartPosition=t}}),this._updateChart()}_destroyChart(){s(this._chartInitTask)&&(this._chartInitTask.abort(),this._chartInitTask=null),s(this._chart)&&(this._chart.destroy(),this._chart=null)}_onAfterCreate(t){const e=()=>{this._portrait=t.getBoundingClientRect().width<C};e(),this._resizeObserver=new ResizeObserver((()=>e())),this._resizeObserver.observe(t)}};t([o({type:g})],M.prototype,"viewModel",void 0),t([n("viewModel.view")],M.prototype,"view",void 0),t([n("viewModel.input")],M.prototype,"input",void 0),t([n("viewModel.profiles")],M.prototype,"profiles",void 0),t([n("viewModel.unitOptions")],M.prototype,"unitOptions",void 0),t([n("viewModel.unit")],M.prototype,"unit",void 0),t([n("viewModel.geodesicDistanceThreshold")],M.prototype,"geodesicDistanceThreshold",void 0),t([o({type:f,nonNullable:!0})],M.prototype,"visibleElements",void 0),t([o()],M.prototype,"iconClass",void 0),t([n("messages.widgetLabel",{overridable:!0})],M.prototype,"label",void 0),t([n("viewModel.visible")],M.prototype,"visible",void 0),t([o(),d("esri/widgets/ElevationProfile/t9n/ElevationProfile")],M.prototype,"messages",void 0),t([o(),d("esri/t9n/common")],M.prototype,"messagesCommon",void 0),t([o(),d("esri/core/t9n/Units")],M.prototype,"messagesUnits",void 0),t([o()],M.prototype,"_chartContainer",void 0),t([o()],M.prototype,"_chart",void 0),t([o()],M.prototype,"_settingsButton",void 0),t([o()],M.prototype,"_legend",void 0),t([o()],M.prototype,"_portrait",void 0),t([o()],M.prototype,"_zoomOutButtonVisible",void 0),t([o()],M.prototype,"_chartUpdateParams",null),t([o()],M.prototype,"_chartMessages",null),t([o()],M.prototype,"_detailsProps",null),t([o()],M.prototype,"_profilesArray",null),t([o()],M.prototype,"_settingsButtonProps",null),M=t([a("esri.widgets.ElevationProfile")],M);var P=M;export default P;
