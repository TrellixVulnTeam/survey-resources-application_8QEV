/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import e from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import i from"../../core/Handles.js";import{init as s}from"../../core/watchUtils.js";import{measurementLengthUnits as n}from"../../core/unitUtils.js";import{defaultUnitPropertyMetadata as a}from"../support/commonProperties.js";import{InteractiveToolViewModel as l}from"../support/InteractiveToolViewModel.js";import p,{isSupported as d}from"./DistanceMeasurement2DTool.js";const u={handleWidth:8,handleColor:[255,128,0,.5],pathWidth:5,pathPrimaryColor:[255,128,0,255],pathSecondaryColor:[255,255,255,255]},h=e.getLogger("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel");let c=class extends l{constructor(t){super(t),this.supportedViewType="2d",this._handles=new i,this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null,this.palette=u,this.tool=null}initialize(){this._handles.add([s(this,["unit","palette","geodesicDistanceThreshold"],((t,e,r)=>{this.tool&&(this.tool[r]=t)}))])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get state(){var t;return this.isDisabled?"disabled":d(null==(t=this.view)?void 0:t.spatialReference)?this.tool&&this.measurement?this.tool.active?"measuring":"measured":"ready":"disabled"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(t){void 0!==t?this._override("unit",this._validateUnit(t)):this._clearOverride("unit")}get unitOptions(){return n}set unitOptions(t){void 0!==t?this._override("unitOptions",this._validateUnits(t)):this._clearOverride("unitOptions")}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:p,constructorArguments:()=>({geodesicDistanceThreshold:this.geodesicDistanceThreshold,palette:this.palette,unit:this.unit})}}logUnsupportedError(){h.error("DistanceMeasurement2D widget is not implemented for SceneView")}logError(...t){h.error(...t)}_validateUnit(t){return-1!==this.unitOptions.indexOf(t)?t:-1!==this.unitOptions.indexOf(this.defaultUnit)?this.defaultUnit:this.unitOptions[0]}_validateUnits(t=[]){const e=t.filter((t=>-1!==n.indexOf(t)));return 0===e.length?n.slice():e}};t([r(a)],c.prototype,"defaultUnit",void 0),t([r({type:Number})],c.prototype,"geodesicDistanceThreshold",void 0),t([r({readOnly:!0,aliasOf:"tool.measurement"})],c.prototype,"measurement",void 0),t([r({readOnly:!0,aliasOf:"tool.measurementLabel"})],c.prototype,"measurementLabel",void 0),t([r()],c.prototype,"palette",void 0),t([r({readOnly:!0})],c.prototype,"state",null),t([r({constructOnly:!0,readOnly:!0})],c.prototype,"tool",void 0),t([r({type:String})],c.prototype,"unit",null),t([r({type:[String]})],c.prototype,"unitOptions",null),c=t([o("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],c);var m=c;export default m;
