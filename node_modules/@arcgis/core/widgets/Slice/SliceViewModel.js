/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isNone as t,isSome as o}from"../../core/maybe.js";import r from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import{aliasOf as l}from"../../core/accessorSupport/decorators/aliasOf.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{ignoreAbortErrors as d}from"../../core/promiseUtils.js";import a from"../../core/Collection.js";import{referenceSetter as c,castForReferenceSetter as u}from"../../core/collectionUtils.js";import n from"../../core/Handles.js";import{InteractiveToolViewModel as p}from"../support/InteractiveToolViewModel.js";import h from"../../views/3d/interactive/analysisTools/slice/SliceTool.js";import{Slice as m}from"../../views/3d/interactive/graphics/Slice.js";const y=r.getLogger("esri.widgets.Slice.SliceViewModel"),x=new Set;let f=class extends p{constructor(e){super(e),this.supportedViewType="3d",this.handles=new n,this.model=new m,this.shape=null,x.add(this)}initialize(){this.handles.add(this.watch("shape",((e,r)=>{t(r)&&o(e)?this.tool||this.creatingTool||this.createTool():o(r)&&t(e)&&this.removeTool()}),!0))}destroy(){x.delete(this),this.handles.destroy()}get state(){return this.isDisabled?"disabled":this.tool?this.tool.state:"ready"}get tiltEnabled(){var e,t,o;return null!=(e=null!=(t=null==(o=this.tool)?void 0:o.tiltEnabled)?t:this._get("tiltEnabled"))&&e}set tiltEnabled(e){this._set("tiltEnabled",e),this._updateToolOrRecreate((t=>t.tiltEnabled=e))}get excludedLayers(){return this.tool?this.tool.excludedLayers:this._get("excludedLayers")||new a}set excludedLayers(e){this._set("excludedLayers",c(e,this.excludedLayers)),this._updateToolOrRecreate((t=>t.excludedLayers=e))}get excludeGroundSurface(){return this.tool?this.tool.excludeGroundSurface:this._get("excludeGroundSurface")||!1}set excludeGroundSurface(e){this._set("excludeGroundSurface",e),this._updateToolOrRecreate((t=>t.excludeGroundSurface=e))}start(){return x.forEach((e=>{e.view===this.view&&e!==this&&e.clear()})),this.createTool()}clear(){this.removeTool(),this._set("excludeGroundSurface",!1),this._set("excludedLayers",new a)}removeSliceAndStart(){return this.removeTool(),this.shape=null,this.start()}enterExcludeLayerMode(){this.tool&&this.tool.enterExcludeLayerMode()}exitExcludeLayerMode(){this.tool&&this.tool.exitExcludeLayerMode()}_updateToolOrRecreate(e){this.tool?e(this.tool):this.creatingTool&&d(this.createTool())}createToolParams(){return{toolConstructor:h,constructorArguments:()=>({excludeGroundSurface:this.excludeGroundSurface,excludedLayers:this.excludedLayers,tiltEnabled:this.tiltEnabled,model:this.model})}}logUnsupportedError(){this.logError("Slice widget is not implemented for MapView")}logError(...e){y.error(...e)}};e([s({readOnly:!0})],f.prototype,"state",null),e([s()],f.prototype,"tool",void 0),e([s()],f.prototype,"model",void 0),e([s({aliasOf:"model.plane"})],f.prototype,"shape",void 0),e([s({type:Boolean})],f.prototype,"tiltEnabled",null),e([l("tool.layersMode")],f.prototype,"layersMode",void 0),e([s({cast:u})],f.prototype,"excludedLayers",null),e([s({nonNullable:!0})],f.prototype,"excludeGroundSurface",null),f=e([i("esri.widgets.slice.SliceViewModel")],f);var S=f;export default S;
