/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import"../../../../core/urlUtils.js";import"../../../../core/uuid.js";import"../../../../portal/support/resourceExtension.js";import s from"../../../../core/Accessor.js";import o from"../../../../core/Collection.js";const c="esri.widgets.FeatureTable.Grid.support.LocalStore";let i=class extends s{constructor(){super(...arguments),this.itemCache=new o,this.state="ready"}destroy(){this.itemCache.destroy(),this._set("itemCache",null)}get count(){var e;return(null==(e=this.itemCache)?void 0:e.length)||0}async addItems(e){this.itemCache.addMany(null==e?void 0:e.items)}async fetchItems(e){const{page:t,pageSize:r}=e,s=t*r;return this.itemCache.items.slice(s,s+r)}getLocalItemAt(e){return this.itemCache.getItemAt(e)}getItemAt(e){return Promise.resolve(this.itemCache.getItemAt(e))}async load(){}query(e){return this.fetchItems(e)}async removeItemAt(e){this.itemCache.removeAt(e)}async reset(){this.itemCache.removeAll()}async updateItem(e){const{index:t,name:r,value:s}=e,o=this.itemCache.getItemAt(t);o&&r&&o[r]&&(o[r]=s)}};e([t({readOnly:!0})],i.prototype,"count",null),e([t()],i.prototype,"itemCache",void 0),e([t({readOnly:!0})],i.prototype,"state",void 0),i=e([r(c)],i);var a=i;export default a;
