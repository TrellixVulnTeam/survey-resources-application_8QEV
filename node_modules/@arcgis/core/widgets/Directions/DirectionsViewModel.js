/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isNone as e}from"../../core/maybe.js";import r from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import i from"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{isAbortError as a,isPromiseLike as n}from"../../core/promiseUtils.js";import l from"../../core/Evented.js";import u from"../../core/Collection.js";import{getLocale as c}from"../../intl/locale.js";import p from"../../Color.js";import h from"../../symbols/SimpleLineSymbol.js";import d from"../../symbols/PictureMarkerSymbol.js";import m from"../../symbols/SimpleMarkerSymbol.js";import"../../symbols.js";import g from"../../Graphic.js";import y from"../../core/Handles.js";import{on as v,init as f,watch as w}from"../../core/watchUtils.js";import b from"../../tasks/support/FeatureSet.js";import _ from"../../layers/GraphicsLayer.js";import T from"../../tasks/RouteTask.js";import{GoToMixin as S}from"../support/GoTo.js";import{graphicsExtent as L}from"../../geometry/support/graphicsUtils.js";import R from"../../tasks/support/RouteParameters.js";import{isWaypoint as C,isStopLocated as D,isFirstStop as A,isLastStop as M}from"./support/directionsUtils.js";const j=r.getLogger("esri.widgets.Directions.DirectionsViewModel"),N={first:new m({color:[105,220,255,1],size:19,outline:{color:[51,51,51,1],width:3}}),middle:new m({color:[51,51,51,1],size:12,outline:{color:[105,220,255,1],width:3}}),last:new d({width:23,height:23,url:`data:image/svg+xml;base64,${btoa('<svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><g fill-rule="nonzero" fill="none"><path d="M15.15.3C6.9.3.3 6.9.3 15.15S6.9 29.7 15.15 29.7 29.7 23.1 29.7 15.15C29.7 6.9 23.25.3 15.15.3z" fill="#333"/><path d="M15 4.8C9.3 4.8 4.8 9.45 4.8 15c0 5.55 4.65 10.2 10.2 10.2 5.55 0 10.2-4.5 10.2-10.2 0-5.55-4.5-10.2-10.2-10.2z" fill="#69DCFF"/><path fill="#333" d="M10.5 10.5h9v9h-9z"/></g></svg>')}`}),unlocated:new d({height:18,width:18,url:`data:image/svg+xml;base64,${btoa('<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><path d="M10.1.2C4.6.2.2 4.6.2 10.1s4.4 9.7 9.9 9.7 9.7-4.4 9.7-9.7c0-5.5-4.3-9.9-9.7-9.9z" fill="#333" fill-rule="nonzero"/><path d="M10 2.7c-4.08 0-7.3 3.328-7.3 7.3s3.328 7.3 7.3 7.3 7.3-3.22 7.3-7.3c0-3.972-3.22-7.3-7.3-7.3z" fill="#69DCFF" fill-rule="nonzero"/><path d="M11.414 10l5.304-5.303-1.415-1.415L10 8.586 4.697 3.282 3.282 4.697 8.586 10l-5.304 5.303 1.415 1.415L10 11.414l5.303 5.304 1.415-1.415L11.414 10z" fill="#333"/></g></svg>')}`}),waypoint:new m({color:[255,255,255,1],size:10,outline:{color:[20,89,127,1],width:2.5}})};let z=class extends(S(l.EventedAccessor)){constructor(t){super(t),this._handles=new y,this._routeLayer=new _({listMode:"hide"}),this._highlightLayer=new _({listMode:"hide"}),this._stopId=9999,this._stopLayer=new _({listMode:"hide"}),this._serviceDescriptionLoadStatus=0,this.apiKey=void 0,this.departureTime="now",this.lastRoute=null,this.routeSymbol=new h({color:[105,220,255,1],width:7,cap:"round",join:"round"}),this.routeParameters=new R({doNotLocateOnRestrictedElements:!0,ignoreInvalidLocations:!0,directionsOutputType:"complete",findBestSequence:!1,preserveFirstStop:!0,preserveLastStop:!0,restrictUTurns:"at-dead-ends-and-intersections",directionsLengthUnits:"kilometers",returnBarriers:!1,returnDirections:!0,returnPolygonBarriers:!1,returnPolylineBarriers:!1,returnRoutes:!1,returnStops:!0,returnZ:!0,startTime:null,startTimeIsUTC:!0,stops:null,useHierarchy:!0,useTimeWindows:!1}),this.routeServiceUrl="https://route-api.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World",this.serviceDescription=null,this.error=null,this.stops=new u,this.view=null}initialize(){this._handles.add([v(this,"stops","change",(()=>{this.clearResults(),this._addStopsToLayer()})),f(this,"view.map",((t,e)=>{const r=[this._routeLayer,this._stopLayer,this._highlightLayer];e&&e.removeMany(r),t&&t.addMany(r)})),w(this,"lastRoute",(()=>this._addRouteToLayer()))])}destroy(){this.stops.destroy();const t=this.get("view.map");t&&t.removeMany([this._routeLayer,this._stopLayer,this._highlightLayer])}get _directionsLanguage(){const{routeParameters:t,serviceDescription:e}=this,{directionsSupportedLanguages:r}=e;if(!r)return;const s=(t.directionsLanguage||c()).slice(0,2);return r.find((t=>t.toLowerCase().slice(0,2)===s))}get _routeTask(){return new T(this.routeServiceUrl)}get impedanceAttribute(){const t=this.get("routeParameters.travelMode.impedanceAttributeName")||this.get("routeParameters.impedanceAttribute")||this.get("serviceDescription.impedance");return this.getCostAttribute(t)}set maxStops(t){const e=50,r=2;t=t<=r?r:t>e?e:t,this._set("maxStops",t)}get selectedTravelMode(){const{serviceDescription:t}=this;if(!t)return null;const{defaultTravelMode:e,supportedTravelModes:r=[]}=t;let s=null;for(let o=0;o<r.length;o++)r[o].id===e&&(s=r[o]);return s||r[0]||null}set selectedTravelMode(t){void 0!==t?this._override("selectedTravelMode",t):this._clearOverride("selectedTravelMode")}get state(){const t=this._serviceDescriptionLoadStatus;return 4===t?"unauthenticated":0===t?"disabled":1===t?"initializing":this._activeRouteController?"routing":3===t||this.error?"error":"ready"}set stopSymbols(t){const e={...N,...t};this._set("stopSymbols",e)}get timeAttribute(){const t=this.get("routeParameters.travelMode.timeAttributeName")||this.get("routeParameters.directionsTimeAttribute")||this.get("serviceDescription.directionsTimeAttribute");return this.getCostAttribute(t)}get travelModes(){return this.get("serviceDescription.supportedTravelModes")||[]}async load(){if(!this.serviceDescription)try{this._serviceDescriptionLoadStatus=1,this.notifyChange("state"),await this._loadServiceDescription(),this._serviceDescriptionLoadStatus=2,this.notifyChange("state")}catch(t){const e="identity-manager:user-aborted"===t.name;if(this._serviceDescriptionLoadStatus=e?4:3,this.notifyChange("state"),!e){const e=new i("directions-view-model:service-metadata-unavailable","Cannot load route service metadata",{error:t});throw this._set("error",e),e}}}highlightSegment(t){const{view:r,_highlightLayer:s}=this;if(!r||e(t.symbol))return;this.clearHighlights();const o=t.symbol.clone();o.color=new p([0,0,0,.8]),o.width=Math.ceil(o.width/2);const i=new g({geometry:t.geometry,symbol:o});s.graphics.add(i)}clearHighlights(){this._highlightLayer.graphics.removeAll()}centerAt(t){const{view:e}=this;e&&this.callGoTo({target:t})}clearResults(){this._set("lastRoute",null)}getDirections(){const{state:t}=this;if("unauthenticated"===t||"initializing"===t||"disabled"===t||3===this._serviceDescriptionLoadStatus)return Promise.reject(new i("directions-view-model:not-loaded","Cannot get directions until view model loads."));this._set("error",null),this._activeRouteController&&(this._activeRouteController.abort(),this._activeRouteController=null);const{apiKey:e,departureTime:r}=this,s="now"===r,o="now"===r?new Date:r;if(o&&!s){const t=60*o.getTimezoneOffset()*1e3;o.setTime(o.getTime()-t)}const n=this.routeParameters.clone();if(n.set({startTime:o,startTimeIsUTC:s,directionsLanguage:this._directionsLanguage,apiKey:e}),this.selectedTravelMode&&(n.travelMode=this.selectedTravelMode),this.stops.length<=1){const t=new i("directions-view-model:not-enough-stops","Not enough stops for routing");return this._set("error",t),Promise.reject(t)}const l=new AbortController,{signal:u}=l;this._activeRouteController=l;const c=this._enqueue((()=>{const t=this.stops.clone().toArray(),e={},r=r=>{const s=r&&r.routeResults&&r.routeResults[0]&&r.routeResults[0].stops||[];(r&&r.routeResults&&r.routeResults[0]&&r.routeResults[0].directions&&r.routeResults[0].directions.features||[]).map((r=>{for(let s=0;s<t.length;s++)if(r.attributes.text.indexOf(t[s].attributes.Name)>-1){const o=t[s].attributes.Name;r.attributes.text=r.attributes.text.replace(o,e[o]),r._associatedStop=t[s];break}})),t.map((t=>t.attributes.Name=e[t.attributes.Name])),s.map((t=>{t.attributes.Name=e[t.attributes.Name]}))},s=t=>{if(t&&t.routeResults&&t.routeResults[0]){const e=t.routeResults[0],r=e.stops||[],s=this.stops.clone().toArray();let o=e.directions&&e.directions.routeName||e.routeName||"";r.map(((t,e)=>{const r=t.attributes,i=s[e].attributes;o=o.replace(r.Name,i.Name),Object.keys(r).forEach((t=>{0===t.indexOf("Cumul_")&&(i[t]=r[t])})),i.ArriveCurbApproach=r.ArriveCurbApproach,i.ArriveTime=r.ArriveTime,i.ArriveTimeUTC=r.ArriveTimeUTC,i.DepartCurbApproach=r.DepartCurbApproach,i.DepartTime=r.DepartTime,i.DepartTimeUTC=r.DepartTimeUTC,i.Sequence=r.Sequence,i.Status=r.Status})),e.directions&&(e.directions.routeName=o),null!==e.route&&(e.route.attributes.Name=o),e.routeName=o}},o=t=>{const r=t&&t.routeResults&&t.routeResults[0]&&t.routeResults[0].stops||[],s=this.stops.toArray();let o=r.length===s.length,i=0;for(;o&&i<r.length;)o=o&&e[r[i].attributes.Name]===s[i++].attributes.Name;return o};return(()=>{t.map((t=>{const r=t.attributes,s=`${(r.Name||"[not yet geocoded]").substr(0,100)}_#${++this._stopId}`;e[s]=r.Name,r.Name=s}))})(),n.stops=new b({features:t}),this._routeTask.solve(n,{signal:u}).then((t=>o(t)?(s(t),r(t),this._set("lastRoute",t),t):(j.warn("Response stops don't match current stops of the ViewModel, invalidating the results."),this._set("lastRoute",null),null))).catch((t=>{throw r(null),t}))})).then((t=>(this._activeRouteController=null,this.notifyChange("state"),this.zoomToRoute(),t))).catch((t=>{if(this._activeRouteController=null,this.notifyChange("state"),!a(t))throw t=new i("directions-view-model:unable-to-route","Unable to route to these addresses",{error:t}),this._set("error",t),t}));return this.notifyChange("state"),c}getCostAttribute(t){const e=this.serviceDescription&&this.serviceDescription.networkDataset.networkAttributes||[];let r="";for(let s=0;s<e.length;s++)if(e[s].name===t&&"esriNAUTCost"===e[s].usageType){r=e[s];break}return r}reset(){this.stops.removeAll(),this.clearHighlights(),this._set("lastRoute",null)}zoomToRoute(){const{directionLines:t,view:e}=this;if(!t||!e)return;const r=L(t),s=r.width>r.height;this.callGoTo({target:r.expand(s?2:1)})}async _loadServiceDescription(){const t=await this._routeTask.getServiceDescription(this.apiKey);this._set("serviceDescription",t)}_enqueue(t){this._requestQueueTail||(this._requestQueueTail=Promise.resolve());const e=new Promise(((e,r)=>{this._requestQueueTail.catch((()=>{})).then((()=>{try{const s=t.call(this);n(s)?s.then(e,r):e(s)}catch(s){r(s)}}))}));return this._requestQueueTail=e,e}_addStopsToLayer(){this._stopLayer.graphics.removeAll();const t=this.stops.clone().map(((t,e)=>{const{first:r,middle:s,last:o,unlocated:i,waypoint:a}=this.stopSymbols;return C(t)?t.symbol=a:void 0===t.attributes.Status?t.symbol=0===e?r:e===this.stops.length-1?o:s:t.symbol=C(t)?a:D(t)?A(t)?r:M(t)?o:s:i,t}));this._stopLayer.graphics.addMany(t)}_addRouteToLayer(){this._routeLayer.graphics.removeAll();const{directionLines:t}=this;t&&(t.forEach((t=>{t.symbol=this.routeSymbol})),this._routeLayer.graphics.addMany(t))}};t([s()],z.prototype,"_directionsLanguage",null),t([s({type:T})],z.prototype,"_routeTask",null),t([s()],z.prototype,"apiKey",void 0),t([s()],z.prototype,"departureTime",void 0),t([s({aliasOf:"lastRoute.routeResults.0.directions.features"})],z.prototype,"directionLines",void 0),t([s({readOnly:!0})],z.prototype,"impedanceAttribute",null),t([s({readOnly:!0})],z.prototype,"lastRoute",void 0),t([s({value:50})],z.prototype,"maxStops",null),t([s()],z.prototype,"routeSymbol",void 0),t([s({type:R})],z.prototype,"routeParameters",void 0),t([s()],z.prototype,"routeServiceUrl",void 0),t([s()],z.prototype,"selectedTravelMode",null),t([s({readOnly:!0})],z.prototype,"serviceDescription",void 0),t([s({readOnly:!0})],z.prototype,"state",null),t([s()],z.prototype,"error",void 0),t([s({type:u})],z.prototype,"stops",void 0),t([s({value:N})],z.prototype,"stopSymbols",null),t([s({readOnly:!0})],z.prototype,"timeAttribute",null),t([s()],z.prototype,"travelModes",null),t([s()],z.prototype,"view",void 0),t([s()],z.prototype,"getDirections",null),t([s()],z.prototype,"zoomToRoute",null),z=t([o("esri.widgets.Directions.DirectionsViewModel")],z);var x=z;export default x;
