/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as e,destroyMaybe as i,applySome as s,unwrapOr as o,isNone as r,abortMaybe as a}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{makeHandle as n}from"../../core/handleUtils.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{ignoreAbortErrors as l,createTask as c,throwIfAborted as d}from"../../core/promiseUtils.js";import{reactionInit as u,when as _}from"../../core/accessorSupport/trackingUtils.js";import m from"../../core/Accessor.js";import g from"../../symbols/CIMSymbol.js";import v from"../../symbols/SimpleLineSymbol.js";import y from"../../Graphic.js";import S from"../../core/Handles.js";import b from"../../layers/GraphicsLayer.js";import{isDOMContainer as f}from"../../views/DOMContainer.js";import k from"../Sketch/SketchViewModel.js";import{isPolyline as I}from"./support/geometryUtils.js";var P;function w(t){return"2d"===t?new g({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[5,4],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:1.5,color:[0,0,0,255]},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:1.5,color:[255,255,255,255]}]}}}):new v({color:[0,0,0,0]})}!function(t){t.Ready="ready",t.Creating="creating",t.Reshaping="reshaping",t.ReshapingDisabled="rehsaping-disabled",t.Selecting="selecting",t.Selected="selected"}(P||(P={}));let G=class extends m{constructor(t){super(t),this.state=P.Ready,this._handles=new S,this._pendingStartOptions=null,this._previousInputInfo=null,this._shouldRemoveLastPoint=!1,this._sketchedGraphics=new WeakSet,this._creationToolPromise=null,this._updateToolPromise=null,this._updateDisabled=!1}initialize(){this._handles.add(u((()=>this.tool.viewModel.view),(t=>{e(t)?this._initialize(t):this._destroy()})),"view")}destroy(){this._destroy(),this._handles=i(this._handles)}get canStopCreating(){const t=s(this.tool.viewModel.input,(t=>t.geometry)),e=this._shouldRemoveLastPoint?3:2;return I(t)&&t.paths.length>0&&t.paths[0].length>=e}get _input(){return this.tool.viewModel.input}set _input(t){this.tool.viewModel.input=t}get _visibleAndEditable(){return this.tool.visible&&this.tool.editable}get _view(){return this.tool.viewModel.view}get test(){return{sketchVM:this._sketchVM,toolPromise:Promise.all([o(this._creationToolPromise,Promise.resolve()),o(this._updateToolPromise,Promise.resolve())])}}start(t={mode:"sketch"}){if(!this.tool.editable)return;const e=this._view;if(!r(e)&&e.ready)switch(this._pendingStartOptions=null,this._stopInteraction(),r(this._previousInputInfo)&&this._storePreviousInput(this._input),this._setSketchedGraphic(null),t.mode){case"sketch":this._set("state",P.Creating),this._startCreationInteraction();break;case"select":this._set("state",P.Selecting),this._startSelectionInteraction()}else this._pendingStartOptions=t}stop(){this._pendingStartOptions=null,this._stopInteractionAndUpdate(),this._clearPreviousInput()}cancel(){this._pendingStartOptions=null,this._stopInteractionAndUpdate(),this._restorePreviousInput()}clear(){this._stopInteractionAndUpdate(),this._set("state",P.Ready),this._clearPreviousInput(),this._input=null,this._pendingStartOptions=null}isSketchedGraphic(t){return e(t)&&this._sketchedGraphics.has(t)}_initialize(t){this._destroy();const i={mode:"3d"===t.type?"relative-to-ground":"on-the-ground",offset:null};this._graphicsLayer=new b({listMode:"hide",internal:!0,elevationInfo:i});const o=w(t.type);this._sketchVM=new k({layer:this._graphicsLayer,view:t,defaultCreateOptions:{mode:"click",hasZ:!1},updateOnGraphicClick:!1,defaultUpdateOptions:{enableMidpoints:!0,enableRotation:!1,enableScaling:!1,enableMoveAllGraphics:!1,enableZ:!1,multipleSelectionEnabled:!1,toggleToolOnClick:!1,enableMoveGraphic:!1,tool:"reshape"},polylineSymbol:o,updatePolylineSymbol:o,activeLineSymbol:o,activeFillSymbol:o}),this._handles.add([_((()=>t.ready),(()=>s(this._pendingStartOptions,(t=>this.start(t))))),u((()=>[this._input,this._visibleAndEditable]),(()=>this._update())),u((()=>({map:t.map,graphicsLayer:this._graphicsLayer})),(({map:t,graphicsLayer:i})=>{e(t)&&e(i)&&t.add(i),this._update()}))],"main")}_destroy(){this._handles.remove("main"),this._sketchVM=i(this._sketchVM),this._creationToolPromise=null,this._updateToolPromise=null;const t=s(this._view,(t=>t.map)),o=this._graphicsLayer;e(t)&&e(o)&&t.remove(o),this._graphicsLayer=i(this._graphicsLayer)}_startCreationInteraction(){this._stopInteractionAndUpdate();const t=this._view,e=this._sketchVM;if(r(t)||r(e))return;this._shouldRemoveLastPoint=!1;const i=e.on("create",(t=>{const e=t.graphic;switch(t.state){case"complete":this._shouldRemoveLastPoint=!1,this._setSketchedGraphic(e),this._stopInteractionAndUpdate(),this._clearPreviousInput();break;case"cancel":this.cancel();break;case"active":this._setSketchedGraphic(e),"cursor-update"===t.toolEventInfo.type&&(this._shouldRemoveLastPoint=!0);break;case"start":this._setSketchedGraphic(e)}})),s=()=>{i.remove(),e.cancel(),this._creationToolPromise=null;const t=this._input;!r(t)&&this.canStopCreating?this._shouldRemoveLastPoint&&this._setSketchedGraphic(new y({geometry:M(t.geometry)})):this._input=null};this._handles.remove("interaction"),this._handles.add(n(s),"interaction"),this._creationToolPromise=l(e.create("polyline"))}_startReshapeInteraction(){this._stopInteraction();const t=this._view,e=this._sketchVM;if(r(t)||r(e))return;const i=e.on("update",(t=>{const e=t.graphics[0];switch(t.state){case"complete":this._setSketchedGraphic(e),this._stopInteractionAndUpdate(),this._clearPreviousInput();break;case"active":case"start":this._setSketchedGraphic(e)}})),o=()=>{i.remove(),e.cancel(),this._updateToolPromise=null};this._handles.remove("interaction"),this._handles.add(n(o),"interaction"),s(this._input,(t=>{t.visible=!0,this._updateToolPromise=l(e.update(t,{tool:"reshape"}))}))}_startSelectionInteraction(){this._stopInteraction();const t=this._view;if(r(t))return;const i=t.cursor,s=n((()=>t.cursor=i));t.cursor="crosshair",t.popup.close();let o=null;const h=n((()=>a(o))),p=t.on("immediate-click",(i=>{i.preventDefault(),i.stopPropagation(),a(o),o=c((async s=>{const{results:o}=await t.hitTest(i);d(s);const r=o.map((t=>t.graphic)).find((t=>e(t.geometry)&&"polyline"===t.geometry.type));r&&(this._input=r,this._clearPreviousInput(),this._stopInteractionAndUpdate())}))})),l=t.on("key-down",(t=>{"Escape"===t.key&&this.cancel()}));this._handles.remove("interaction"),this._handles.add([p,l,h,s],"interaction"),t.ready&&f(t)&&t.focus()}_stopInteraction(){this._handles.remove("interaction")}_stopInteractionAndUpdate(){this._handles.has("interaction")&&(this._updateDisabled=!0,this._stopInteraction(),this._updateDisabled=!1,this._triggerUpdate())}_triggerUpdate(){this._set("state",P.Ready),this._update()}_update(){if(this._updateDisabled)return;const t=this.state;if(t!==P.Selecting){if(this._visibleAndEditable){if(t===P.Creating||t===P.Reshaping&&this.isSketchedGraphic(this._input))return}else this.cancel();this._set("state",this._getNextState()),this._updateVisuals()}else this.stop()}_getNextState(){return r(this._input)?P.Ready:this.isSketchedGraphic(this._input)?this.state===P.Creating?P.Creating:this._visibleAndEditable?P.Reshaping:P.ReshapingDisabled:P.Selected}_updateVisuals(){switch(this.state){case P.Creating:break;case P.Reshaping:this._startReshapeInteraction();break;case P.ReshapingDisabled:{this._stopInteractionAndUpdate();const t=this._input;e(t)&&this.isSketchedGraphic(t)&&(t.visible=!1);break}case P.Ready:case P.Selected:this._stopInteractionAndUpdate();break;case P.Selecting:}this._updateSketchedGraphic()}_storePreviousInput(t){this._previousInputInfo={graphic:t}}_restorePreviousInput(){const t=this._previousInputInfo;r(t)||(this._clearPreviousInput(),this._input=t.graphic,this._triggerUpdate())}_clearPreviousInput(){this._previousInputInfo=null}_updateSketchedGraphic(){const t=this._graphicsLayer;if(r(t))return;const e=t.graphics,i=this._input;if(r(i)||!this.isSketchedGraphic(i))return void e.removeAll();if(-1===e.indexOf(i))e.removeAll(),e.add(i);else if(1!==e.length){const t=e.filter((t=>t!==i));e.removeMany(t)}}_setSketchedGraphic(t){e(t)&&this._sketchedGraphics.add(t),this._input=t,this._updateSketchedGraphic()}};function M(t){if(I(t)){const e=t.clone();return e.paths=[e.paths[0].slice(0,-1)],e}return t}t([h({nonNullable:!0})],G.prototype,"state",void 0),t([h({nonNullable:!0})],G.prototype,"tool",void 0),t([h()],G.prototype,"canStopCreating",null),t([h()],G.prototype,"_graphicsLayer",void 0),t([h()],G.prototype,"_sketchVM",void 0),t([h()],G.prototype,"_input",null),t([h()],G.prototype,"_visibleAndEditable",null),t([h()],G.prototype,"_view",null),t([h()],G.prototype,"_shouldRemoveLastPoint",void 0),G=t([p("esri.widgets.ElevationProfile.ElevationProfileInteraction")],G);export{G as ElevationProfileInteraction,P as State};
