/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isNone as o}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{handlesGroup as e}from"../../core/handleUtils.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{reaction as i}from"../../core/accessorSupport/trackingUtils.js";import l from"../../Color.js";import{ElevationProfileLine as p}from"./ElevationProfileLine.js";import{getQuerySourceMinDemResolution as u}from"./support/elevationQuerySourceUtils.js";let c=class extends p{constructor(r){super(r),this.type="query",this.color=new l("#db334a"),this.source=null,this.numSamplesForPreview=50,this.numSamplesPerChunk=500}get minDemResolution(){return u(this.source)}get available(){const r=this.source;return!!r&&(o(r.visible)||r.visible)&&(o(r.layers)||r.layers.some((r=>r.visible)))}queryElevation(r,o){if(!this.source)throw new Error("No source configured for the elevation profile line");return this.source.queryElevation(r,o)}attach(r){return e([super.attach(r),i((()=>this.source),(()=>this._onChange()))])}};r([t({type:l,nonNullable:!0})],c.prototype,"color",void 0),r([t()],c.prototype,"source",void 0),r([t({readOnly:!0})],c.prototype,"minDemResolution",null),r([t()],c.prototype,"available",null),c=r([s("esri.widgets.ElevationProfile.ElevationProfileLineQuery")],c);var a=c;export default a;
