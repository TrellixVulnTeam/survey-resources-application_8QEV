/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{isNone as e,unwrapOr as t,isSome as n}from"../../../core/maybe.js";import{throwIfAborted as r}from"../../../core/promiseUtils.js";import s from"../../../geometry/SpatialReference.js";import o from"../../../geometry/Polyline.js";import{lerp as a}from"../../../core/mathUtils.js";import{e as i}from"../../../chunks/vec3.js";import{getMetersPerUnitForSR as c}from"../../../core/unitUtils.js";import{initializeProjection as u,project as f}from"../../../geometry/projection.js";import{geodesicLengths as l,inverseGeodeticSolver as h,directGeodeticSolver as p,isSupported as m}from"../../../geometry/support/geodesicUtils.js";import{i as d,m as g}from"../../../chunks/vec2.js";import{ProfileGenerationError as w}from"./ProfileGenerationError.js";async function y(e,t,n,o,a,i,h){let p,m,d;const g=e.spatialReference,y=g.isGeographic||g.isWebMercator,v=await import("../../../geometry/geometryEngineAsync.js");r(h);let P=0;y||(P=await v.planarLength(e,"meters"),r(h));const Z=1/c(o);if(y||P>=a.geodesicDistanceThreshold){await u([{source:g,dest:o},{source:g,dest:s.WGS84}],h);const r=L(e);p=l([r],"meters")[0];const c=R(p,a);if(q(e,p,c)>i)throw new w("too-complex");const y=j(r,t,n);({densifiedPath:m,distances:d}=z(y,c,Z)),m=f(m,o)}else{await u([{source:g,dest:o}],h),p=P;const s=R(p,a);if(q(e,p,s)>i)throw new w("too-complex");const c=j(e,t,n);({densifiedPath:m,distances:d}=b(c,s,Z)),r(h),m=f(m,o)}return{densifiedPath:m,pathLength:p*Z,distances:d}}function R(e,t){const n=e/t.densificationMaxSamples;return Math.max(t.samplingDistance,n)}function j(n,r,s){if(e(r))return Z(n);const a=n.spatialReference,i=r.mode,c=t(r.offset,0);let u=null;switch(s.type){case"2d":u=v(n,i,c);break;case"3d":u=P(n,i,c,s)}return e(u)?Z(n):new o({hasZ:!0,hasM:!1,spatialReference:a,paths:A(n.paths,u)})}function v({hasZ:e},t,n){switch(t){case"absolute-height":return e?([e,t,r])=>[e,t,r+n]:([e,t])=>[e,t,n];default:return null}}function P({spatialReference:e,hasZ:n},r,s,{elevationProvider:o}){const a=(n,r,s,a)=>t(o.getElevation(n,r,s,e,a),0);switch(r){case"on-the-ground":return([e,t])=>[e,t,a(e,t,0,"ground")];case"absolute-height":return n?([e,t,n])=>[e,t,n+s]:([e,t])=>[e,t,s];case"relative-to-ground":return n?([e,t,n])=>[e,t,n+a(e,t,n,"ground")+s]:([e,t])=>[e,t,a(e,t,0,"ground")+s];case"relative-to-scene":return n?([e,t,n])=>[e,t,n+a(e,t,n,"scene")+s]:([e,t])=>[e,t,a(e,t,0,"scene")+s];default:return null}}function Z(e){return e.hasZ?new o({hasZ:!1,hasM:!1,spatialReference:e.spatialReference,paths:A(e.paths,(([e,t])=>[e,t]))}):e}function A(e,t){const n=e.length,r=new Array(n);for(let s=0;s<n;++s){const n=e[s],o=n.length,a=new Array(n.length);r[s]=a;for(let e=0;e<o;++e)a[e]=t(n[e])}return r}function M(e){return x(e)&&e.paths.length>0&&e.paths.every((e=>e.length>=2))}function x(e){return n(e)&&"polyline"===e.type}function S(e,t,n,r,s){const{spatialReference:a,hasZ:i}=e,u={from:null,to:null,distance:0,azimuth:0,reverseAzimuth:0,spatialReference:a,metersPerSR:c(a)},f=new Array(e.paths.length),l=new Array(e.paths.length);let h=0;for(let o=0;o<e.paths.length;++o){const a=e.paths[o],i=new Array,c=new Array;let p=0;for(let e=1;e<a.length;++e){const o=a[e-1],f=a[e],l=r(u,o,f);let m;for(m=p;m<l.distance;m+=t)i.push(s(l,m)),c.push((h+m)*n);p=m-l.distance,h+=l.distance,i.push(f),c.push(h*n)}f[o]=i,l[o]=c}return{densifiedPath:new o({spatialReference:a,hasZ:i,paths:f}),distances:l}}function b(e,t,n){const{hasZ:r}=e;return S(e,t,n,U,r?D:W)}function z(e,t,n){const{hasZ:r}=e;return S(e,t,n,G,r?E:k)}function G(e,t,n){return e.distance=0,h(e,t,n,e.spatialReference),e.from=t,e.to=n,e}function U(e,t,n){return e.from=t,e.to=n,e.distance=d(n,t)*e.metersPerSR,e}function k({from:e,azimuth:t,spatialReference:n},r){return p([0,0],e,t,r,n)}function E({from:e,to:t,azimuth:n,distance:r,spatialReference:s},o){const i=o/r,c=[0,0,a(e[2],t[2],i)];return p(c,e,n,o,s),c}function W({from:e,to:t,distance:n},r){return g([0,0],e,t,r/n)}function D({from:e,to:t,distance:n},r){return i([0,0,0],e,t,r/n)}function L(e){return m(e.spatialReference)?e:f(e,s.WGS84)}function T(e){return e.paths.reduce(((e,t)=>e+t.length),0)}function q(e,t,n){return T(e)+Math.floor(t/n)+Math.max(0,e.paths.reduce((e=>1+e),0)-1)}export{T as countPoints,y as densifyPath,x as isPolyline,M as isValidInputPath,j as toAbsoluteHeightElevation};
