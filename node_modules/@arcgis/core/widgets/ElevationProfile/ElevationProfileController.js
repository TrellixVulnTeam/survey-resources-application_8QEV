/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as t,isNone as r,applySome as s,abortMaybe as o,unwrapOr as i}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{handlesGroup as a}from"../../core/handleUtils.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{createTask as p,throwIfAborted as m,throwIfAbortError as h,ignoreAbortErrors as d}from"../../core/promiseUtils.js";import{reactionInit as c}from"../../core/accessorSupport/trackingUtils.js";import u from"../../core/Accessor.js";import f from"../../core/Handles.js";import{memoize as _}from"../../core/memoize.js";import{throttle as P}from"../../core/throttle.js";import{hasGraphicFeatureExpressionInfo as g,getGraphicEffectiveElevationInfo as v}from"../../support/elevationInfoUtils.js";import{DEFAULT_DEM_RESOLUTION as j,DENSIFICATION_MAX_SAMPLES as M,MAX_TOTAL_SAMPLES as y,UPDATE_THROTTLE_MILLIS as w}from"./support/constants.js";import{isPolyline as U,isValidInputPath as b}from"./support/geometryUtils.js";import{generateProfiles as T}from"./support/profileUtils.js";const z="line-change";let k=class extends u{constructor(e){super(e),this._handles=new f,this._updateTask=null,this._paramsPerProfile=new Map,this._getUpdateParametersMemoized=_(((e,t,r)=>({stationary:e,visibleProfiles:t,generationParameters:r}))),this._getGenerationParametersMemoized=_(((e,t,s,o,i,a)=>U(t)&&b(t)&&!r(o)?{view:e,geometry:t,elevationInfo:s,options:a,queue:o,cache:i}:null)),this._getOptionsMemoized=_(((e,t,r)=>({geodesicDistanceThreshold:e,samplingDistance:i(t,j),densificationMaxSamples:Math.round(M/r),maxTotalSamples:y}))),this._updateThrottled=P((e=>d(this._update(e))),w)}initialize(){const e=this.viewModel;this._handles.add([c((()=>e.profiles.toArray()),(e=>{this._abortUpdate(),this._paramsPerProfile.clear(),this._handles.remove(z),this._handles.add(e.map((e=>a([e.attach(this.viewModel),e.on("change",(()=>{this._invalidateProfile(e)}))]))),z)})),this._updateThrottled,c((()=>this._updateParameters),this._updateThrottled)])}destroy(){this._handles.destroy(),this._paramsPerProfile.clear()}get _updateParameters(){const{viewModel:e}=this,r=e.view;return this._getUpdateParametersMemoized(!t(r)||r.stationary,this.viewModel.visibleProfiles,this._generationParameters)}get _generationParameters(){const{view:e,input:t,queue:o,tileCache:i}=this.viewModel;if(r(e))return null;const a=s(t,(e=>e.geometry)),l=s(t,(e=>g(e)?null:v(e)));return this._getGenerationParametersMemoized(e,a,l,o,i,this._options)}get _options(){const e=this.viewModel,t=e.visibleProfiles.length;return this._getOptionsMemoized(e.geodesicDistanceThreshold,e.minDemResolution,t)}async _update({stationary:e,visibleProfiles:t,generationParameters:s}){this._abortUpdate(),e&&(r(s)?this._clearResults():this._updateTask=p((async e=>{this.viewModel.error=null;const r=t.filter((e=>!this._isProfileValid(e,s))),o=T({...s,providers:r},{signal:e});try{for await(const t of o){m(e),this._clearInvalidResults(s);for(let e=0;e<r.length;e++)r[e].result=t[e]}for(const e of r)this._paramsPerProfile.set(e,s)}catch(i){h(i),this._abortUpdate(),this.viewModel.error=i,r.forEach((e=>{e.result=null}))}})))}_abortUpdate(){this._updateTask=o(this._updateTask)}_isProfileValid(e,t){return this._paramsPerProfile.has(e)&&this._paramsPerProfile.get(e)===t}_invalidateProfile(e){this._paramsPerProfile.delete(e),this._updateThrottled(this._updateParameters)}_clearInvalidResults(e){for(const t of this.viewModel.profiles.items)this._isProfileValid(t,e)||(t.result=null,this._paramsPerProfile.delete(t))}_clearResults(){for(const e of this.viewModel.profiles.items)e.result=null,this._paramsPerProfile.delete(e)}};e([l({nonNullable:!0})],k.prototype,"viewModel",void 0),e([l()],k.prototype,"_updateParameters",null),e([l()],k.prototype,"_generationParameters",null),e([l()],k.prototype,"_options",null),k=e([n("esri.widgets.ElevationProfile.ElevationProfileController")],k);export{k as ElevationProfileController};
