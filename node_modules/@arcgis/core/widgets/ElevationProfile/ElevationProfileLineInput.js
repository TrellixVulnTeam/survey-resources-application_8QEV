/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isNone as o,applySome as t,unwrapOr as r}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{handlesGroup as i}from"../../core/handleUtils.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import a from"../../Color.js";import{on as l}from"../../core/watchUtils.js";import{memoize as p}from"../../core/memoize.js";import{getGraphicEffectiveElevationInfo as c}from"../../support/elevationInfoUtils.js";import{ElevationProfileLine as u}from"./ElevationProfileLine.js";import{GeometryDescriptor as v}from"../../layers/support/ElevationQuery.js";let m=class extends u{constructor(e){super(e),this.type="input",this.color=new a("#00c8c8"),this.numSamplesForPreview=50,this.numSamplesPerChunk=500,this.chartFillEnabled=!1,this.chartStrokeOffsetY=-1,this._getQueryElevationDependencies=p(((e,o,r,i,n)=>t(e,(e=>({elevationInfo:e,visibleLayers:o,view:r,stationary:i,spatialReference:n})))))}get queryElevationDependencies(){const e=this._viewModel.view;return o(e)?null:this._getQueryElevationDependencies(this._elevationInfo,this._visibleLayers,e,e.stationary,e.spatialReference)}get available(){return!this._viewModel.inputIsSketched}get _elevationInfo(){return t(this._viewModel.input,c)}get _visibleLayers(){var e;const o=null==(e=this._viewModel)?void 0:e.view,i=t(o,(e=>{var o,t;return null==(o=e.map)||null==(t=o.allLayers)?void 0:t.filter((e=>e.visible)).toArray()}));return r(i,[])}async queryElevation(e,{noDataValue:t,signal:i}){const n=this.queryElevationDependencies;if(o(n))throw new Error("ElevationProfileLineInput: no dependencies");const{view:s,elevationInfo:a,spatialReference:l}=n;if("on-the-ground"===a.mode&&"3d"===s.type){const o=await v.fromGeometry(e).project(l,i),n=s.elevationProvider;return o.coordinates.forEach((e=>{e.z=r(n.getElevation(e.x,e.y,0,l,"ground"),0)})),{geometry:o.export(),noDataValue:t}}return{geometry:e,noDataValue:t}}attach(e){const o=()=>this._onChange();return i([super.attach(e),this.watch("queryElevationDependencies",o),l(e,"view.elevationProvider","elevation-change",o)])}};e([n({type:a,nonNullable:!0})],m.prototype,"color",void 0),e([n()],m.prototype,"queryElevationDependencies",null),e([n()],m.prototype,"available",null),e([n()],m.prototype,"_elevationInfo",null),e([n()],m.prototype,"_visibleLayers",null),m=e([s("esri.widgets.ElevationProfile.ElevationProfileLineInput")],m);var h=m;export default h;
