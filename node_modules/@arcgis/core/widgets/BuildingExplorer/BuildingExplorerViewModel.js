/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as s}from"../../core/maybe.js";import t from"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{isAbortError as o}from"../../core/promiseUtils.js";import l from"../../core/Accessor.js";import a from"../../core/Collection.js";import{referenceSetter as p}from"../../core/collectionUtils.js";import n from"../../core/Handles.js";import{init as d,whenEqualOnce as h}from"../../core/watchUtils.js";import y from"../../layers/support/BuildingFilter.js";import c from"../../layers/BuildingSceneLayer.js";import{showFullModel as m}from"./support/buildingLayerUtils.js";import{createLoadLayersFunction as u}from"./support/layerUtils.js";import f from"./BuildingDisciplinesViewModel.js";import{setFilterOnLayers as g,getFilterBlockSolid as j,getFilterBlockXRay as v,generateFilterId as _}from"./support/filterUtils.js";import w from"./BuildingLevel.js";import B from"./BuildingPhase.js";const x=t.getLogger("esri.widgets.BuildingExplorer.BuildingExplorerViewModel");let L=class extends l{constructor(e){super(e),this.view=null,this.state="disabled",this.level=new w,this.phase=new B,this.disciplines=new f,this._handles=new n,this._loadLayers=u(),this.layers=new a}initialize(){this._handles.add([this.layers.on("change",(()=>this._onLayersChange())),d(this,"_filter",(()=>g(this.layers,this._filter)))]),this._onLayersChange()}destroy(){this._handles.destroy(),this.level.destroyed||this.level.destroy(),this.phase.destroyed||this.phase.destroy(),this.disciplines.destroyed||this.disciplines.destroy()}get isSupported(){var e;return"3d"===(null==(e=this.view)?void 0:e.type)}set layers(e){const s=e.filter((e=>e instanceof c));s.length!==e.length&&x.error("Some layers are not BuildingSceneLayers but only BuildingSceneLayers can be passed to the widget."),this._set("layers",p(s,this._get("layers")))}get _filter(){const e=this.level.filterExpressions,t=this.phase.filterExpressions,r=[],i=j([e.solid,t.solid]);s(i)&&r.push(i);const o=v([e.xRay,t.xRay]);return s(o)&&r.push(o),0===r.length?null:new y({id:_(),name:"Building Explorer Filter",filterBlocks:r})}async _onLayersChange(){if(this.level.layers=this.layers,this.phase.layers=this.layers,this.disciplines.layers=this.layers,0!==this.layers.length){this._set("state","loading");try{await this._loadLayers(this.layers),await Promise.all([h(this.level,"state","ready"),h(this.phase,"state","ready"),h(this.disciplines,"state","ready")]),this.layers.forEach(m),this._set("state","ready")}catch(e){o(e)||this._set("state","failed")}}else this._set("state","disabled")}};e([r({value:null})],L.prototype,"view",void 0),e([r()],L.prototype,"isSupported",null),e([r({type:a,nonNullable:!0})],L.prototype,"layers",null),e([r({readOnly:!0})],L.prototype,"state",void 0),e([r({readOnly:!0,type:w})],L.prototype,"level",void 0),e([r({readOnly:!0,type:B})],L.prototype,"phase",void 0),e([r({readOnly:!0,type:f})],L.prototype,"disciplines",void 0),e([r({readOnly:!0})],L.prototype,"_filter",null),L=e([i("esri.widgets.BuildingExplorer.BuildingExplorerViewModel")],L);var b=L;export default b;
