/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../core/has.js";import{isSome as t}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import{makeHandle as i}from"../../core/handleUtils.js";import"../../core/accessorSupport/decorators/property.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/urlUtils.js";import"../../core/uuid.js";import"../../portal/support/resourceExtension.js";import{createAbortController as r,onAbort as s,createAbortError as o,throwIfAborted as d,isAborted as n}from"../../core/promiseUtils.js";import{watch as l}from"../../core/watchUtils.js";import{highlightsSupported as c}from"../../views/support/layerViewUtils.js";import u from"./Edits.js";import m from"./Workflow.js";import{fetchCandidates as p,fetchFullFeature as h,findLayerInfo as f,getVisualVariableAttributes as g,setUpGeometryUpdate as w}from"./workflowUtils.js";import v from"./UpdateWorkflowData.js";var y;const b="candidate-highlight";let M=y=class extends m{constructor(e){super(e),this.type="update"}static create(e,t,i){const a=new v({edits:new u,viewModel:e}),r=new y({data:a,afterCommit:i});return r._set("steps",this._createWorkflowSteps(r,t)),r}highlight(e){const{data:{viewModel:{view:t}}}=this,i=e&&t.allLayerViews.items.find((({layer:t})=>t===e.layer));c(i)&&this.handles.add(i.highlight(e),b)}unhighlight(){this.handles.remove(b)}static _createWorkflowSteps(e,a="awaiting-feature-to-update"){const{data:c,handles:u}=e,m={"awaiting-feature-to-update":()=>({id:"awaiting-feature-to-update",async setUp(){const{spinnerViewModel:e,view:t}=c.viewModel;let i=null;u.add({remove(){i&&(i.abort(),i=null)}},this.id),c.edits.feature=null;const a=t.on("immediate-click",(a=>{e.location=a.mapPoint,e.visible=!0,i&&i.abort();const{editableItems:n}=c.viewModel;i=r(),new Promise(((e,r)=>{s(i.signal,(()=>r(o()))),e(p(n,t,a,i.signal))})).then((e=>{if(c.viewModel.spinnerViewModel.visible=!1,d(i),c.candidates=e.reduce(((e,t)=>t.error?e:[...e,...t.value]),[]),0!==c.candidates.length)if(1===c.candidates.length){const e=c.candidates[0];c.edits.feature=e,c.viewModel.activeWorkflow.go("editing-existing-feature")}else c.viewModel.activeWorkflow.next()}))}));u.add(a,this.id)},async tearDown(){u.remove(this.id)}}),"awaiting-update-feature-candidate":()=>({id:"awaiting-update-feature-candidate",async setUp(){const{edits:t}=c;t.feature=null,u.add(l(t,"feature",(t=>{e.unhighlight(),e.highlight(t)})),this.id)},async tearDown(){e.unhighlight(),u.remove(this.id)}}),"editing-existing-feature":()=>({id:"editing-existing-feature",async setUp(){const a=c.edits.feature,s=c.viewModel;c.editableItem=s.editableItems.find((e=>e.layer===a.layer));const o=r();u.add({remove:()=>o.abort()},this.id);const d=s.view.whenLayerView(a.layer),l=h(a,s.view,o.signal),m=await d,p=await l;if(n(o))return;c.edits.updateGeometry(p.geometry),c.edits.updateAttributes(p.attributes),c.edits.trackChanges();const v=p.layer,y=f(s.layerInfos,v),b=y&&y.fieldConfig;s.attachmentsViewModel.set({graphic:p,mode:"view"}),s.featureFormViewModel.set({feature:p,fieldConfig:b});const M="createInteractiveEditSession"in m?m.createInteractiveEditSession(a):null,j=[s.featureFormViewModel.on("value-change",(e=>{c.edits.updateAttributes(s.featureFormViewModel.getValues()),p.attributes=c.edits.feature.attributes,M&&M.setAttribute(e.fieldName,e.value)})),s.attachmentsViewModel.watch("mode",(e=>{"add"===e&&c.viewModel.activeWorkflow.go("adding-attachment"),"edit"===e&&c.viewModel.activeWorkflow.go("editing-attachment")}))];M&&(j.push(i((()=>M.rollback()))),u.add(i((()=>M.commit())),e._handleKeys.afterCommit));const{supportsGeometryUpdate:V}=v.capabilities.editing;if(V){const i=g(p),{interactive:a,visual:r}=await w(p,i,s.sketchViewModel,s.view,(({geometry:e,attributes:a})=>{if(t(i.rotation)){const{field:e}=i.rotation;s.featureFormViewModel.setValue(e,a[e])}if(t(i.size)){const{field:e}=i.size;s.featureFormViewModel.setValue(e,a[e])}c.edits.updateAttributes(a),c.edits.updateGeometry(e)}));j.push(a,r),u.add(a,e._handleKeys.beforeCommit),u.add(r,e._handleKeys.afterCommit)}else e.highlight(p);u.add(j,this.id)},async tearDown(){e.unhighlight(),u.remove(this.id)}}),"adding-attachment":()=>({id:"adding-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){}}),"editing-attachment":()=>({id:"editing-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){}})};let v=!1;return["awaiting-feature-to-update","awaiting-update-feature-candidate","editing-existing-feature","adding-attachment","editing-attachment"].filter((e=>!!v||(v=e===a,v))).map((e=>m[e]()))}};M=y=e([a("esri.widgets.Editor.UpdateWorkflow")],M);var j=M;export default j;
