/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
import t from"../../geometry/Point.js";import{segmentIntersects as n}from"../../geometry/support/intersects.js";function e(t,n,e){const o={x:0,y:0};n&&(o.z=0),e&&(o.m=0);let a=0,f=t[0];for(let l=0;l<t.length;l++){const c=t[l];if(!1===h(c,f)){const t=s(f,c,n),h=r(f,c,n,e);h.x*=t,h.y*=t,o.x+=h.x,o.y+=h.y,n&&(h.z*=t,o.z+=h.z),e&&(h.m*=t,o.m+=h.m),a+=t,f=c}}return a>0?(o.x/=a,o.y/=a,n&&(o.z/=a),e&&(o.m/=a)):(o.x=t[0][0],o.y=t[0][1],n&&(o.z=t[0][2]),e&&n?o.m=t[0][3]:e&&(o.m=t[0][2])),o}function r(t,n,e,r){const o={x:(t[0]+n[0])/2,y:(t[1]+n[1])/2};return e&&(o.z=(t[2]+n[2])/2),e&&r?o.m=(t[3]+n[3])/2:r&&(o.m=(t[2]+n[2])/2),o}function o(t,n){if(t.length<=1)return 0;let e=0;for(let r=1;r<t.length;r++)e+=s(t[r-1],t[r],n);return e}function s(t,n,e){const r=n[0]-t[0],o=n[1]-t[1];if(e){const t=n[2]-n[2];return Math.sqrt(r*r+o*o+t*t)}return Math.sqrt(r*r+o*o)}function h(t,n){if(t.length!==n.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==n[e])return!1;return!0}function a(n){const r={x:0,y:0,spatialReference:n.spatialReference.toJSON()},s={x:0,y:0,spatialReference:n.spatialReference.toJSON()};let h=0,a=0;for(let t=0;t<n.paths.length;t++){if(0===n.paths[t].length)continue;const f=o(n.paths[t],!0===n.hasZ);if(0===f){const o=e(n.paths[t],!0===n.hasZ,!0===n.hasM);r.x+=o.x,r.y+=o.y,!0===n.hasZ&&(r.z+=o.z),!0===n.hasM&&(r.m+=o.m),++h}else{const r=e(n.paths[t],!0===n.hasZ,!0===n.hasM);s.x+=r.x*f,s.y+=r.y*f,!0===n.hasZ&&(s.z+=r.z*f),!0===n.hasM&&(s.m+=r.m*f),a+=f}}return a>0?(s.x/=a,s.y/=a,!0===n.hasZ&&(s.z/=a),!0===n.hasM&&(s.m/=a),new t(s)):h>0?(r.x/=h,r.y/=h,!0===n.hasZ&&(s.z/=h),!0===n.hasM&&(r.m/=h),new t(r)):null}function f(n){if(0===n.points.length)return null;let e=0,r=0,o=0,s=0;for(let t=0;t<n.points.length;t++){const h=n.getPoint(t);!0===h.hasZ&&(o+=h.z),!0===h.hasM&&(s+=h.m),e+=h.x,r+=h.y,s+=h.m}const h={x:e/n.points.length,y:r/n.points.length,spatialReference:null};return h.spatialReference=n.spatialReference.toJSON(),!0===n.hasZ&&(h.z=o/n.points.length),!0===n.hasM&&(h.m=s/n.points.length),new t(h)}function l(t,n){return t.x*n.x+t.y*n.y}function c(t,n){return t.x*n.y-n.x*t.y}function i(t,n,e=0){for(;t<e;)t+=n;const r=e+n;for(;t>=r;)t-=n;return t}function u(t,n){return Math.atan2(n.y-t.y,n.x-t.x)}function y(t,n){return i(u(t,n),2*Math.PI)*(180/Math.PI)}function x(t,n){return i(Math.PI/2-u(t,n),2*Math.PI)*(180/Math.PI)}function m(t,n,e){const r={x:t.x-n.x,y:t.y-n.y},o={x:e.x-n.x,y:e.y-n.y};return Math.atan2(c(r,o),l(r,o))}function p(t,n,e){return i(m(t,n,e),2*Math.PI)*(180/Math.PI)}function g(t,n,e){return i(-1*m(t,n,e),2*Math.PI)*(180/Math.PI)}const M=[0,0];function z(t){for(let e=0;e<t.length;e++){const r=t[e];for(let s=0;s<r.length-1;s++){const o=r[s],h=r[s+1];for(let r=e+1;r<t.length;r++)for(let e=0;e<t[r].length-1;e++){const s=t[r][e],a=t[r][e+1];if(n(o,h,s,a,M)&&!(M[0]===o[0]&&M[1]===o[1]||M[0]===s[0]&&M[1]===s[1]||M[0]===h[0]&&M[1]===h[1]||M[0]===a[0]&&M[1]===a[1]))return!0}}const o=r.length;if(!(o<3))for(let t=0;t<=o-2;t++){const e=r[t],s=r[t+1];for(let h=t+2;h<=o-2;h++){const t=r[h],o=r[h+1];if(n(e,s,t,o,M)&&!(M[0]===e[0]&&M[1]===e[1]||M[0]===t[0]&&M[1]===t[1]||M[0]===s[0]&&M[1]===s[1]||M[0]===o[0]&&M[1]===o[1]))return!0}}}return!1}export{y as angle2D,p as angleBetween2D,m as angleBetweenRad,u as angleRad,x as bearing2D,g as bearingBetween2D,f as centroidMultiPoint,a as centroidPolyline,z as pathsSelfIntersecting};
